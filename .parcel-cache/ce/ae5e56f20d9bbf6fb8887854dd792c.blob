'use strict';

var helpers = require("../../../@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  var global = arguments[3];

  var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

  var _typeof3 = _interopRequireDefault2(require("@babel/runtime/helpers/typeof"));

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  function _interopDefault(ex) {
    return ex && (0, _typeof3["default"])(ex) === 'object' && 'default' in ex ? ex['default'] : ex;
  }

  var React = require('react');

  var React__default = _interopDefault(React);

  var core = require('@emotion/core');
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */


  var _assign = function __assign() {
    _assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
      }

      return t;
    };

    return _assign.apply(this, arguments);
  };

  function __rest(s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }

  function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, "raw", {
        value: raw
      });
    } else {
      cooked.raw = raw;
    }

    return cooked;
  }

  var typography = {
    fonts: {
      base: "Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif",
      headers: "Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif"
    },
    weights: {
      thin: "100",
      light: "300",
      regular: "400",
      medium: "500",
      bold: "700"
    },
    sizes: {
      hero: "4rem",
      h1: "3rem",
      h2: "2.5rem",
      h3: "2rem",
      h4: "1.5rem",
      h5: "1.1rem",
      h6: "0.9rem",
      subtitle1: "1.1rem",
      subtitle2: "0.9rem",
      body1: "1.1rem",
      body2: "0.9rem",
      caption: "0.8rem",
      overhead: "0.8rem",
      button: {
        large: "1rem",
        medium: "0.8rem",
        small: "0.7rem"
      },
      icon: {
        xxlarge: "2rem",
        xlarge: "1.5rem",
        large: "1.2rem",
        medium: "1rem",
        small: "0.8rem"
      }
    }
  };
  var colors = {
    white: "#FFFFFF",
    black: "#000000",
    gray: {
      900: "#0B0C0F",
      800: "#181C20",
      700: "#272D33",
      600: "#343D44",
      500: "#424E57",
      400: "#52616B",
      300: "#7B8A95",
      200: "#B5C1C9",
      100: "#DAE2EB",
      50: "#F4F6F8"
    },
    blue: {
      900: "#030041",
      700: "#261EE4",
      600: "#2F2FF4",
      500: "#4038FF",
      400: "#5252FF",
      300: "#6C6CFF",
      100: "#B4BBFF",
      50: "#E0E1FF"
    },
    success: "#1CCB00",
    error: "#B00020"
  };
  var spacing = {
    xxs: "4px",
    xs: "8px",
    s: "12px",
    m: "16px",
    l: "20px",
    xl: "24px",
    xxl: "32px",
    xxxl: "40px",
    xxxxl: "48px",
    xxxxxl: "64px"
  };
  var breakpoints = {
    small: "21rem",
    medium: "48rem",
    large: "72rem"
  };

  var Reducer = function Reducer(run) {
    return {
      run: run,
      concat: function concat(other) {
        return Reducer(function (styles, props) {
          return other.run(run(styles, props), props);
        });
      },
      map: function map(f) {
        return Reducer(function (styles, props) {
          return f(run(styles, props));
        });
      },
      contramap: function contramap(f) {
        return Reducer(function (styles, props) {
          return run(styles, f(props));
        });
      }
    };
  };

  function combineReducers() {
    var reducers = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      reducers[_i] = arguments[_i];
    }

    return reducers.reduce(function (acc, reducer) {
      return acc.concat(Reducer(reducer));
    }, Reducer(function () {
      return {};
    }));
  }

  function makeStyles(reducers) {
    var reducer = combineReducers.apply(void 0, reducers);
    return function (props) {
      var styles = reducer.run({}, props);
      return /*#__PURE__*/core.css(styles, "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLXJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JlIiwiZmlsZSI6InN0eWxlLXJlZHVjZXIudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xyXG5leHBvcnQgdmFyIFJlZHVjZXIgPSBmdW5jdGlvbiAocnVuKSB7IHJldHVybiAoe1xyXG4gICAgcnVuOiBydW4sXHJcbiAgICBjb25jYXQ6IGZ1bmN0aW9uIChvdGhlcikgeyByZXR1cm4gUmVkdWNlcihmdW5jdGlvbiAoc3R5bGVzLCBwcm9wcykgeyByZXR1cm4gb3RoZXIucnVuKHJ1bihzdHlsZXMsIHByb3BzKSwgcHJvcHMpOyB9KTsgfSxcclxuICAgIG1hcDogZnVuY3Rpb24gKGYpIHsgcmV0dXJuIFJlZHVjZXIoZnVuY3Rpb24gKHN0eWxlcywgcHJvcHMpIHsgcmV0dXJuIGYocnVuKHN0eWxlcywgcHJvcHMpKTsgfSk7IH0sXHJcbiAgICBjb250cmFtYXA6IGZ1bmN0aW9uIChmKSB7IHJldHVybiBSZWR1Y2VyKGZ1bmN0aW9uIChzdHlsZXMsIHByb3BzKSB7IHJldHVybiBydW4oc3R5bGVzLCBmKHByb3BzKSk7IH0pOyB9LFxyXG59KTsgfTtcclxuZXhwb3J0IGZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycygpIHtcclxuICAgIHZhciByZWR1Y2VycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICByZWR1Y2Vyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlZHVjZXJzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCByZWR1Y2VyKSB7IHJldHVybiBhY2MuY29uY2F0KFJlZHVjZXIocmVkdWNlcikpOyB9LCBSZWR1Y2VyKGZ1bmN0aW9uICgpIHsgcmV0dXJuICh7fSk7IH0pKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gbWFrZVN0eWxlcyhyZWR1Y2Vycykge1xyXG4gICAgdmFyIHJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMuYXBwbHkodm9pZCAwLCByZWR1Y2Vycyk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICAgICAgdmFyIHN0eWxlcyA9IHJlZHVjZXIucnVuKHt9LCBwcm9wcyk7XHJcbiAgICAgICAgcmV0dXJuIGNzcyhzdHlsZXMpO1xyXG4gICAgfTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS1yZWR1Y2VyLmpzLm1hcCJdfQ== */");
    };
  }

  function stripInline(str) {
    return str.replace(/inline-?/gi, "") || "block";
  }

  function log(styles, props) {
    console.log("styles", styles);
    console.log("props", props);
    return styles;
  }

  var dimensionsFromProps = function dimensionsFromProps(styles, _a) {
    if (styles === void 0) {
      styles = {};
    }

    var full = _a.full;
    var display;

    if (styles.display == null) {
      display = "block";
    }

    display = styles.display;

    var finalStyles = _assign(_assign({}, styles), {
      display: full && display.includes("inline") ? stripInline(display) : display,
      width: full ? "100%" : styles.width || ""
    });

    return finalStyles;
  };

  var disabled = function disabled(styles, _a) {
    if (styles === void 0) {
      styles = {};
    }

    var disabled = _a.disabled;

    if (!disabled) {
      return styles;
    }

    return _assign(_assign({}, unsetStyles(styles)), {
      backgroundColor: colors.gray[100],
      color: colors.white
    });
  };

  function unsetStyles(styles) {
    // Filter and unset all properties that give color, on all states.
    // Need to add more?
    var colorProperties = ["color", "backgroundColor", "borderColor", "boxShadow", "fill", "stroke"];
    var filteredEntries = Object.entries(styles).map(function (_a) {
      var key = _a[0],
          value = _a[1]; // If it has a psuedo selector, we're going to disable color from that as well.

      if (key.includes("&:hover") || key.includes("&:active") || key.includes("&:focus")) {
        return unsetStyles(value);
      } else if (colorProperties.includes(key)) {
        return [key, "unset"];
      }

      return [key, value];
    });
    return Object.fromEntries(filteredEntries);
  }

  var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    typography: typography,
    colors: colors,
    spacing: spacing,
    breakpoints: breakpoints,
    log: log,
    dimensionsFromProps: dimensionsFromProps,
    disabled: disabled
  });

  var baseStyles = function baseStyles() {
    return {
      borderWidth: "1px",
      borderStyle: "solid",
      fontFamily: typography.fonts.base,
      fontWeight: typography.weights.medium,
      display: "inline-flex",
      justifyContent: "center",
      alignItems: "center",
      color: colors.white,
      "&::selected": {
        background: "transparent"
      }
    };
  };

  var colorFromType = function colorFromType(styles, _a) {
    if (styles === void 0) {
      styles = {};
    }

    var type = _a.type;

    switch (type) {
      case "primary":
        return _assign(_assign({}, styles), {
          backgroundColor: colors.blue[500],
          borderColor: colors.blue[500],
          "&:hover": {
            backgroundColor: colors.blue[700],
            borderColor: colors.blue[700],
            color: colors.white
          },
          "&:active": {
            backgroundColor: colors.blue[900],
            borderColor: colors.blue[900],
            color: colors.white
          }
        });

      case "secondary":
        return _assign(_assign({}, styles), {
          color: colors.blue[500],
          backgroundColor: colors.black,
          borderColor: colors.blue[500],
          "&:hover": {
            borderColor: colors.blue[700],
            color: colors.blue[300]
          },
          "&:active": {
            borderColor: colors.blue[700],
            color: colors.blue[700]
          }
        });

      default:
        return _assign({}, styles);
    }
  };

  var paddingFromType = function paddingFromType(styles, _a) {
    var _b = _a.size,
        size = _b === void 0 ? "regular" : _b,
        children = _a.children,
        full = _a.full;
    var buttonHeight = size === "regular" ? "20px" : size === "small" ? "15px" : "10px";
    return _assign(_assign({}, styles), {
      margin: "0 " + (full ? "0" : "15px") + " 0 0",
      padding: size === "regular" ? !!children ? "14px 17px" : "14px" : size === "small" ? !!children ? "12px 14px" : "12px" : "10px",
      fontSize: size === "regular" ? typography.sizes.button.large : size === "small" ? typography.sizes.button.medium : typography.sizes.button.small,
      height: buttonHeight,
      maxHeight: buttonHeight
    });
  };

  var iconStyles = function iconStyles(styles, _a) {
    var children = _a.children,
        size = _a.size;
    return _assign(_assign({}, styles), {
      marginRight: children != null ? "10px" : "0",
      fontSize: size === "regular" ? typography.sizes.icon.large : size === "small" ? typography.sizes.icon.medium : typography.sizes.icon.small,
      flexShrink: 0,
      "& > *": {
        stroke: "currentColor"
      }
    });
  };

  var useCSS = function useCSS(props) {
    return {
      container: makeStyles([baseStyles, colorFromType, dimensionsFromProps, paddingFromType, disabled])(props),
      icon: makeStyles([iconStyles])(props)
    };
  }; // 	text,
  // 	type = "primary",
  // 	width = "normal",
  // 	size = "regular",
  // 	disabled = false,
  // }: ButtonStyleProps) => {
  //
  // 	const primaryButton = {
  // 		container: css`
  // 			border: 1px solid ${colors.blue[500]};
  // 			color: ${colors.white};
  // 			background-color: ${colors.blue[500]};
  // 			padding: ${size === "regular"
  // 				? !!text
  // 					? "14px 17px"
  // 					: "14px"
  // 				: size === "small"
  // 				? !!text
  // 					? "12px 14px"
  // 					: "12px"
  // 				: "10px"};
  // 			font-size: ${size === "regular"
  // 				? typography.sizes.button.large
  // 				: size === "small"
  // 				? typography.sizes.button.medium
  // 				: typography.sizes.button.small};
  //
  //
  // 		`,
  // 	};
  // 	const secondaryButton = {
  // 		container: css`
  // 			border: 1px solid ${colors.blue[500]};
  // 			background-color: ${colors.black};
  // 			justify-content: center;
  // 			padding: ${size === "regular"
  // 				? !!text
  // 					? "14px 17px"
  // 					: "14px"
  // 				: size === "small"
  // 				? !!text
  // 					? "12px 14px"
  // 					: "12px"
  // 				: "10px"};
  // 			font-size: ${size === "regular"
  // 				? typography.sizes.button.large
  // 				: size === "small"
  // 				? typography.sizes.button.medium
  // 				: typography.sizes.button.small};
  // 			margin: 0 ${width === "normal" ? "15px" : "0"} 0 0;
  // 			height: ${buttonHeight};
  // 			max-height: ${buttonHeight};
  // 			&:hover {
  // 				background-color: ${colors.black};
  // 				border-color: ${colors.blue[700]};
  // 				color: ${colors.blue[300]};
  // 			}
  // 			&:active {
  // 				background-color: ${colors.black};
  // 				border-color: ${colors.blue[700]};
  // 				color: ${colors.blue[700]};
  // 			}
  // 		`,
  // 	};
  // 	const disabledButton = {
  // 		container: css`
  // 			border: 1px solid ${colors.white};
  // 			color: ${colors.white};
  // 			background-color: ${colors.gray[100]};
  // 			justify-content: center;
  // 			padding: ${size === "regular"
  // 				? !!text
  // 					? "14px 17px"
  // 					: "14px"
  // 				: size === "small"
  // 				? !!text
  // 					? "12px 14px"
  // 					: "12px"
  // 				: "10px"};
  // 			display: ${width === "normal" ? "inline-flex" : "flex"};
  // 			align-items: center;
  // 			cursor: ${disabled ? "not-allowed" : "default"};
  // 			font-family: ${typography.fonts.base};
  // 			font-weight: ${typography.weights.medium};
  // 			font-size: ${size === "regular"
  // 				? typography.sizes.button.large
  // 				: size === "small"
  // 				? typography.sizes.button.medium
  // 				: typography.sizes.button.small};
  // 			margin: 0 ${width === "normal" ? "15px" : "0"} 0 0;
  // 			height: ${buttonHeight};
  // 			max-height: ${buttonHeight};
  // 			&:hover {
  // 				background-color: ${colors.gray[100]};
  // 				border-color: ${colors.white};
  // 				color: ${colors.white};
  // 			}
  // 			&:active {
  // 				background-color: ${colors.gray[100]};
  // 				border-color: ${colors.white};
  // 				color: ${colors.white};
  // 			}
  // 			&::selection {
  // 				background: transparent;
  // 			}
  // 		`,
  // 	};
  // 	const icon = css`
  // 		margin-right: ${!!text ? "10px" : "0"};
  // 		font-size: ${size === "regular"
  // 			? typography.sizes.icon.large
  // 			: size === "small"
  // 			? typography.sizes.icon.medium
  // 			: typography.sizes.icon.small};
  // 		& > path:nth-of-type(1) {
  // 			color: inherit;
  // 			flex-shrink: 0;
  // 		}
  // 	`;
  // 	const result = disabled ? disabledButton : type === "primary" ? primaryButton : secondaryButton;
  // 	return { icon, ...result };
  // };


  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  var _ref = /*#__PURE__*/React.createElement("circle", {
    cx: 8,
    cy: 8,
    r: 6,
    stroke: "#7B8A95",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  var _ref2 = /*#__PURE__*/React.createElement("path", {
    d: "M4 4l8 8",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgBlock(props) {
    return /*#__PURE__*/React.createElement("svg", _extends({
      width: 16,
      height: 16,
      fill: "none"
    }, props), _ref, _ref2);
  }

  function Button(_a) {
    var children = _a.children,
        icon = _a.icon,
        _b = _a.type,
        type = _b === void 0 ? "primary" : _b,
        _c = _a.disabled,
        disabled = _c === void 0 ? false : _c,
        _d = _a.onClick,
        onClick = _d === void 0 ? function () {} : _d,
        styleProps = __rest(_a, ["children", "icon", "type", "disabled", "onClick"]);

    var styles = useCSS(_assign({
      disabled: disabled,
      type: type,
      children: children
    }, styleProps));
    return core.jsx("button", {
      css: styles.container,
      onClick: onClick,
      disabled: disabled
    }, icon && core.jsx(SvgBlock, {
      css: styles.icon
    }), children);
  }

  var index$1 = /*#__PURE__*/React.memo(Button);

  var wrapper = function wrapper() {
    return {
      position: "relative"
    };
  };

  var container = function container() {
    return {
      display: "flex",
      width: "100%",
      overflow: "hidden"
    };
  };

  var item = function item() {
    return {
      display: "inline-block"
    };
  };

  var navLeft = function navLeft(_, _a) {
    var _b = _a.navTopPosition,
        navTopPosition = _b === void 0 ? 0 : _b;
    return {
      position: "absolute",
      left: 0,
      top: "" + navTopPosition
    };
  };

  var navRight = function navRight(_, _a) {
    var _b = _a.navTopPosition,
        navTopPosition = _b === void 0 ? 0 : _b;
    return {
      position: "absolute",
      right: 0,
      top: "" + navTopPosition
    };
  };

  var useCSS$1 = function useCSS(props) {
    return {
      wrapper: makeStyles([wrapper])(props),
      container: makeStyles([container])(props),
      item: makeStyles([item])(props),
      navLeft: makeStyles([navLeft])(props),
      navRight: makeStyles([navRight])(props)
    };
  };

  var baseStyles$1 = function baseStyles() {
    return {
      border: 0,
      color: colors.white,
      textAlign: "center",
      display: "inline-block",
      cursor: "default",
      fontFamily: typography.fonts.base,
      fontWeight: typography.weights.medium,
      fontSize: typography.sizes.subtitle1,
      margin: "1px",
      padding: 0,
      width: "50px",
      height: "50px",
      lineHeight: "50px",
      "&:hover": {
        borderColor: colors.blue[700]
      },
      "&:active": {
        borderColor: colors.blue[900]
      },
      "&::selection": {
        background: "transparent"
      }
    };
  };

  var colorFromType$1 = function colorFromType(styles, _a) {
    var _b = _a.type,
        type = _b === void 0 ? "primary" : _b;
    return _assign(_assign({}, styles), {
      backgroundColor: type === "primary" ? colors.blue[700] : colors.black,
      "&:hover": {
        backgroundColor: type === "primary" ? colors.blue[700] : colors.black,
        color: type === "primary" ? colors.white : colors.blue[300]
      },
      "&:active": {
        backgroundColor: type === "primary" ? colors.blue[900] : colors.black,
        color: type === "primary" ? colors.white : colors.blue[700]
      }
    });
  };

  var useCSS$2 = function useCSS(props) {
    return makeStyles([baseStyles$1, colorFromType$1])(props);
  };

  function _extends$1() {
    _extends$1 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$1.apply(this, arguments);
  }

  var _ref$1 = /*#__PURE__*/React.createElement("path", {
    d: "M1.5 11.5l5-5-5-5",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgChevronRightBig(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$1({
      width: 8,
      height: 13,
      fill: "none"
    }, props), _ref$1);
  }

  function _extends$2() {
    _extends$2 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$2.apply(this, arguments);
  }

  var _ref$2 = /*#__PURE__*/React.createElement("path", {
    d: "M6.5 11.5l-5-5 5-5",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgChevronLeftBig(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$2({
      width: 8,
      height: 13,
      fill: "none"
    }, props), _ref$2);
  }

  function NavButton(_a) {
    var _b = _a.direction,
        direction = _b === void 0 ? "right" : _b,
        onClick = _a.onClick,
        styleProps = __rest(_a, ["direction", "onClick"]);

    var styles = useCSS$2(styleProps);
    return core.jsx("div", {
      css: styles,
      onClick: onClick
    }, direction === "right" ? core.jsx(SvgChevronRightBig, null) : core.jsx(SvgChevronLeftBig, null));
  }

  var NavButton$1 = /*#__PURE__*/React.memo(NavButton);

  function Carousel(_a) {
    var children = _a.children,
        _b = _a.scrollAmount,
        styleProps = __rest(_a, ["children", "scrollAmount"]);

    var container = React.useRef(null);
    var styles = useCSS$1(styleProps);
    return core.jsx("div", {
      css: styles.wrapper
    }, core.jsx("div", {
      ref: container,
      css: styles.container
    }, children.map(function (item, index) {
      return core.jsx("div", {
        key: "carousel-" + index,
        css: styles.item
      }, item);
    })), core.jsx("div", {
      css: styles.navLeft
    }, core.jsx(NavButton$1, {
      type: "primary",
      direction: "left",
      onClick: function onClick() {}
    })), core.jsx("div", {
      css: styles.navRight
    }, core.jsx(NavButton$1, {
      type: "primary",
      direction: "right",
      onClick: function onClick() {}
    })));
  }

  var index$2 = /*#__PURE__*/React.memo(Carousel);

  var wrapper$1 = function wrapper() {
    return {
      display: "block",
      maxWidth: "250px",
      fontFamily: typography.fonts.base
    };
  };

  var container$1 = function container(_, _a) {
    var disabled = _a.disabled;
    return {
      position: "relative",
      width: "100%",
      height: "48px",
      display: "inline-flex",
      cursor: disabled ? "not-allowed" : "default"
    };
  };

  var borderBase = function borderBase() {
    return {
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      borderWidth: "1px",
      borderStyle: "solid",
      display: "flex",
      alignItems: "center",
      justifyContent: "left"
    };
  };

  var label = function label(_, _a) {
    var error = _a.error;
    return {
      color: error ? colors.error : colors.gray[400],
      padding: "0 " + spacing.xxxxl + " 0 " + spacing.s,
      backgroundColor: colors.black,
      fontSize: typography.sizes.body2,
      "&::selection": {
        backgroundColor: "transparent"
      }
    };
  };

  var input = function input() {
    return {
      display: "none",
      widht: "100%",
      margin: "0 " + spacing.xxxxl + " 0 " + spacing.s,
      background: "none",
      border: "none",
      color: colors.white,
      outline: "none",
      fontSize: typography.sizes.body2,
      padding: "5px 0"
    };
  };

  var iconOpen = function iconOpen() {
    return {
      color: colors.gray[300],
      fontSize: typography.sizes.icon.medium,
      position: "absolute",
      top: spacing.m,
      right: spacing.s
    };
  };

  var iconClose = function iconClose(_, _a) {
    var error = _a.error;
    return {
      color: error ? colors.error : colors.blue[500],
      fontSize: typography.sizes.icon.medium,
      position: "absolute",
      top: spacing.m,
      right: spacing.s
    };
  };

  var helper = function helper(_, _a) {
    var error = _a.error;
    return {
      color: error ? colors.error : colors.gray[400],
      fontSize: typography.sizes.caption,
      margin: spacing.xxs + " " + spacing.xs
    };
  };

  var options = function options() {
    return {
      backgroundColor: colors.gray[700],
      color: colors.white,
      display: "block",
      width: "100%",
      position: "absolute",
      top: "50px",
      maxHeight: "145px",
      overflowX: "none",
      overflowY: "auto"
    };
  };

  var option = function option() {
    return {
      padding: spacing.s,
      fontSize: typography.sizes.body2,
      "&:hover": {
        backgroundColor: colors.gray[600]
      }
    };
  };

  var borderColorFromProps = function borderColorFromProps(styles, _a) {
    var error = _a.error,
        disabled = _a.disabled,
        isActive = _a.isActive,
        focus = _a.focus;
    var borderColor = disabled ? colors.gray[200] : error ? colors.error : focus ? colors.blue[500] : isActive ? colors.gray[200] : colors.gray[400];
    return _assign(_assign({}, styles), {
      borderColor: borderColor
    });
  };

  var useCSS$3 = function useCSS(props) {
    return {
      wrapper: makeStyles([wrapper$1])(props),
      container: makeStyles([container$1])(props),
      border: makeStyles([borderBase, borderColorFromProps])(props),
      label: makeStyles([label])(props),
      input: makeStyles([input])(props),
      iconOpen: makeStyles([iconOpen])(props),
      iconClose: makeStyles([iconClose])(props),
      helper: makeStyles([helper])(props),
      options: makeStyles([options])(props),
      option: makeStyles([option])(props)
    };
  };

  function _extends$3() {
    _extends$3 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$3.apply(this, arguments);
  }

  var _ref$3 = /*#__PURE__*/React.createElement("path", {
    d: "M1 1l5 5 5-5",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgChevronDownBig(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$3({
      width: 12,
      height: 8,
      fill: "none"
    }, props), _ref$3);
  }

  function _extends$4() {
    _extends$4 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$4.apply(this, arguments);
  }

  var _ref$4 = /*#__PURE__*/React.createElement("path", {
    d: "M1 7l5-5 5 5",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgChevronUpBig(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$4({
      width: 12,
      height: 8,
      fill: "none"
    }, props), _ref$4);
  }

  function Dropdown(_a) {
    var _b;

    var label = _a.label,
        _c = _a.helper,
        helper = _c === void 0 ? "" : _c,
        _d = _a.value,
        value = _d === void 0 ? "" : _d,
        _e = _a.options,
        options = _e === void 0 ? [] : _e,
        _f = _a.disabled,
        disabled = _f === void 0 ? false : _f,
        _g = _a.onChange,
        onChange = _g === void 0 ? function () {} : _g,
        styleProps = __rest(_a, ["label", "helper", "value", "options", "disabled", "onChange"]);

    var inputRef = React.useRef(null);

    var _h = React.useState(!!value),
        isActive = _h[0],
        setIsActive = _h[1];

    var _j = React.useState(!!value ? (_b = options.find(function (_a) {
      var _b = _a.value,
          optionValue = _b === void 0 ? NaN : _b;
      return optionValue === value;
    })) === null || _b === void 0 ? void 0 : _b.text : ""),
        inputTextValue = _j[0],
        setInputTextValue = _j[1];

    var _k = React.useState(false),
        showOptions = _k[0],
        setShowOptions = _k[1];

    var styles = useCSS$3(_assign({
      isActive: isActive,
      disabled: disabled
    }, styleProps));

    function onToggleDropdown() {
      if (!disabled) {
        setShowOptions(!showOptions);
      }
    }

    function onOptionSelected(option) {
      setIsActive(false);
      setInputTextValue(option.text);
      onChange(option);
    }

    return core.jsx("div", {
      css: styles.wrapper
    }, core.jsx("div", {
      css: styles.container,
      onClick: onToggleDropdown
    }, core.jsx("div", {
      css: styles.border
    }, core.jsx("div", {
      css: styles.label,
      style: !inputTextValue && !isActive ? {} : {
        position: "absolute",
        top: "-8px",
        left: "5px",
        fontSize: "0.7rem",
        padding: "0 " + spacing.xs
      }
    }, label), core.jsx("input", {
      css: styles.input,
      style: {
        display: !!inputTextValue || isActive ? "block" : "none"
      },
      ref: inputRef,
      type: "text",
      disabled: true,
      value: inputTextValue
    }), !showOptions && core.jsx(SvgChevronDownBig, {
      css: styles.iconOpen
    }), !!showOptions && core.jsx(SvgChevronUpBig, {
      css: styles.iconClose
    })), showOptions && core.jsx("div", {
      css: styles.options
    }, options.map(function (option, index) {
      return core.jsx("div", {
        key: label + "-" + index,
        css: styles.option,
        defaultValue: option.value,
        onClick: function onClick() {
          return onOptionSelected(option);
        }
      }, option.text);
    }))), !!helper && core.jsx("p", {
      css: styles.helper
    }, helper));
  }

  var index$3 = /*#__PURE__*/React.memo(Dropdown);

  var container$2 = function container(_, _a) {
    var _b = _a.minItemWidth,
        minItemWidth = _b === void 0 ? "300" : _b,
        maxItemWidth = _a.maxItemWidth;
    return {
      display: "grid",
      gridTemplateColumns: "repeat(auto-fit, minmax(" + minItemWidth + "px, " + (maxItemWidth ? maxItemWidth + "px" : "1fr") + "))",
      gap: "30px"
    };
  };

  var item$1 = function item() {
    return {
      cursor: "pointer",
      width: "100%"
    };
  };

  var useCSS$4 = function useCSS(props) {
    return {
      container: makeStyles([container$2])(props),
      item: makeStyles([item$1])(props)
    };
  };

  function Grid(_a) {
    var _b = _a.items,
        items = _b === void 0 ? [] : _b,
        _c = _a.className,
        className = _c === void 0 ? "" : _c,
        styleProps = __rest(_a, ["items", "className"]);

    var styles = useCSS$4(styleProps);
    return core.jsx("div", {
      css: styles.container,
      className: className
    }, items.map(function (item, index) {
      return core.jsx("div", {
        key: "grid-item-" + index,
        css: styles.item
      }, item);
    }));
  }

  var index$4 = /*#__PURE__*/React.memo(Grid);

  var _emotionSourceMap = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlci5zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLVyIsImZpbGUiOiJIZWFkZXIuc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX21ha2VUZW1wbGF0ZU9iamVjdCB9IGZyb20gXCJ0c2xpYlwiO1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xyXG5pbXBvcnQgeyB0eXBvZ3JhcGh5LCBjb2xvcnMgfSBmcm9tIFwiLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5iYWNrZ3JvdW5kLCBiYWNrZ3JvdW5kID0gX2IgPT09IHZvaWQgMCA/IFwiXCIgOiBfYjtcclxuICAgIHJldHVybiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBcIiwgXCI7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgY29sb3I6IFwiLCBcIjtcXG4gICAgZm9udC1mYW1pbHk6IFwiLCBcIjtcXG4gICAgaGVpZ2h0OiA2MDBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIsIFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHJpZ2h0O1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxuXFxuICAgIGRpdiNjb250ZW50IHtcXG4gICAgICBtYXJnaW46IDAgMTAwcHg7XFxuICAgIH0gICBcXG4gIFwiXSwgW1wiXFxuICAgIGJhY2tncm91bmQtY29sb3I6IFwiLCBcIjtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgICBjb2xvcjogXCIsIFwiO1xcbiAgICBmb250LWZhbWlseTogXCIsIFwiO1xcbiAgICBoZWlnaHQ6IDYwMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiwgXCIpO1xcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXG5cXG4gICAgZGl2I2NvbnRlbnQge1xcbiAgICAgIG1hcmdpbjogMCAxMDBweDtcXG4gICAgfSAgIFxcbiAgXCJdKSksIGNvbG9ycy5ibGFjaywgY29sb3JzLndoaXRlLCB0eXBvZ3JhcGh5LmZvbnRzLmJhc2UsIGJhY2tncm91bmQpO1xyXG59O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SGVhZGVyLnN0eWxlLmpzLm1hcCJdfQ== */";

  var makeStyles$1 = function makeStyles(_a) {
    var _b = _a.background,
        background = _b === void 0 ? "" : _b;
    return /*#__PURE__*/core.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    background-color: ", ";\n    text-align: left;\n    cursor: default;\n    color: ", ";\n    font-family: ", ";\n    height: 600px;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    background-image: url(", ");\n    background-repeat: no-repeat;\n    background-position: center right;\n    background-size: contain;\n\n    div#content {\n      margin: 0 100px;\n    }   \n  " + _emotionSourceMap], ["\n    background-color: ", ";\n    text-align: left;\n    cursor: default;\n    color: ", ";\n    font-family: ", ";\n    height: 600px;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    background-image: url(", ");\n    background-repeat: no-repeat;\n    background-position: center right;\n    background-size: contain;\n\n    div#content {\n      margin: 0 100px;\n    }   \n  " + _emotionSourceMap])), colors.black, colors.white, typography.fonts.base, background);
  };

  var templateObject_1;

  function Header(_a) {
    var text = _a.text,
        _b = _a.subtext,
        subtext = _b === void 0 ? "" : _b,
        children = _a.children,
        styleProps = __rest(_a, ["text", "subtext", "children"]);

    var styles = makeStyles$1(styleProps);
    return core.jsx("div", {
      css: styles
    }, core.jsx("div", {
      id: "content"
    }, core.jsx("h1", null, text), !!subtext && core.jsx("p", null, subtext), children));
  }

  var index$5 = /*#__PURE__*/React.memo(Header);
  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function unwrapExports(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }
  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */


  var b = "function" === typeof Symbol && Symbol["for"],
      c = b ? Symbol["for"]("react.element") : 60103,
      d = b ? Symbol["for"]("react.portal") : 60106,
      e = b ? Symbol["for"]("react.fragment") : 60107,
      f = b ? Symbol["for"]("react.strict_mode") : 60108,
      g = b ? Symbol["for"]("react.profiler") : 60114,
      h = b ? Symbol["for"]("react.provider") : 60109,
      k = b ? Symbol["for"]("react.context") : 60110,
      l = b ? Symbol["for"]("react.async_mode") : 60111,
      m = b ? Symbol["for"]("react.concurrent_mode") : 60111,
      n = b ? Symbol["for"]("react.forward_ref") : 60112,
      p = b ? Symbol["for"]("react.suspense") : 60113,
      q = b ? Symbol["for"]("react.suspense_list") : 60120,
      r = b ? Symbol["for"]("react.memo") : 60115,
      t = b ? Symbol["for"]("react.lazy") : 60116,
      v = b ? Symbol["for"]("react.block") : 60121,
      w = b ? Symbol["for"]("react.fundamental") : 60117,
      x = b ? Symbol["for"]("react.responder") : 60118,
      y = b ? Symbol["for"]("react.scope") : 60119;

  function z(a) {
    if ("object" === (0, _typeof3["default"])(a) && null !== a) {
      var u = a.$$typeof;

      switch (u) {
        case c:
          switch (a = a.type, a) {
            case l:
            case m:
            case e:
            case g:
            case f:
            case p:
              return a;

            default:
              switch (a = a && a.$$typeof, a) {
                case k:
                case n:
                case t:
                case r:
                case h:
                  return a;

                default:
                  return u;
              }

          }

        case d:
          return u;
      }
    }
  }

  function A(a) {
    return z(a) === m;
  }

  var AsyncMode = l;
  var ConcurrentMode = m;
  var ContextConsumer = k;
  var ContextProvider = h;
  var Element$1 = c;
  var ForwardRef = n;
  var Fragment = e;
  var Lazy = t;
  var Memo = r;
  var Portal = d;
  var Profiler = g;
  var StrictMode = f;
  var Suspense = p;

  var isAsyncMode = function isAsyncMode(a) {
    return A(a) || z(a) === l;
  };

  var isConcurrentMode = A;

  var isContextConsumer = function isContextConsumer(a) {
    return z(a) === k;
  };

  var isContextProvider = function isContextProvider(a) {
    return z(a) === h;
  };

  var isElement = function isElement(a) {
    return "object" === (0, _typeof3["default"])(a) && null !== a && a.$$typeof === c;
  };

  var isForwardRef = function isForwardRef(a) {
    return z(a) === n;
  };

  var isFragment = function isFragment(a) {
    return z(a) === e;
  };

  var isLazy = function isLazy(a) {
    return z(a) === t;
  };

  var isMemo = function isMemo(a) {
    return z(a) === r;
  };

  var isPortal = function isPortal(a) {
    return z(a) === d;
  };

  var isProfiler = function isProfiler(a) {
    return z(a) === g;
  };

  var isStrictMode = function isStrictMode(a) {
    return z(a) === f;
  };

  var isSuspense = function isSuspense(a) {
    return z(a) === p;
  };

  var isValidElementType = function isValidElementType(a) {
    return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === (0, _typeof3["default"])(a) && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
  };

  var typeOf = z;
  var reactIs_production_min = {
    AsyncMode: AsyncMode,
    ConcurrentMode: ConcurrentMode,
    ContextConsumer: ContextConsumer,
    ContextProvider: ContextProvider,
    Element: Element$1,
    ForwardRef: ForwardRef,
    Fragment: Fragment,
    Lazy: Lazy,
    Memo: Memo,
    Portal: Portal,
    Profiler: Profiler,
    StrictMode: StrictMode,
    Suspense: Suspense,
    isAsyncMode: isAsyncMode,
    isConcurrentMode: isConcurrentMode,
    isContextConsumer: isContextConsumer,
    isContextProvider: isContextProvider,
    isElement: isElement,
    isForwardRef: isForwardRef,
    isFragment: isFragment,
    isLazy: isLazy,
    isMemo: isMemo,
    isPortal: isPortal,
    isProfiler: isProfiler,
    isStrictMode: isStrictMode,
    isSuspense: isSuspense,
    isValidElementType: isValidElementType,
    typeOf: typeOf
  };
  var reactIs_development = createCommonjsModule(function (module, exports) {
    if ("development" !== "production") {
      (function () {
        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var hasSymbol = typeof Symbol === 'function' && Symbol["for"];
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol["for"]('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol["for"]('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol["for"]('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol["for"]('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol["for"]('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol["for"]('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol["for"]('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
        // (unstable) APIs that have been removed. Can we remove the symbols?

        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol["for"]('react.async_mode') : 0xeacf;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol["for"]('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol["for"]('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol["for"]('react.suspense') : 0xead1;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol["for"]('react.suspense_list') : 0xead8;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol["for"]('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol["for"]('react.lazy') : 0xead4;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol["for"]('react.block') : 0xead9;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol["for"]('react.fundamental') : 0xead5;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol["for"]('react.responder') : 0xead6;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol["for"]('react.scope') : 0xead7;

        function isValidElementType(type) {
          return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || (0, _typeof3["default"])(type) === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }

        function typeOf(object) {
          if ((0, _typeof3["default"])(object) === 'object' && object !== null) {
            var $$typeof = object.$$typeof;

            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;

                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;

                  default:
                    var $$typeofType = type && type.$$typeof;

                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;

                      default:
                        return $$typeof;
                    }

                }

              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }

          return undefined;
        } // AsyncMode is deprecated along with isAsyncMode


        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

              console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }

        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }

        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }

        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }

        function isElement(object) {
          return (0, _typeof3["default"])(object) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }

        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }

        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }

        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }

        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }

        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }

        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }

        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }

        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }

        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  });
  var reactIs_development_1 = reactIs_development.AsyncMode;
  var reactIs_development_2 = reactIs_development.ConcurrentMode;
  var reactIs_development_3 = reactIs_development.ContextConsumer;
  var reactIs_development_4 = reactIs_development.ContextProvider;
  var reactIs_development_5 = reactIs_development.Element;
  var reactIs_development_6 = reactIs_development.ForwardRef;
  var reactIs_development_7 = reactIs_development.Fragment;
  var reactIs_development_8 = reactIs_development.Lazy;
  var reactIs_development_9 = reactIs_development.Memo;
  var reactIs_development_10 = reactIs_development.Portal;
  var reactIs_development_11 = reactIs_development.Profiler;
  var reactIs_development_12 = reactIs_development.StrictMode;
  var reactIs_development_13 = reactIs_development.Suspense;
  var reactIs_development_14 = reactIs_development.isAsyncMode;
  var reactIs_development_15 = reactIs_development.isConcurrentMode;
  var reactIs_development_16 = reactIs_development.isContextConsumer;
  var reactIs_development_17 = reactIs_development.isContextProvider;
  var reactIs_development_18 = reactIs_development.isElement;
  var reactIs_development_19 = reactIs_development.isForwardRef;
  var reactIs_development_20 = reactIs_development.isFragment;
  var reactIs_development_21 = reactIs_development.isLazy;
  var reactIs_development_22 = reactIs_development.isMemo;
  var reactIs_development_23 = reactIs_development.isPortal;
  var reactIs_development_24 = reactIs_development.isProfiler;
  var reactIs_development_25 = reactIs_development.isStrictMode;
  var reactIs_development_26 = reactIs_development.isSuspense;
  var reactIs_development_27 = reactIs_development.isValidElementType;
  var reactIs_development_28 = reactIs_development.typeOf;
  var reactIs = createCommonjsModule(function (module) {
    if ("development" === 'production') {
      module.exports = reactIs_production_min;
    } else {
      module.exports = reactIs_development;
    }
  });
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */

  /* eslint-disable no-unused-vars */

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      } // Detect buggy property enumeration order in older V8 versions.
      // https://bugs.chromium.org/p/v8/issues/detail?id=4118


      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

      test1[5] = 'de';

      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


      var test2 = {};

      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }

      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });

      if (order2.join('') !== '0123456789') {
        return false;
      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });

      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      // We don't expect any of the above to throw, but better to be safe.
      return false;
    }
  }

  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);

        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  var ReactPropTypesSecret_1 = ReactPropTypesSecret;

  var printWarning = function printWarning() {};

  if ("development" !== 'production') {
    var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
    var loggedTypeFailures = {};
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    printWarning = function printWarning(text) {
      var message = 'Warning: ' + text;

      if (typeof console !== 'undefined') {
        console.error(message);
      }

      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };
  }
  /**
   * Assert that the values match with the type specs.
   * Error messages are memorized and will only be shown once.
   *
   * @param {object} typeSpecs Map of name to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @param {string} componentName Name of the component for error messages.
   * @param {?Function} getStack Returns the component stack.
   * @private
   */


  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    if ("development" !== 'production') {
      for (var typeSpecName in typeSpecs) {
        if (has(typeSpecs, typeSpecName)) {
          var error; // Prop type validation may throw. In case they do, we don't want to
          // fail the render phase where it didn't fail before. So we log it.
          // After these have been cleaned up, we'll let them throw.

          try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
              var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + (0, _typeof3["default"])(typeSpecs[typeSpecName]) + '`.');
              err.name = 'Invariant Violation';
              throw err;
            }

            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
          } catch (ex) {
            error = ex;
          }

          if (error && !(error instanceof Error)) {
            printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + (0, _typeof3["default"])(error) + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
          }

          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
          }
        }
      }
    }
  }
  /**
   * Resets warning cache when testing.
   *
   * @private
   */


  checkPropTypes.resetWarningCache = function () {
    if ("development" !== 'production') {
      loggedTypeFailures = {};
    }
  };

  var checkPropTypes_1 = checkPropTypes;
  var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

  var printWarning$1 = function printWarning$1() {};

  if ("development" !== 'production') {
    printWarning$1 = function printWarning$1(text) {
      var message = 'Warning: ' + text;

      if (typeof console !== 'undefined') {
        console.error(message);
      }

      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };
  }

  function emptyFunctionThatReturnsNull() {
    return null;
  }

  var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {
    /* global Symbol */
    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

    /**
     * Returns the iterator method function contained on the iterable object.
     *
     * Be sure to invoke the function with the iterable as context:
     *
     *     var iteratorFn = getIteratorFn(myIterable);
     *     if (iteratorFn) {
     *       var iterator = iteratorFn.call(myIterable);
     *       ...
     *     }
     *
     * @param {?object} maybeIterable
     * @return {?function}
     */

    function getIteratorFn(maybeIterable) {
      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);

      if (typeof iteratorFn === 'function') {
        return iteratorFn;
      }
    }
    /**
     * Collection of methods that allow declaration and validation of props that are
     * supplied to React components. Example usage:
     *
     *   var Props = require('ReactPropTypes');
     *   var MyArticle = React.createClass({
     *     propTypes: {
     *       // An optional string prop named "description".
     *       description: Props.string,
     *
     *       // A required enum prop named "category".
     *       category: Props.oneOf(['News','Photos']).isRequired,
     *
     *       // A prop named "dialog" that requires an instance of Dialog.
     *       dialog: Props.instanceOf(Dialog).isRequired
     *     },
     *     render: function() { ... }
     *   });
     *
     * A more formal specification of how these methods are used:
     *
     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
     *   decl := ReactPropTypes.{type}(.isRequired)?
     *
     * Each and every declaration produces a function with the same signature. This
     * allows the creation of custom validation functions. For example:
     *
     *  var MyLink = React.createClass({
     *    propTypes: {
     *      // An optional string or URI prop named "href".
     *      href: function(props, propName, componentName) {
     *        var propValue = props[propName];
     *        if (propValue != null && typeof propValue !== 'string' &&
     *            !(propValue instanceof URI)) {
     *          return new Error(
     *            'Expected a string or an URI for ' + propName + ' in ' +
     *            componentName
     *          );
     *        }
     *      }
     *    },
     *    render: function() {...}
     *  });
     *
     * @internal
     */


    var ANONYMOUS = '<<anonymous>>'; // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.

    var ReactPropTypes = {
      array: createPrimitiveTypeChecker('array'),
      bool: createPrimitiveTypeChecker('boolean'),
      func: createPrimitiveTypeChecker('function'),
      number: createPrimitiveTypeChecker('number'),
      object: createPrimitiveTypeChecker('object'),
      string: createPrimitiveTypeChecker('string'),
      symbol: createPrimitiveTypeChecker('symbol'),
      any: createAnyTypeChecker(),
      arrayOf: createArrayOfTypeChecker,
      element: createElementTypeChecker(),
      elementType: createElementTypeTypeChecker(),
      instanceOf: createInstanceTypeChecker,
      node: createNodeChecker(),
      objectOf: createObjectOfTypeChecker,
      oneOf: createEnumTypeChecker,
      oneOfType: createUnionTypeChecker,
      shape: createShapeTypeChecker,
      exact: createStrictShapeTypeChecker
    };
    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */

    /*eslint-disable no-self-compare*/

    function is(x, y) {
      // SameValue algorithm
      if (x === y) {
        // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
      } else {
        // Step 6.a: NaN == NaN
        return x !== x && y !== y;
      }
    }
    /*eslint-enable no-self-compare*/

    /**
     * We use an Error-like object for backward compatibility as people may call
     * PropTypes directly and inspect their output. However, we don't use real
     * Errors anymore. We don't inspect their stack anyway, and creating them
     * is prohibitively expensive if they are created too often, such as what
     * happens in oneOfType() for any type before the one that matched.
     */


    function PropTypeError(message) {
      this.message = message;
      this.stack = '';
    } // Make `instanceof Error` still work for returned errors.


    PropTypeError.prototype = Error.prototype;

    function createChainableTypeChecker(validate) {
      if ("development" !== 'production') {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
      }

      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
        componentName = componentName || ANONYMOUS;
        propFullName = propFullName || propName;

        if (secret !== ReactPropTypesSecret_1) {
          if (throwOnDirectAccess) {
            // New behavior only for users of `prop-types` package
            var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
            err.name = 'Invariant Violation';
            throw err;
          } else if ("development" !== 'production' && typeof console !== 'undefined') {
            // Old behavior for people using React.PropTypes
            var cacheKey = componentName + ':' + propName;

            if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3) {
              printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
              manualPropTypeCallCache[cacheKey] = true;
              manualPropTypeWarningCount++;
            }
          }
        }

        if (props[propName] == null) {
          if (isRequired) {
            if (props[propName] === null) {
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
            }

            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
          }

          return null;
        } else {
          return validate(props, propName, componentName, location, propFullName);
        }
      }

      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);
      return chainedCheckType;
    }

    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location, propFullName, secret) {
        var propValue = props[propName];
        var propType = getPropType(propValue);

        if (propType !== expectedType) {
          // `propValue` being instance of, say, date/regexp, pass the 'object'
          // check, but we can offer a more precise error message here rather than
          // 'of type `object`'.
          var preciseType = getPreciseType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }

    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
        }

        var propValue = props[propName];

        if (!Array.isArray(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
        }

        for (var i = 0; i < propValue.length; i++) {
          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);

          if (error instanceof Error) {
            return error;
          }
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createElementTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];

        if (!isValidElement(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createElementTypeTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];

        if (!reactIs.isValidElementType(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location, propFullName) {
        if (!(props[propName] instanceof expectedClass)) {
          var expectedClassName = expectedClass.name || ANONYMOUS;
          var actualClassName = getClassName(props[propName]);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createEnumTypeChecker(expectedValues) {
      if (!Array.isArray(expectedValues)) {
        if ("development" !== 'production') {
          if (arguments.length > 1) {
            printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
          } else {
            printWarning$1('Invalid argument supplied to oneOf, expected an array.');
          }
        }

        return emptyFunctionThatReturnsNull;
      }

      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];

        for (var i = 0; i < expectedValues.length; i++) {
          if (is(propValue, expectedValues[i])) {
            return null;
          }
        }

        var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
          var type = getPreciseType(value);

          if (type === 'symbol') {
            return String(value);
          }

          return value;
        });
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
      }

      return createChainableTypeChecker(validate);
    }

    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
        }

        var propValue = props[propName];
        var propType = getPropType(propValue);

        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
        }

        for (var key in propValue) {
          if (has$1(propValue, key)) {
            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

            if (error instanceof Error) {
              return error;
            }
          }
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createUnionTypeChecker(arrayOfTypeCheckers) {
      if (!Array.isArray(arrayOfTypeCheckers)) {
        "development" !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
        return emptyFunctionThatReturnsNull;
      }

      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];

        if (typeof checker !== 'function') {
          printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
          return emptyFunctionThatReturnsNull;
        }
      }

      function validate(props, propName, componentName, location, propFullName) {
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];

          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
            return null;
          }
        }

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
      }

      return createChainableTypeChecker(validate);
    }

    function createNodeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        if (!isNode(props[propName])) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);

        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
        }

        for (var key in shapeTypes) {
          var checker = shapeTypes[key];

          if (!checker) {
            continue;
          }

          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

          if (error) {
            return error;
          }
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function createStrictShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);

        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
        } // We need to check all keys in case some are required but missing from
        // props.


        var allKeys = objectAssign({}, props[propName], shapeTypes);

        for (var key in allKeys) {
          var checker = shapeTypes[key];

          if (!checker) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
          }

          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

          if (error) {
            return error;
          }
        }

        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function isNode(propValue) {
      switch ((0, _typeof3["default"])(propValue)) {
        case 'number':
        case 'string':
        case 'undefined':
          return true;

        case 'boolean':
          return !propValue;

        case 'object':
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }

          if (propValue === null || isValidElement(propValue)) {
            return true;
          }

          var iteratorFn = getIteratorFn(propValue);

          if (iteratorFn) {
            var iterator = iteratorFn.call(propValue);
            var step;

            if (iteratorFn !== propValue.entries) {
              while (!(step = iterator.next()).done) {
                if (!isNode(step.value)) {
                  return false;
                }
              }
            } else {
              // Iterator will provide entry [k,v] tuples rather than values.
              while (!(step = iterator.next()).done) {
                var entry = step.value;

                if (entry) {
                  if (!isNode(entry[1])) {
                    return false;
                  }
                }
              }
            }
          } else {
            return false;
          }

          return true;

        default:
          return false;
      }
    }

    function isSymbol(propType, propValue) {
      // Native Symbol.
      if (propType === 'symbol') {
        return true;
      } // falsy value can't be a Symbol


      if (!propValue) {
        return false;
      } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'


      if (propValue['@@toStringTag'] === 'Symbol') {
        return true;
      } // Fallback for non-spec compliant Symbols which are polyfilled.


      if (typeof Symbol === 'function' && propValue instanceof Symbol) {
        return true;
      }

      return false;
    } // Equivalent of `typeof` but with special handling for array and regexp.


    function getPropType(propValue) {
      var propType = (0, _typeof3["default"])(propValue);

      if (Array.isArray(propValue)) {
        return 'array';
      }

      if (propValue instanceof RegExp) {
        // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
      }

      if (isSymbol(propType, propValue)) {
        return 'symbol';
      }

      return propType;
    } // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.


    function getPreciseType(propValue) {
      if (typeof propValue === 'undefined' || propValue === null) {
        return '' + propValue;
      }

      var propType = getPropType(propValue);

      if (propType === 'object') {
        if (propValue instanceof Date) {
          return 'date';
        } else if (propValue instanceof RegExp) {
          return 'regexp';
        }
      }

      return propType;
    } // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"


    function getPostfixForTypeWarning(value) {
      var type = getPreciseType(value);

      switch (type) {
        case 'array':
        case 'object':
          return 'an ' + type;

        case 'boolean':
        case 'date':
        case 'regexp':
          return 'a ' + type;

        default:
          return type;
      }
    } // Returns class name of the object, if any.


    function getClassName(propValue) {
      if (!propValue.constructor || !propValue.constructor.name) {
        return ANONYMOUS;
      }

      return propValue.constructor.name;
    }

    ReactPropTypes.checkPropTypes = checkPropTypes_1;
    ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };

  function emptyFunction() {}

  function emptyFunctionWithReset() {}

  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  var factoryWithThrowingShims = function factoryWithThrowingShims() {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret_1) {
        // It is still safe when called from React.
        return;
      }

      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
      err.name = 'Invariant Violation';
      throw err;
    }

    shim.isRequired = shim;

    function getShim() {
      return shim;
    } // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.


    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };

  var propTypes = createCommonjsModule(function (module) {
    /**
     * Copyright (c) 2013-present, Facebook, Inc.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    if ("development" !== 'production') {
      var ReactIs = reactIs; // By explicitly using `prop-types` you are opting into new development behavior.
      // http://fb.me/prop-types-in-prod

      var throwOnDirectAccess = true;
      module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
    } else {
      // By explicitly using `prop-types` you are opting into new production behavior.
      // http://fb.me/prop-types-in-prod
      module.exports = factoryWithThrowingShims();
    }
  });
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */

  var NODE_ENV = "development";

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (NODE_ENV !== 'production') {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    }

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1; // we don't care about invariant's own frame

      throw error;
    }
  };

  var invariant_1 = invariant;
  var key = '__global_unique_id__';

  var gud = function gud() {
    return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
  };
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */


  var __DEV__ = "development" !== 'production';

  var warning = function warning() {};

  if (__DEV__) {
    var printWarning$2 = function printWarning(format, args) {
      var len = arguments.length;
      args = new Array(len > 1 ? len - 1 : 0);

      for (var key = 1; key < len; key++) {
        args[key - 1] = arguments[key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });

      if (typeof console !== 'undefined') {
        console.error(message);
      }

      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format, args) {
      var len = arguments.length;
      args = new Array(len > 2 ? len - 2 : 0);

      for (var key = 2; key < len; key++) {
        args[key - 2] = arguments[key];
      }

      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (!condition) {
        printWarning$2.apply(null, [format].concat(args));
      }
    };
  }

  var warning_1 = warning;
  var implementation = createCommonjsModule(function (module, exports) {
    exports.__esModule = true;

    var _react2 = _interopRequireDefault(React__default);

    var _propTypes2 = _interopRequireDefault(propTypes);

    var _gud2 = _interopRequireDefault(gud);

    var _warning2 = _interopRequireDefault(warning_1);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return call && ((0, _typeof3["default"])(call) === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + (0, _typeof3["default"])(superClass));
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    var MAX_SIGNED_31_BIT_INT = 1073741823; // Inlined Object.is polyfill.
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is

    function objectIs(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }

    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function (h) {
            return h !== handler;
          });
        },
        get: function get() {
          return value;
        },
        set: function set(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function (handler) {
            return handler(value, changedBits);
          });
        }
      };
    }

    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }

    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;

      var contextProp = '__create-react-context-' + (0, _gud2["default"])() + '__';

      var Provider = function (_Component) {
        _inherits(Provider, _Component);

        function Provider() {
          var _temp, _this, _ret;

          _classCallCheck(this, Provider);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
        }

        Provider.prototype.getChildContext = function getChildContext() {
          var _ref;

          return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };

        Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;

            if (objectIs(oldValue, newValue)) {
              changedBits = 0; // No change
            } else {
              changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

              if ("development" !== 'production') {
                (0, _warning2["default"])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
              }

              changedBits |= 0;

              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };

        Provider.prototype.render = function render() {
          return this.props.children;
        };

        return Provider;
      }(React__default.Component);

      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2["default"].object.isRequired, _Provider$childContex);

      var Consumer = function (_Component2) {
        _inherits(Consumer, _Component2);

        function Consumer() {
          var _temp2, _this2, _ret2;

          _classCallCheck(this, Consumer);

          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }

          return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
            value: _this2.getValue()
          }, _this2.onUpdate = function (newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;

            if ((observedBits & changedBits) !== 0) {
              _this2.setState({
                value: _this2.getValue()
              });
            }
          }, _temp2), _possibleConstructorReturn(_this2, _ret2);
        }

        Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
          : observedBits;
        };

        Consumer.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }

          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
          : observedBits;
        };

        Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };

        Consumer.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };

        Consumer.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };

        return Consumer;
      }(React__default.Component);

      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2["default"].object, _Consumer$contextType);
      return {
        Provider: Provider,
        Consumer: Consumer
      };
    }

    exports["default"] = createReactContext;
    module.exports = exports['default'];
  });
  unwrapExports(implementation);
  var lib = createCommonjsModule(function (module, exports) {
    exports.__esModule = true;

    var _react2 = _interopRequireDefault(React__default);

    var _implementation2 = _interopRequireDefault(implementation);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    exports["default"] = _react2["default"].createContext || _implementation2["default"];
    module.exports = exports['default'];
  });
  var createContext = unwrapExports(lib);
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  function componentWillMount() {
    // Call this.constructor.gDSFP to support sub-classes.
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);

    if (state !== null && state !== undefined) {
      this.setState(state);
    }
  }

  function componentWillReceiveProps(nextProps) {
    // Call this.constructor.gDSFP to support sub-classes.
    // Use the setState() updater to ensure state isn't stale in certain edge cases.
    function updater(prevState) {
      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
      return state !== null && state !== undefined ? state : null;
    } // Binding "this" is important for shallow renderer support.


    this.setState(updater.bind(this));
  }

  function componentWillUpdate(nextProps, nextState) {
    try {
      var prevProps = this.props;
      var prevState = this.state;
      this.props = nextProps;
      this.state = nextState;
      this.__reactInternalSnapshotFlag = true;
      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
    } finally {
      this.props = prevProps;
      this.state = prevState;
    }
  } // React may warn about cWM/cWRP/cWU methods being deprecated.
  // Add a flag to suppress these warnings for this special case.


  componentWillMount.__suppressDeprecationWarning = true;
  componentWillReceiveProps.__suppressDeprecationWarning = true;
  componentWillUpdate.__suppressDeprecationWarning = true;

  function polyfill(Component) {
    var prototype = Component.prototype;

    if (!prototype || !prototype.isReactComponent) {
      throw new Error('Can only polyfill class components');
    }

    if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
      return Component;
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Error if any of these lifecycles are present,
    // Because they would work differently between older and newer (16.3+) versions of React.


    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;

    if (typeof prototype.componentWillMount === 'function') {
      foundWillMountName = 'componentWillMount';
    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
      foundWillMountName = 'UNSAFE_componentWillMount';
    }

    if (typeof prototype.componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'componentWillReceiveProps';
    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
    }

    if (typeof prototype.componentWillUpdate === 'function') {
      foundWillUpdateName = 'componentWillUpdate';
    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
      foundWillUpdateName = 'UNSAFE_componentWillUpdate';
    }

    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
      var componentName = Component.displayName || Component.name;
      var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
      throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
    } // React <= 16.2 does not support static getDerivedStateFromProps.
    // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
    // Newer versions of React will ignore these lifecycles if gDSFP exists.


    if (typeof Component.getDerivedStateFromProps === 'function') {
      prototype.componentWillMount = componentWillMount;
      prototype.componentWillReceiveProps = componentWillReceiveProps;
    } // React <= 16.2 does not support getSnapshotBeforeUpdate.
    // As a workaround, use cWU to invoke the new lifecycle.
    // Newer versions of React will ignore that lifecycle if gSBU exists.


    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
      if (typeof prototype.componentDidUpdate !== 'function') {
        throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
      }

      prototype.componentWillUpdate = componentWillUpdate;
      var componentDidUpdate = prototype.componentDidUpdate;

      prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
        // 16.3+ will not execute our will-update method;
        // It will pass a snapshot value to did-update though.
        // Older versions will require our polyfilled will-update value.
        // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
        // Because for <= 15.x versions this might be a "prevContext" object.
        // We also can't just check "__reactInternalSnapshot",
        // Because get-snapshot might return a falsy value.
        // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
        var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
        componentDidUpdate.call(this, prevProps, prevState, snapshot);
      };
    }

    return Component;
  } ////////////////////////////////////////////////////////////////////////////////
  // startsWith(string, search) - Check if `string` starts with `search`


  var startsWith = function startsWith(string, search) {
    return string.substr(0, search.length) === search;
  }; ////////////////////////////////////////////////////////////////////////////////
  // pick(routes, uri)
  //
  // Ranks and picks the best route to match. Each segment gets the highest
  // amount of points, then the type of segment gets an additional amount of
  // points where
  //
  //     static > dynamic > splat > root
  //
  // This way we don't have to worry about the order of our routes, let the
  // computers do it.
  //
  // A route looks like this
  //
  //     { path, default, value }
  //
  // And a returned match looks like:
  //
  //     { route, params, uri }
  //
  // I know, I should use TypeScript not comments for these types.


  var pick = function pick(routes, uri) {
    var match = void 0;
    var default_ = void 0;

    var _uri$split = uri.split("?"),
        uriPathname = _uri$split[0];

    var uriSegments = segmentize(uriPathname);
    var isRootUri = uriSegments[0] === "";
    var ranked = rankRoutes(routes);

    for (var i = 0, l = ranked.length; i < l; i++) {
      var missed = false;
      var route = ranked[i].route;

      if (route["default"]) {
        default_ = {
          route: route,
          params: {},
          uri: uri
        };
        continue;
      }

      var routeSegments = segmentize(route.path);
      var params = {};
      var max = Math.max(uriSegments.length, routeSegments.length);
      var index = 0;

      for (; index < max; index++) {
        var routeSegment = routeSegments[index];
        var uriSegment = uriSegments[index];

        if (isSplat(routeSegment)) {
          // Hit a splat, just grab the rest, and return a match
          // uri:   /files/documents/work
          // route: /files/*
          var param = routeSegment.slice(1) || "*";
          params[param] = uriSegments.slice(index).map(decodeURIComponent).join("/");
          break;
        }

        if (uriSegment === undefined) {
          // URI is shorter than the route, no match
          // uri:   /users
          // route: /users/:userId
          missed = true;
          break;
        }

        var dynamicMatch = paramRe.exec(routeSegment);

        if (dynamicMatch && !isRootUri) {
          var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;
          !matchIsNotReserved ? "development" !== "production" ? invariant_1(false, "<Router> dynamic segment \"" + dynamicMatch[1] + "\" is a reserved name. Please use a different name in path \"" + route.path + "\".") : invariant_1(false) : void 0;
          var value = decodeURIComponent(uriSegment);
          params[dynamicMatch[1]] = value;
        } else if (routeSegment !== uriSegment) {
          // Current segments don't match, not dynamic, not splat, so no match
          // uri:   /users/123/settings
          // route: /users/:id/profile
          missed = true;
          break;
        }
      }

      if (!missed) {
        match = {
          route: route,
          params: params,
          uri: "/" + uriSegments.slice(0, index).join("/")
        };
        break;
      }
    }

    return match || default_ || null;
  }; ////////////////////////////////////////////////////////////////////////////////
  // resolve(to, basepath)
  //
  // Resolves URIs as though every path is a directory, no files.  Relative URIs
  // in the browser can feel awkward because not only can you be "in a directory"
  // you can be "at a file", too. For example
  //
  //     browserSpecResolve('foo', '/bar/') => /bar/foo
  //     browserSpecResolve('foo', '/bar') => /foo
  //
  // But on the command line of a file system, it's not as complicated, you can't
  // `cd` from a file, only directories.  This way, links have to know less about
  // their current path. To go deeper you can do this:
  //
  //     <Link to="deeper"/>
  //     // instead of
  //     <Link to=`{${props.uri}/deeper}`/>
  //
  // Just like `cd`, if you want to go deeper from the command line, you do this:
  //
  //     cd deeper
  //     # not
  //     cd $(pwd)/deeper
  //
  // By treating every path as a directory, linking to relative paths should
  // require less contextual information and (fingers crossed) be more intuitive.


  var resolve = function resolve(to, base) {
    // /foo/bar, /baz/qux => /foo/bar
    if (startsWith(to, "/")) {
      return to;
    }

    var _to$split = to.split("?"),
        toPathname = _to$split[0],
        toQuery = _to$split[1];

    var _base$split = base.split("?"),
        basePathname = _base$split[0];

    var toSegments = segmentize(toPathname);
    var baseSegments = segmentize(basePathname); // ?a=b, /users?b=c => /users?a=b

    if (toSegments[0] === "") {
      return addQuery(basePathname, toQuery);
    } // profile, /users/789 => /users/789/profile


    if (!startsWith(toSegments[0], ".")) {
      var pathname = baseSegments.concat(toSegments).join("/");
      return addQuery((basePathname === "/" ? "" : "/") + pathname, toQuery);
    } // ./         /users/123  =>  /users/123
    // ../        /users/123  =>  /users
    // ../..      /users/123  =>  /
    // ../../one  /a/b/c/d    =>  /a/b/one
    // .././one   /a/b/c/d    =>  /a/b/c/one


    var allSegments = baseSegments.concat(toSegments);
    var segments = [];

    for (var i = 0, l = allSegments.length; i < l; i++) {
      var segment = allSegments[i];
      if (segment === "..") segments.pop();else if (segment !== ".") segments.push(segment);
    }

    return addQuery("/" + segments.join("/"), toQuery);
  }; ////////////////////////////////////////////////////////////////////////////////
  // insertParams(path, params)


  var insertParams = function insertParams(path, params) {
    var segments = segmentize(path);
    return "/" + segments.map(function (segment) {
      var match = paramRe.exec(segment);
      return match ? params[match[1]] : segment;
    }).join("/");
  };

  var validateRedirect = function validateRedirect(from, to) {
    var filter = function filter(segment) {
      return isDynamic(segment);
    };

    var fromString = segmentize(from).filter(filter).sort().join("/");
    var toString = segmentize(to).filter(filter).sort().join("/");
    return fromString === toString;
  }; ////////////////////////////////////////////////////////////////////////////////
  // Junk


  var paramRe = /^:(.+)/;
  var SEGMENT_POINTS = 4;
  var STATIC_POINTS = 3;
  var DYNAMIC_POINTS = 2;
  var SPLAT_PENALTY = 1;
  var ROOT_POINTS = 1;

  var isRootSegment = function isRootSegment(segment) {
    return segment === "";
  };

  var isDynamic = function isDynamic(segment) {
    return paramRe.test(segment);
  };

  var isSplat = function isSplat(segment) {
    return segment && segment[0] === "*";
  };

  var rankRoute = function rankRoute(route, index) {
    var score = route["default"] ? 0 : segmentize(route.path).reduce(function (score, segment) {
      score += SEGMENT_POINTS;
      if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;
      return score;
    }, 0);
    return {
      route: route,
      score: score,
      index: index
    };
  };

  var rankRoutes = function rankRoutes(routes) {
    return routes.map(rankRoute).sort(function (a, b) {
      return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;
    });
  };

  var segmentize = function segmentize(uri) {
    return uri // strip starting/ending slashes
    .replace(/(^\/+|\/+$)/g, "").split("/");
  };

  var addQuery = function addQuery(pathname, query) {
    return pathname + (query ? "?" + query : "");
  };

  var reservedNames = ["uri", "path"];
  /**
   * Shallow compares two objects.
   * @param {Object} obj1 The first object to compare.
   * @param {Object} obj2 The second object to compare.
   */

  var shallowCompare = function shallowCompare(obj1, obj2) {
    var obj1Keys = Object.keys(obj1);
    return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {
      return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];
    });
  };

  var _extends$5 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var getLocation = function getLocation(source) {
    var _source$location = source.location,
        search = _source$location.search,
        hash = _source$location.hash,
        href = _source$location.href,
        origin = _source$location.origin,
        protocol = _source$location.protocol,
        host = _source$location.host,
        hostname = _source$location.hostname,
        port = _source$location.port;
    var pathname = source.location.pathname;

    if (!pathname && href && canUseDOM) {
      var url = new URL(href);
      pathname = url.pathname;
    }

    return {
      pathname: encodeURI(decodeURI(pathname)),
      search: search,
      hash: hash,
      href: href,
      origin: origin,
      protocol: protocol,
      host: host,
      hostname: hostname,
      port: port,
      state: source.history.state,
      key: source.history.state && source.history.state.key || "initial"
    };
  };

  var createHistory = function createHistory(source, options) {
    var listeners = [];
    var location = getLocation(source);
    var transitioning = false;

    var resolveTransition = function resolveTransition() {};

    return {
      get location() {
        return location;
      },

      get transitioning() {
        return transitioning;
      },

      _onTransitionComplete: function _onTransitionComplete() {
        transitioning = false;
        resolveTransition();
      },
      listen: function listen(listener) {
        listeners.push(listener);

        var popstateListener = function popstateListener() {
          location = getLocation(source);
          listener({
            location: location,
            action: "POP"
          });
        };

        source.addEventListener("popstate", popstateListener);
        return function () {
          source.removeEventListener("popstate", popstateListener);
          listeners = listeners.filter(function (fn) {
            return fn !== listener;
          });
        };
      },
      navigate: function navigate(to) {
        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            state = _ref.state,
            _ref$replace = _ref.replace,
            replace = _ref$replace === undefined ? false : _ref$replace;

        if (typeof to === "number") {
          source.history.go(to);
        } else {
          state = _extends$5({}, state, {
            key: Date.now() + ""
          }); // try...catch iOS Safari limits to 100 pushState calls

          try {
            if (transitioning || replace) {
              source.history.replaceState(state, null, to);
            } else {
              source.history.pushState(state, null, to);
            }
          } catch (e) {
            source.location[replace ? "replace" : "assign"](to);
          }
        }

        location = getLocation(source);
        transitioning = true;
        var transition = new Promise(function (res) {
          return resolveTransition = res;
        });
        listeners.forEach(function (listener) {
          return listener({
            location: location,
            action: "PUSH"
          });
        });
        return transition;
      }
    };
  }; ////////////////////////////////////////////////////////////////////////////////
  // Stores history entries in memory for testing or other platforms like Native


  var createMemorySource = function createMemorySource() {
    var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
    var searchIndex = initialPath.indexOf("?");
    var initialLocation = {
      pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,
      search: searchIndex > -1 ? initialPath.substr(searchIndex) : ""
    };
    var index = 0;
    var stack = [initialLocation];
    var states = [null];
    return {
      get location() {
        return stack[index];
      },

      addEventListener: function addEventListener(name, fn) {},
      removeEventListener: function removeEventListener(name, fn) {},
      history: {
        get entries() {
          return stack;
        },

        get index() {
          return index;
        },

        get state() {
          return states[index];
        },

        pushState: function pushState(state, _, uri) {
          var _uri$split = uri.split("?"),
              pathname = _uri$split[0],
              _uri$split$ = _uri$split[1],
              search = _uri$split$ === undefined ? "" : _uri$split$;

          index++;
          stack.push({
            pathname: pathname,
            search: search.length ? "?" + search : search
          });
          states.push(state);
        },
        replaceState: function replaceState(state, _, uri) {
          var _uri$split2 = uri.split("?"),
              pathname = _uri$split2[0],
              _uri$split2$ = _uri$split2[1],
              search = _uri$split2$ === undefined ? "" : _uri$split2$;

          stack[index] = {
            pathname: pathname,
            search: search
          };
          states[index] = state;
        },
        go: function go(to) {
          var newIndex = index + to;

          if (newIndex < 0 || newIndex > states.length - 1) {
            return;
          }

          index = newIndex;
        }
      }
    };
  }; ////////////////////////////////////////////////////////////////////////////////
  // global history - uses window.history as the source if available, otherwise a
  // memory history


  var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);

  var getSource = function getSource() {
    return canUseDOM ? window : createMemorySource();
  };

  var globalHistory = createHistory(getSource());

  var _extends$6 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && ((0, _typeof3["default"])(call) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (0, _typeof3["default"])(superClass));
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  } ////////////////////////////////////////////////////////////////////////////////


  var createNamedContext = function createNamedContext(name, defaultValue) {
    var Ctx = createContext(defaultValue);
    Ctx.displayName = name;
    return Ctx;
  }; ////////////////////////////////////////////////////////////////////////////////
  // Location Context/Provider


  var LocationContext = createNamedContext("Location"); // sets up a listener if there isn't one already so apps don't need to be
  // wrapped in some top level provider

  var Location = function Location(_ref) {
    var children = _ref.children;
    return React__default.createElement(LocationContext.Consumer, null, function (context) {
      return context ? children(context) : React__default.createElement(LocationProvider, null, children);
    });
  };

  var LocationProvider = function (_React$Component) {
    _inherits(LocationProvider, _React$Component);

    function LocationProvider() {
      var _temp, _this, _ret;

      _classCallCheck(this, LocationProvider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
        context: _this.getContext(),
        refs: {
          unlisten: null
        }
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    LocationProvider.prototype.getContext = function getContext() {
      var _props$history = this.props.history,
          navigate = _props$history.navigate,
          location = _props$history.location;
      return {
        navigate: navigate,
        location: location
      };
    };

    LocationProvider.prototype.componentDidCatch = function componentDidCatch(error, info) {
      if (isRedirect(error)) {
        var _navigate = this.props.history.navigate;

        _navigate(error.uri, {
          replace: true
        });
      } else {
        throw error;
      }
    };

    LocationProvider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
      if (prevState.context.location !== this.state.context.location) {
        this.props.history._onTransitionComplete();
      }
    };

    LocationProvider.prototype.componentDidMount = function componentDidMount() {
      var _this2 = this;

      var refs = this.state.refs,
          history = this.props.history;

      history._onTransitionComplete();

      refs.unlisten = history.listen(function () {
        Promise.resolve().then(function () {
          // TODO: replace rAF with react deferred update API when it's ready https://github.com/facebook/react/issues/13306
          requestAnimationFrame(function () {
            if (!_this2.unmounted) {
              _this2.setState(function () {
                return {
                  context: _this2.getContext()
                };
              });
            }
          });
        });
      });
    };

    LocationProvider.prototype.componentWillUnmount = function componentWillUnmount() {
      var refs = this.state.refs;
      this.unmounted = true;
      refs.unlisten();
    };

    LocationProvider.prototype.render = function render() {
      var context = this.state.context,
          children = this.props.children;
      return React__default.createElement(LocationContext.Provider, {
        value: context
      }, typeof children === "function" ? children(context) : children || null);
    };

    return LocationProvider;
  }(React__default.Component); ////////////////////////////////////////////////////////////////////////////////


  LocationProvider.defaultProps = {
    history: globalHistory
  };
  "development" !== "production" ? LocationProvider.propTypes = {
    history: propTypes.object.isRequired
  } : void 0; ////////////////////////////////////////////////////////////////////////////////
  // Sets baseuri and basepath for nested routers and links

  var BaseContext = createNamedContext("Base", {
    baseuri: "/",
    basepath: "/"
  }); ////////////////////////////////////////////////////////////////////////////////
  // The main event, welcome to the show everybody.

  var Router = function Router(props) {
    return React__default.createElement(BaseContext.Consumer, null, function (baseContext) {
      return React__default.createElement(Location, null, function (locationContext) {
        return React__default.createElement(RouterImpl, _extends$6({}, baseContext, locationContext, props));
      });
    });
  };

  var RouterImpl = function (_React$PureComponent) {
    _inherits(RouterImpl, _React$PureComponent);

    function RouterImpl() {
      _classCallCheck(this, RouterImpl);

      return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
    }

    RouterImpl.prototype.render = function render() {
      var _props = this.props,
          location = _props.location,
          _navigate2 = _props.navigate,
          basepath = _props.basepath,
          primary = _props.primary,
          children = _props.children,
          baseuri = _props.baseuri,
          _props$component = _props.component,
          component = _props$component === undefined ? "div" : _props$component,
          domProps = _objectWithoutProperties(_props, ["location", "navigate", "basepath", "primary", "children", "baseuri", "component"]);

      var routes = React__default.Children.toArray(children).reduce(function (array, child) {
        var routes = createRoute(basepath)(child);
        return array.concat(routes);
      }, []);
      var pathname = location.pathname;
      var match = pick(routes, pathname);

      if (match) {
        var params = match.params,
            uri = match.uri,
            route = match.route,
            element = match.route.value; // remove the /* from the end for child routes relative paths

        basepath = route["default"] ? basepath : route.path.replace(/\*$/, "");

        var props = _extends$6({}, params, {
          uri: uri,
          location: location,
          navigate: function navigate(to, options) {
            return _navigate2(resolve(to, uri), options);
          }
        });

        var clone = React__default.cloneElement(element, props, element.props.children ? React__default.createElement(Router, {
          location: location,
          primary: primary
        }, element.props.children) : undefined); // using 'div' for < 16.3 support

        var FocusWrapper = primary ? FocusHandler : component; // don't pass any props to 'div'

        var wrapperProps = primary ? _extends$6({
          uri: uri,
          location: location,
          component: component
        }, domProps) : domProps;
        return React__default.createElement(BaseContext.Provider, {
          value: {
            baseuri: uri,
            basepath: basepath
          }
        }, React__default.createElement(FocusWrapper, wrapperProps, clone));
      } else {
        // Not sure if we want this, would require index routes at every level
        // warning(
        //   false,
        //   `<Router basepath="${basepath}">\n\nNothing matched:\n\t${
        //     location.pathname
        //   }\n\nPaths checked: \n\t${routes
        //     .map(route => route.path)
        //     .join(
        //       "\n\t"
        //     )}\n\nTo get rid of this warning, add a default NotFound component as child of Router:
        //   \n\tlet NotFound = () => <div>Not Found!</div>
        //   \n\t<Router>\n\t  <NotFound default/>\n\t  {/* ... */}\n\t</Router>`
        // );
        return null;
      }
    };

    return RouterImpl;
  }(React__default.PureComponent);

  RouterImpl.defaultProps = {
    primary: true
  };
  var FocusContext = createNamedContext("Focus");

  var FocusHandler = function FocusHandler(_ref3) {
    var uri = _ref3.uri,
        location = _ref3.location,
        component = _ref3.component,
        domProps = _objectWithoutProperties(_ref3, ["uri", "location", "component"]);

    return React__default.createElement(FocusContext.Consumer, null, function (requestFocus) {
      return React__default.createElement(FocusHandlerImpl, _extends$6({}, domProps, {
        component: component,
        requestFocus: requestFocus,
        uri: uri,
        location: location
      }));
    });
  }; // don't focus on initial render


  var initialRender = true;
  var focusHandlerCount = 0;

  var FocusHandlerImpl = function (_React$Component2) {
    _inherits(FocusHandlerImpl, _React$Component2);

    function FocusHandlerImpl() {
      var _temp2, _this4, _ret2;

      _classCallCheck(this, FocusHandlerImpl);

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this4), _this4.state = {}, _this4.requestFocus = function (node) {
        if (!_this4.state.shouldFocus && node) {
          node.focus();
        }
      }, _temp2), _possibleConstructorReturn(_this4, _ret2);
    }

    FocusHandlerImpl.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      var initial = prevState.uri == null;

      if (initial) {
        return _extends$6({
          shouldFocus: true
        }, nextProps);
      } else {
        var myURIChanged = nextProps.uri !== prevState.uri;
        var navigatedUpToMe = prevState.location.pathname !== nextProps.location.pathname && nextProps.location.pathname === nextProps.uri;
        return _extends$6({
          shouldFocus: myURIChanged || navigatedUpToMe
        }, nextProps);
      }
    };

    FocusHandlerImpl.prototype.componentDidMount = function componentDidMount() {
      focusHandlerCount++;
      this.focus();
    };

    FocusHandlerImpl.prototype.componentWillUnmount = function componentWillUnmount() {
      focusHandlerCount--;

      if (focusHandlerCount === 0) {
        initialRender = true;
      }
    };

    FocusHandlerImpl.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
      if (prevProps.location !== this.props.location && this.state.shouldFocus) {
        this.focus();
      }
    };

    FocusHandlerImpl.prototype.focus = function focus() {
      if ("development" === "test") {
        // getting cannot read property focus of null in the tests
        // and that bit of global `initialRender` state causes problems
        // should probably figure it out!
        return;
      }

      var requestFocus = this.props.requestFocus;

      if (requestFocus) {
        requestFocus(this.node);
      } else {
        if (initialRender) {
          initialRender = false;
        } else if (this.node) {
          // React polyfills [autofocus] and it fires earlier than cDM,
          // so we were stealing focus away, this line prevents that.
          if (!this.node.contains(document.activeElement)) {
            this.node.focus();
          }
        }
      }
    };

    FocusHandlerImpl.prototype.render = function render() {
      var _this5 = this;

      var _props2 = this.props,
          children = _props2.children,
          style = _props2.style,
          requestFocus = _props2.requestFocus,
          _props2$component = _props2.component,
          Comp = _props2$component === undefined ? "div" : _props2$component,
          uri = _props2.uri,
          location = _props2.location,
          domProps = _objectWithoutProperties(_props2, ["children", "style", "requestFocus", "component", "uri", "location"]);

      return React__default.createElement(Comp, _extends$6({
        style: _extends$6({
          outline: "none"
        }, style),
        tabIndex: "-1",
        ref: function ref(n) {
          return _this5.node = n;
        }
      }, domProps), React__default.createElement(FocusContext.Provider, {
        value: this.requestFocus
      }, this.props.children));
    };

    return FocusHandlerImpl;
  }(React__default.Component);

  polyfill(FocusHandlerImpl);

  var k$1 = function k() {}; ////////////////////////////////////////////////////////////////////////////////


  var forwardRef = React__default.forwardRef;

  if (typeof forwardRef === "undefined") {
    forwardRef = function forwardRef(C) {
      return C;
    };
  }

  var Link = forwardRef(function (_ref4, ref) {
    var innerRef = _ref4.innerRef,
        props = _objectWithoutProperties(_ref4, ["innerRef"]);

    return React__default.createElement(BaseContext.Consumer, null, function (_ref5) {
      var basepath = _ref5.basepath,
          baseuri = _ref5.baseuri;
      return React__default.createElement(Location, null, function (_ref6) {
        var location = _ref6.location,
            navigate = _ref6.navigate;

        var to = props.to,
            state = props.state,
            replace = props.replace,
            _props$getProps = props.getProps,
            getProps = _props$getProps === undefined ? k$1 : _props$getProps,
            anchorProps = _objectWithoutProperties(props, ["to", "state", "replace", "getProps"]);

        var href = resolve(to, baseuri);
        var encodedHref = encodeURI(href);
        var isCurrent = location.pathname === encodedHref;
        var isPartiallyCurrent = startsWith(location.pathname, encodedHref);
        return React__default.createElement("a", _extends$6({
          ref: ref || innerRef,
          "aria-current": isCurrent ? "page" : undefined
        }, anchorProps, getProps({
          isCurrent: isCurrent,
          isPartiallyCurrent: isPartiallyCurrent,
          href: href,
          location: location
        }), {
          href: href,
          onClick: function onClick(event) {
            if (anchorProps.onClick) anchorProps.onClick(event);

            if (shouldNavigate(event)) {
              event.preventDefault();
              var shouldReplace = replace;

              if (typeof replace !== "boolean" && isCurrent) {
                var _location$state = _extends$6({}, location.state),
                    key = _location$state.key,
                    restState = _objectWithoutProperties(_location$state, ["key"]);

                shouldReplace = shallowCompare(_extends$6({}, state), restState);
              }

              navigate(href, {
                state: state,
                replace: shouldReplace
              });
            }
          }
        }));
      });
    });
  });
  Link.displayName = "Link";
  "development" !== "production" ? Link.propTypes = {
    to: propTypes.string.isRequired
  } : void 0; ////////////////////////////////////////////////////////////////////////////////

  function RedirectRequest(uri) {
    this.uri = uri;
  }

  var isRedirect = function isRedirect(o) {
    return o instanceof RedirectRequest;
  };

  var redirectTo = function redirectTo(to) {
    throw new RedirectRequest(to);
  };

  var RedirectImpl = function (_React$Component3) {
    _inherits(RedirectImpl, _React$Component3);

    function RedirectImpl() {
      _classCallCheck(this, RedirectImpl);

      return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    } // Support React < 16 with this hook


    RedirectImpl.prototype.componentDidMount = function componentDidMount() {
      var _props3 = this.props,
          navigate = _props3.navigate,
          to = _props3.to,
          from = _props3.from,
          _props3$replace = _props3.replace,
          replace = _props3$replace === undefined ? true : _props3$replace,
          state = _props3.state,
          noThrow = _props3.noThrow,
          baseuri = _props3.baseuri,
          props = _objectWithoutProperties(_props3, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

      Promise.resolve().then(function () {
        var resolvedTo = resolve(to, baseuri);
        navigate(insertParams(resolvedTo, props), {
          replace: replace,
          state: state
        });
      });
    };

    RedirectImpl.prototype.render = function render() {
      var _props4 = this.props,
          navigate = _props4.navigate,
          to = _props4.to,
          from = _props4.from,
          replace = _props4.replace,
          state = _props4.state,
          noThrow = _props4.noThrow,
          baseuri = _props4.baseuri,
          props = _objectWithoutProperties(_props4, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

      var resolvedTo = resolve(to, baseuri);
      if (!noThrow) redirectTo(insertParams(resolvedTo, props));
      return null;
    };

    return RedirectImpl;
  }(React__default.Component);

  var Redirect = function Redirect(props) {
    return React__default.createElement(BaseContext.Consumer, null, function (_ref7) {
      var baseuri = _ref7.baseuri;
      return React__default.createElement(Location, null, function (locationContext) {
        return React__default.createElement(RedirectImpl, _extends$6({}, locationContext, {
          baseuri: baseuri
        }, props));
      });
    });
  };

  "development" !== "production" ? Redirect.propTypes = {
    from: propTypes.string,
    to: propTypes.string.isRequired
  } : void 0; ////////////////////////////////////////////////////////////////////////////////
  // Junk

  var stripSlashes = function stripSlashes(str) {
    return str.replace(/(^\/+|\/+$)/g, "");
  };

  var createRoute = function createRoute(basepath) {
    return function (element) {
      if (!element) {
        return null;
      }

      if (element.type === React__default.Fragment && element.props.children) {
        return React__default.Children.map(element.props.children, createRoute(basepath));
      }

      !(element.props.path || element.props["default"] || element.type === Redirect) ? "development" !== "production" ? invariant_1(false, "<Router>: Children of <Router> must have a `path` or `default` prop, or be a `<Redirect>`. None found on element type `" + element.type + "`") : invariant_1(false) : void 0;
      !!(element.type === Redirect && (!element.props.from || !element.props.to)) ? "development" !== "production" ? invariant_1(false, "<Redirect from=\"" + element.props.from + "\" to=\"" + element.props.to + "\"/> requires both \"from\" and \"to\" props when inside a <Router>.") : invariant_1(false) : void 0;
      !!(element.type === Redirect && !validateRedirect(element.props.from, element.props.to)) ? "development" !== "production" ? invariant_1(false, "<Redirect from=\"" + element.props.from + " to=\"" + element.props.to + "\"/> has mismatched dynamic segments, ensure both paths have the exact same dynamic segments.") : invariant_1(false) : void 0;

      if (element.props["default"]) {
        return {
          value: element,
          "default": true
        };
      }

      var elementPath = element.type === Redirect ? element.props.from : element.props.path;
      var path = elementPath === "/" ? basepath : stripSlashes(basepath) + "/" + stripSlashes(elementPath);
      return {
        value: element,
        "default": element.props["default"],
        path: element.props.children ? stripSlashes(path) + "/*" : path
      };
    };
  };

  var shouldNavigate = function shouldNavigate(event) {
    return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
  };

  var regular = function regular() {
    return {
      fontFamily: typography.fonts.base,
      fontSize: typography.sizes.overhead,
      color: colors.blue[400],
      textDecoration: "none",
      cursor: "pointer"
    };
  };

  var disabled$1 = function disabled() {
    return {
      fontFamily: typography.fonts.base,
      fontSize: typography.sizes.overhead,
      color: colors.gray[200],
      textDecoration: "none",
      cursor: "not-allowed"
    };
  };

  var useCSS$5 = function useCSS(props) {
    return {
      regular: makeStyles([regular])(props),
      disabled: makeStyles([disabled$1])(props)
    };
  };

  function CustomLink(_a) {
    var children = _a.children,
        _b = _a.to,
        to = _b === void 0 ? "" : _b,
        _c = _a.disabled,
        disabled = _c === void 0 ? false : _c,
        _d = _a.className,
        className = _d === void 0 ? "" : _d,
        _e = _a.replace,
        replace = _e === void 0 ? false : _e,
        _f = _a.ref,
        ref = _f === void 0 ? function () {} : _f,
        _g = _a.innerRef,
        innerRef = _g === void 0 ? function () {} : _g,
        _h = _a.getProps,
        getProps = _h === void 0 ? function () {} : _h,
        _j = _a.state,
        state = _j === void 0 ? null : _j,
        onClick = _a.onClick,
        props = __rest(_a, ["children", "to", "disabled", "className", "replace", "ref", "innerRef", "getProps", "state", "onClick"]);

    var styles = useCSS$5(props);
    if (disabled) return core.jsx("label", {
      css: styles.disabled
    }, children);
    return core.jsx(Link, {
      to: to,
      css: styles.regular,
      className: className,
      replace: replace,
      ref: ref,
      innerRef: innerRef,
      getProps: getProps,
      state: state
    }, children);
  }

  var index$6 = /*#__PURE__*/React.memo(CustomLink);

  var container$3 = function container(_, _a) {
    var position = _a.position;
    return {
      fontFamily: typography.fonts.base,
      display: position === "bottom" || position === "bottom" ? "inline-block" : "inline-flex",
      alignItems: "center",
      "&:focus": {
        outline: "none"
      }
    };
  };

  var outerDot = function outerDot(_, _a) {
    var position = _a.position,
        disabled = _a.disabled;
    return {
      width: spacing.xxl,
      height: spacing.xxl,
      borderRadius: "50%",
      position: "relative",
      margin: position === "bottom" ? "0 auto " + spacing.xs : position === "top" ? spacing.xs + " auto 0" : "",
      "&:hover": {
        backgroundColor: disabled ? "none" : colors.gray[50]
      },
      "&:active": {
        backgroundColor: disabled ? "none" : colors.gray[100]
      },
      "&:focus": {
        backgroundColor: disabled ? "none" : colors.blue[100],
        outline: "none"
      }
    };
  };

  var dot = function dot(_, _a) {
    var disabled = _a.disabled,
        selected = _a.selected,
        error = _a.error;
    return {
      width: spacing.m,
      height: spacing.m,
      borderWidth: 1,
      borderColor: disabled ? colors.gray[200] : error ? colors.error : selected ? colors.blue[500] : colors.gray[300],
      borderStyle: "solid",
      borderRadius: "50%",
      position: "absolute",
      top: "7px",
      left: "7px",
      "&:focus": {
        borderColor: disabled ? colors.gray[200] : colors.gray[700]
      },
      "&:active": {
        borderColor: disabled ? colors.gray[200] : colors.gray[700]
      }
    };
  };

  var BackgroundFromProps = function BackgroundFromProps(styles, _a) {
    var _b;

    if (styles === void 0) {
      styles = {};
    }

    var disabled = _a.disabled,
        selected = _a.selected,
        error = _a.error;
    var key = selected ? "backgroundImage" : "backgroundColor";
    var SELECTED_ERROR = "repeating-radial-gradient(circle, " + colors.error + " 0px, " + colors.error + " 3px, transparent 3px, transparent 6px, " + colors.error + " 6px, " + colors.error + " 8px)";
    var SELECTED_DISABLED = "repeating-radial-gradient(circle, " + colors.gray[200] + " 0px, " + colors.gray[200] + " 3px, transparent 3px, transparent 6px, " + colors.gray[200] + " 6px, " + colors.gray[200] + " 8px)";
    var SELECTED_DEFAULT = "repeating-radial-gradient(circle, " + colors.blue[500] + " 0px, " + colors.blue[500] + " 3px, transparent 3px, transparent 6px, " + colors.blue[500] + " 6px, " + colors.blue[500] + " 8px)";
    var UNSELECTED_DISABLED = colors.gray[50];
    var value = selected && error ? SELECTED_ERROR : selected && disabled ? SELECTED_DISABLED : selected ? SELECTED_DEFAULT : disabled ? UNSELECTED_DISABLED : styles[key];
    return _assign(_assign({}, styles), (_b = {}, _b[key] = value, _b));
  };

  var label$1 = function label(_, _a) {
    var _b;

    var position = _a.position;
    var key = position === "end" ? "margin-left" : position === "start" ? "margin-right" : "margin";
    var value = key === "margin-left" || key === "margin-right" ? spacing.xs : position === "bottom" ? "0 auto " + spacing.xs : spacing.xs + " auto 0";
    return _b = {
      color: colors.white
    }, _b[key] = value, _b;
  };

  var useCSS$6 = function useCSS(_a) {
    var _b = _a.selected,
        selected = _b === void 0 ? false : _b,
        _c = _a.disabled,
        disabled = _c === void 0 ? false : _c,
        _d = _a.error,
        error = _d === void 0 ? false : _d,
        _e = _a.position,
        position = _e === void 0 ? "end" : _e;
    var props = {
      selected: selected,
      disabled: disabled,
      error: error,
      position: position
    };
    return {
      container: makeStyles([container$3])(props),
      outterDot: makeStyles([outerDot])(props),
      dot: makeStyles([dot, BackgroundFromProps])(props),
      label: makeStyles([label$1])(props)
    };
  };

  function RadioButton(_a) {
    var _b = _a.label,
        label = _b === void 0 ? "" : _b,
        _c = _a.position,
        position = _c === void 0 ? "end" : _c,
        _d = _a.disabled,
        disabled = _d === void 0 ? false : _d,
        _e = _a.onClick,
        onClick = _e === void 0 ? function () {} : _e,
        styleProps = __rest(_a, ["label", "position", "disabled", "onClick"]);

    var styles = useCSS$6(_assign({
      disabled: disabled,
      position: position
    }, styleProps));
    return core.jsx("div", {
      css: styles.container,
      onClick: onClick
    }, (position === "start" || position === "top") && core.jsx("label", {
      css: styles.label
    }, label), core.jsx("div", {
      css: styles.outterDot
    }, core.jsx("div", {
      css: styles.dot
    })), (position === "end" || position === "bottom") && core.jsx("label", {
      css: styles.label
    }, label));
  }

  var index$7 = /*#__PURE__*/React.memo(RadioButton);

  var checkbox = function checkbox(_, _a) {
    var labelPosition = _a.labelPosition;
    return {
      color: colors.white,
      display: "inline-flex",
      flexDirection: labelPosition === "top" || labelPosition === "bottom" ? "column" : "row",
      alignItems: "center"
    };
  };

  var fillFromProps = function fillFromProps(styles, _a) {
    var disabled = _a.disabled,
        error = _a.error,
        selected = _a.selected;
    var fill = error ? colors.error : selected && disabled ? colors.gray[700] : selected ? colors.blue[500] : "transparent";
    return _assign(_assign({}, styles), {
      backgroundColor: fill
    });
  };

  var borderColorFromProps$1 = function borderColorFromProps(styles, _a) {
    var disabled = _a.disabled,
        error = _a.error,
        selected = _a.selected;
    var borderColor = error ? colors.error : selected && disabled ? colors.gray[700] : disabled ? colors.gray[400] : selected ? colors.blue[500] : colors.gray[300];
    return _assign(_assign({}, styles), {
      borderColor: borderColor
    });
  };

  var shadowFromProps = function shadowFromProps(styles, _a) {
    var disabled = _a.disabled,
        error = _a.error,
        selected = _a.selected;
    var shadow = error || disabled ? "transparent" : selected ? colors.blue[900] : colors.gray[800];
    return _assign(_assign({}, styles), {
      backgroundColor: shadow
    });
  };

  var outerContainer = function outerContainer(_, _a) {
    var disabled = _a.disabled,
        error = _a.error,
        selected = _a.selected;
    return {
      borderRadius: "999px",
      color: disabled ? colors.gray[400] : colors.white,
      maxWidth: "2rem",
      maxHeight: "2rem",
      minWidth: "2rem",
      minHeight: "2rem",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      "&:focus-within": shadowFromProps({}, {
        disabled: disabled,
        error: error,
        selected: selected
      }),
      "&:hover": disabled ? {} : shadowFromProps({}, {
        disabled: disabled,
        error: error,
        selected: selected
      })
    };
  };

  var innerContainer = function innerContainer(_, _a) {
    var _b;

    var disabled = _a.disabled,
        error = _a.error,
        selected = _a.selected;
    return _b = {
      position: "relative",
      borderWidth: "1px",
      borderStyle: "solid",
      backgroundColor: selected ? fillFromProps({}, {
        disabled: disabled,
        error: error,
        selected: selected
      }).backgroundColor : "transparent",
      width: "1.065rem",
      height: "1.065rem",
      maxWidth: "1.065rem",
      maxHeight: "1.065rem",
      minWidth: "1.065rem",
      minHeight: "1.065rem",
      textAlign: "center"
    }, _b["& > input[type=\"checkbox\"]:checked"] = _assign({
      borderColor: !selected ? colors.white : borderColorFromProps$1({}, {
        disabled: disabled,
        error: error,
        selected: selected
      }).borderColor
    }, fillFromProps({}, {
      disabled: disabled,
      error: error,
      selected: selected
    })), _b["&:active"] = fillFromProps({}, {
      disabled: disabled,
      error: error,
      selected: selected
    }), _b;
  };

  var input$1 = function input() {
    return {
      position: "absolute",
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      opacity: 0,
      width: "100%",
      height: "100%",
      padding: "unset",
      margin: "unset",
      border: "unset"
    };
  };

  var icon = function icon() {
    return {
      verticalAlign: "middle"
    };
  };

  var label$2 = function label(_, _a) {
    var labelPosition = _a.labelPosition;
    var value = labelPosition === "top" || labelPosition === "bottom" ? spacing.xs + " auto" : "auto " + spacing.xs;
    return {
      fontFamily: typography.fonts.base,
      color: colors.white,
      margin: value
    };
  };

  var useCSS$7 = function useCSS(_a) {
    var selected = _a.selected,
        error = _a.error,
        disabled = _a.disabled,
        labelPosition = _a.labelPosition;
    var props = {
      selected: selected,
      error: error,
      disabled: disabled,
      labelPosition: labelPosition
    };
    return {
      checkbox: makeStyles([checkbox])(props),
      outerContainer: makeStyles([outerContainer])(props),
      innerContainer: makeStyles([innerContainer, borderColorFromProps$1])(props),
      input: makeStyles([input$1])(props),
      label: makeStyles([label$2])(props),
      icon: makeStyles([icon])(props)
    };
  };

  function _extends$7() {
    _extends$7 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$7.apply(this, arguments);
  }

  var _ref$5 = /*#__PURE__*/React.createElement("path", {
    d: "M1 6.5L3.5 9l7-8",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgCheck(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$7({
      width: 12,
      height: 11,
      fill: "none"
    }, props), _ref$5);
  }

  function _extends$8() {
    _extends$8 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$8.apply(this, arguments);
  }

  var _ref$6 = /*#__PURE__*/React.createElement("path", {
    d: "M1 1h10",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  });

  function SvgDash(props) {
    return /*#__PURE__*/React.createElement("svg", _extends$8({
      width: 12,
      height: 2,
      fill: "none"
    }, props), _ref$6);
  }

  function Checkbox(_a) {
    var _b = _a.label,
        label = _b === void 0 ? "" : _b,
        _c = _a.disabled,
        disabled = _c === void 0 ? false : _c,
        _d = _a.error,
        error = _d === void 0 ? false : _d,
        _e = _a.selected,
        selected = _e === void 0 ? false : _e,
        _f = _a.icon,
        icon = _f === void 0 ? "check" : _f,
        _g = _a.labelPosition,
        labelPosition = _g === void 0 ? "end" : _g,
        _h = _a.onChange,
        onChange = _h === void 0 ? function () {} : _h,
        styleProps = __rest(_a, ["label", "disabled", "error", "selected", "icon", "labelPosition", "onChange"]);

    var styles = useCSS$7(_assign(_assign({}, styleProps), {
      selected: selected,
      error: error,
      disabled: disabled
    }));
    return core.jsx("div", {
      css: styles.checkbox
    }, (labelPosition === "start" || labelPosition === "top") && core.jsx("label", {
      css: styles.label
    }, label), core.jsx("div", {
      css: styles.outerContainer
    }, core.jsx("div", {
      css: styles.innerContainer
    }, core.jsx("input", {
      css: styles.input,
      type: "checkbox",
      checked: selected,
      disabled: disabled,
      onChange: onChange
    }), selected && (icon === "check" ? core.jsx(SvgCheck, {
      css: styles.icon
    }) : core.jsx(SvgDash, {
      css: styles.icon
    })))), (labelPosition === "end" || labelPosition === "bottom") && core.jsx("label", {
      css: styles.label
    }, label));
  }

  var baseStyles$2 = function baseStyles() {
    return {
      border: "1px solid " + colors.blue[500],
      color: colors.white,
      backgroundColor: colors.black,
      textAlign: "center",
      padding: "15px 20px",
      display: "inline-block",
      cursor: "default",
      fontFamily: typography.fonts.base,
      fontWeight: typography.weights.medium,
      fontSize: typography.sizes.button.large,
      margin: "0 15px 0 0",
      lineHeight: typography.sizes.button.large,
      span: {
        marginLeft: "20px",
        fontSize: typography.sizes.icon.xxlarge,
        fontWeight: typography.weights.regular,
        lineHeight: 0,
        verticalAlign: "sub"
      },
      "&::selection": {
        background: "transparent"
      }
    };
  };

  var shadowFromProps$1 = function shadowFromProps(styles, _a) {
    var _b = _a.selected,
        selected = _b === void 0 ? false : _b;
    return _assign(_assign({}, styles), {
      boxShadow: selected ? "3px 3px " + colors.blue[500] : "none"
    });
  };

  var useCSS$8 = function useCSS(props) {
    return makeStyles([baseStyles$2, shadowFromProps$1])(props);
  };

  function TagButton(_a) {
    var text = _a.text,
        onClick = _a.onClick,
        styleProps = __rest(_a, ["text", "onClick"]);

    var styles = useCSS$8(styleProps);
    return core.jsx("div", {
      css: styles,
      onClick: onClick
    }, text, core.jsx("span", null, "+"));
  }

  var index$8 = /*#__PURE__*/React.memo(TagButton);

  var container$4 = function container() {
    return {
      fontFamily: typography.fonts.base,
      color: colors.white
    };
  };

  var tabs = function tabs() {
    return {
      display: "flex"
    };
  };

  var tab = function tab() {
    return {
      flexBasis: "content",
      padding: spacing.m + " " + spacing.l,
      cursor: "pointer",
      borderBottom: "3px solid " + colors.gray[900],
      minWidth: "100px",
      colors: colors.gray[200],
      textAlign: "center"
    };
  };

  var activeTab = function activeTab() {
    return _assign(_assign({}, tab()), {
      color: colors.white,
      backgroundColor: "transparent",
      borderBottom: "3px solid " + colors.blue[500]
    });
  };

  var useCSS$9 = function useCSS(props) {
    return {
      container: makeStyles([container$4])(props),
      tabs: makeStyles([tabs])(props),
      tab: makeStyles([tab])(props),
      activeTab: makeStyles([activeTab])(props)
    };
  };

  function Tabs(_a) {
    var children = _a.children,
        _b = _a.onChange,
        onChange = _b === void 0 ? function () {} : _b,
        styleProps = __rest(_a, ["children", "onChange"]);

    var _c = React.useState(0),
        activeTab = _c[0],
        setActiveTab = _c[1];

    function onTabChange(tab) {
      setActiveTab(tab);
      onChange(tab);
    }

    var styles = useCSS$9(styleProps);
    return core.jsx("div", {
      css: styles.container
    }, core.jsx("div", {
      css: styles.tabs
    }, children.map(function (tab, index) {
      return core.jsx("div", {
        key: "tab-" + index,
        css: index === activeTab ? styles.activeTab : styles.tab,
        onClick: function onClick() {
          return onTabChange(index);
        }
      }, tab.props.label);
    })), core.jsx("div", null, children.filter(function (tab, index) {
      return index === activeTab;
    }).map(function (tab) {
      return tab;
    })));
  }

  var index$9 = /*#__PURE__*/React.memo(Tabs);

  function Tab(_a) {
    // let styles = makeStyles(styleProps)
    var label = _a.label,
        children = _a.children;
    return core.jsx("div", null, children);
  }

  var styles = function styles() {
    return {
      border: "1px solid " + colors.blue[700],
      color: colors.white,
      backgroundColor: colors.black,
      textAlign: "center",
      padding: "10px 15px",
      display: "inline-block",
      cursor: "default",
      fontFamily: typography.fonts.base,
      fontWeight: typography.weights.regular,
      fontSize: typography.sizes.button.medium,
      margin: "0 15px 0 0",
      "&::selection": {
        background: "transparent"
      }
    };
  };

  var useCSS$a = function useCSS(_a) {
    return makeStyles([styles])({});
  };

  function Tag(_a) {
    var text = _a.text,
        styleProps = __rest(_a, ["text"]);

    var styles = useCSS$a();
    return core.jsx("div", {
      css: styles
    }, text);
  }

  var index$a = /*#__PURE__*/React.memo(Tag);
  var FIELD_WIDTH = "250px";

  var wrapper$2 = function wrapper() {
    return {
      display: "block",
      maxWidth: FIELD_WIDTH,
      fontFamily: typography.fonts.base
    };
  };

  var container$5 = function container(_, _a) {
    var disabled = _a.disabled;
    return {
      position: "relative",
      width: "100%",
      height: "48px",
      display: "inline-flex",
      cursor: disabled ? "not-allowed" : "default"
    };
  };

  var border = function border() {
    return {
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      borderWidth: "1px",
      borderStyle: "solid",
      display: "flex",
      alignItems: "center",
      justifyContent: "left"
    };
  };

  var borderColor = function borderColor(styles, _a) {
    var disabled = _a.disabled,
        error = _a.error,
        isActive = _a.isActive,
        focus = _a.focus;
    var borderColor = disabled ? colors.gray[200] : error ? colors.error : focus ? colors.blue[500] : isActive ? colors.gray[200] : colors.gray[400];
    return _assign(_assign({}, styles), {
      borderColor: borderColor
    });
  };

  var label$3 = function label(_, _a) {
    var _b;

    var error = _a.error,
        iconPosition = _a.iconPosition;
    return _b = {
      color: error ? colors.error : colors.gray[400],
      padding: "0 " + spacing.s,
      backgroundColor: colors.black
    }, _b["padding-" + iconPosition] = spacing.xxxxxl, _b.fontSize = typography.sizes.body2, _b.transition = "all 0.1s linear", _b;
  };

  var input$2 = function input(_, _a) {
    var _b;

    var iconPosition = _a.iconPosition;
    return _b = {
      display: "none",
      width: "100%",
      margin: "0 " + spacing.s
    }, _b["margin-" + iconPosition] = spacing.xxxxxl, _b.background = "none", _b.border = "none", _b.outline = "none", _b.color = colors.white, _b.fontSize = typography.sizes.body2, _b.padding = "5px 0", _b;
  };

  var icon$1 = function icon(_, _a) {
    var _b;

    var iconPosition = _a.iconPosition;
    return _b = {
      color: colors.gray[300],
      fontSize: typography.sizes.icon.xlarge,
      position: "absolute",
      top: spacing.s
    }, _b["" + iconPosition] = spacing.s, _b;
  };

  var helper$1 = function helper(_, _a) {
    var error = _a.error;
    return {
      color: error ? colors.error : colors.gray[400]
    };
  };

  var useCSS$b = function useCSS(_a) {
    var _b = _a.disabled,
        disabled = _b === void 0 ? false : _b,
        _c = _a.focus,
        focus = _c === void 0 ? false : _c,
        _d = _a.error,
        error = _d === void 0 ? false : _d,
        _e = _a.isActive,
        isActive = _e === void 0 ? false : _e,
        _f = _a.iconPosition,
        iconPosition = _f === void 0 ? "right" : _f;
    var props = {
      disabled: disabled,
      focus: focus,
      error: error,
      isActive: isActive,
      iconPosition: iconPosition
    };
    return {
      wrapper: makeStyles([wrapper$2])(props),
      container: makeStyles([container$5])(props),
      border: makeStyles([border, borderColor])(props),
      label: makeStyles([label$3])(props),
      input: makeStyles([input$2])(props),
      icon: makeStyles([icon$1])(props),
      helper: makeStyles([helper$1])(props)
    };
  };

  function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  var noop = function noop() {};

  var _WINDOW = {};
  var _DOCUMENT = {};
  var _MUTATION_OBSERVER = null;
  var _PERFORMANCE = {
    mark: noop,
    measure: noop
  };

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
    if (typeof performance !== 'undefined') _PERFORMANCE = performance;
  } catch (e) {}

  var _ref$7 = _WINDOW.navigator || {},
      _ref$userAgent = _ref$7.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var PERFORMANCE = _PERFORMANCE;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');
  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var DEFAULT_FAMILY_PREFIX = 'fa';
  var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
  var DATA_FA_I2SVG = 'data-fa-i2svg';

  var PRODUCTION = function () {
    try {
      return "development" === 'production';
    } catch (e) {
      return false;
    }
  }();

  var DUOTONE_CLASSES = {
    GROUP: 'group',
    SWAP_OPACITY: 'swap-opacity',
    PRIMARY: 'primary',
    SECONDARY: 'secondary'
  };
  var initial = WINDOW.FontAwesomeConfig || {};

  function getAttrConfig(attr) {
    var element = DOCUMENT.querySelector('script[' + attr + ']');

    if (element) {
      return element.getAttribute(attr);
    }
  }

  function coerce(val) {
    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
    // We'll assume that this is an indication that it should be toggled to true
    // For example <script data-search-pseudo-elements src="..."></script>
    if (val === '') return true;
    if (val === 'false') return false;
    if (val === 'true') return true;
    return val;
  }

  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {
    var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];
    attrs.forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          attr = _ref2[0],
          key = _ref2[1];

      var val = coerce(getAttrConfig(attr));

      if (val !== undefined && val !== null) {
        initial[key] = val;
      }
    });
  }

  var _default = {
    familyPrefix: DEFAULT_FAMILY_PREFIX,
    replacementClass: DEFAULT_REPLACEMENT_CLASS,
    autoReplaceSvg: true,
    autoAddCss: true,
    autoA11y: true,
    searchPseudoElements: false,
    observeMutations: true,
    mutateApproach: 'async',
    keepOriginalSource: true,
    measurePerformance: false,
    showMissingIcons: true
  };

  var _config = _objectSpread({}, _default, initial);

  if (!_config.autoReplaceSvg) _config.observeMutations = false;

  var config = _objectSpread({}, _config);

  WINDOW.FontAwesomeConfig = config;
  var w$1 = WINDOW || {};
  if (!w$1[NAMESPACE_IDENTIFIER]) w$1[NAMESPACE_IDENTIFIER] = {};
  if (!w$1[NAMESPACE_IDENTIFIER].styles) w$1[NAMESPACE_IDENTIFIER].styles = {};
  if (!w$1[NAMESPACE_IDENTIFIER].hooks) w$1[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w$1[NAMESPACE_IDENTIFIER].shims) w$1[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w$1[NAMESPACE_IDENTIFIER];
  var functions = [];

  var listener = function listener() {
    DOCUMENT.removeEventListener('DOMContentLoaded', listener);
    loaded = 1;
    functions.map(function (fn) {
      return fn();
    });
  };

  var loaded = false;

  if (IS_DOM) {
    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);
  }

  var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';
  var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
  var meaninglessTransform = {
    size: 16,
    x: 0,
    y: 0,
    rotate: 0,
    flipX: false,
    flipY: false
  };

  function insertCss(css) {
    if (!css || !IS_DOM) {
      return;
    }

    var style = DOCUMENT.createElement('style');
    style.setAttribute('type', 'text/css');
    style.innerHTML = css;
    var headChildren = DOCUMENT.head.childNodes;
    var beforeChild = null;

    for (var i = headChildren.length - 1; i > -1; i--) {
      var child = headChildren[i];
      var tagName = (child.tagName || '').toUpperCase();

      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
        beforeChild = child;
      }
    }

    DOCUMENT.head.insertBefore(style, beforeChild);
    return css;
  }

  var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

  function nextUniqueId() {
    var size = 12;
    var id = '';

    while (size-- > 0) {
      id += idPool[Math.random() * 62 | 0];
    }

    return id;
  }

  function htmlEscape(str) {
    return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  }

  function joinAttributes(attributes) {
    return Object.keys(attributes || {}).reduce(function (acc, attributeName) {
      return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
    }, '').trim();
  }

  function joinStyles(styles) {
    return Object.keys(styles || {}).reduce(function (acc, styleName) {
      return acc + "".concat(styleName, ": ").concat(styles[styleName], ";");
    }, '');
  }

  function transformIsMeaningful(transform) {
    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
  }

  function transformForSvg(_ref) {
    var transform = _ref.transform,
        containerWidth = _ref.containerWidth,
        iconWidth = _ref.iconWidth;
    var outer = {
      transform: "translate(".concat(containerWidth / 2, " 256)")
    };
    var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
    var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
    var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
    var inner = {
      transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
    };
    var path = {
      transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
    };
    return {
      outer: outer,
      inner: inner,
      path: path
    };
  }

  var ALL_SPACE = {
    x: 0,
    y: 0,
    width: '100%',
    height: '100%'
  };

  function fillBlack(_abstract) {
    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    if (_abstract.attributes && (_abstract.attributes.fill || force)) {
      _abstract.attributes.fill = 'black';
    }

    return _abstract;
  }

  function deGroup(_abstract2) {
    if (_abstract2.tag === 'g') {
      return _abstract2.children;
    } else {
      return [_abstract2];
    }
  }

  function makeIconMasking(_ref) {
    var children = _ref.children,
        attributes = _ref.attributes,
        main = _ref.main,
        mask = _ref.mask,
        explicitMaskId = _ref.maskId,
        transform = _ref.transform;
    var mainWidth = main.width,
        mainPath = main.icon;
    var maskWidth = mask.width,
        maskPath = mask.icon;
    var trans = transformForSvg({
      transform: transform,
      containerWidth: maskWidth,
      iconWidth: mainWidth
    });
    var maskRect = {
      tag: 'rect',
      attributes: _objectSpread({}, ALL_SPACE, {
        fill: 'white'
      })
    };
    var maskInnerGroupChildrenMixin = mainPath.children ? {
      children: mainPath.children.map(fillBlack)
    } : {};
    var maskInnerGroup = {
      tag: 'g',
      attributes: _objectSpread({}, trans.inner),
      children: [fillBlack(_objectSpread({
        tag: mainPath.tag,
        attributes: _objectSpread({}, mainPath.attributes, trans.path)
      }, maskInnerGroupChildrenMixin))]
    };
    var maskOuterGroup = {
      tag: 'g',
      attributes: _objectSpread({}, trans.outer),
      children: [maskInnerGroup]
    };
    var maskId = "mask-".concat(explicitMaskId || nextUniqueId());
    var clipId = "clip-".concat(explicitMaskId || nextUniqueId());
    var maskTag = {
      tag: 'mask',
      attributes: _objectSpread({}, ALL_SPACE, {
        id: maskId,
        maskUnits: 'userSpaceOnUse',
        maskContentUnits: 'userSpaceOnUse'
      }),
      children: [maskRect, maskOuterGroup]
    };
    var defs = {
      tag: 'defs',
      children: [{
        tag: 'clipPath',
        attributes: {
          id: clipId
        },
        children: deGroup(maskPath)
      }, maskTag]
    };
    children.push(defs, {
      tag: 'rect',
      attributes: _objectSpread({
        fill: 'currentColor',
        'clip-path': "url(#".concat(clipId, ")"),
        mask: "url(#".concat(maskId, ")")
      }, ALL_SPACE)
    });
    return {
      children: children,
      attributes: attributes
    };
  }

  function makeIconStandard(_ref) {
    var children = _ref.children,
        attributes = _ref.attributes,
        main = _ref.main,
        transform = _ref.transform,
        styles = _ref.styles;
    var styleString = joinStyles(styles);

    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }

    if (transformIsMeaningful(transform)) {
      var trans = transformForSvg({
        transform: transform,
        containerWidth: main.width,
        iconWidth: main.width
      });
      children.push({
        tag: 'g',
        attributes: _objectSpread({}, trans.outer),
        children: [{
          tag: 'g',
          attributes: _objectSpread({}, trans.inner),
          children: [{
            tag: main.icon.tag,
            children: main.icon.children,
            attributes: _objectSpread({}, main.icon.attributes, trans.path)
          }]
        }]
      });
    } else {
      children.push(main.icon);
    }

    return {
      children: children,
      attributes: attributes
    };
  }

  function asIcon(_ref) {
    var children = _ref.children,
        main = _ref.main,
        mask = _ref.mask,
        attributes = _ref.attributes,
        styles = _ref.styles,
        transform = _ref.transform;

    if (transformIsMeaningful(transform) && main.found && !mask.found) {
      var width = main.width,
          height = main.height;
      var offset = {
        x: width / height / 2,
        y: 0.5
      };
      attributes['style'] = joinStyles(_objectSpread({}, styles, {
        'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
      }));
    }

    return [{
      tag: 'svg',
      attributes: attributes,
      children: children
    }];
  }

  function asSymbol(_ref) {
    var prefix = _ref.prefix,
        iconName = _ref.iconName,
        children = _ref.children,
        attributes = _ref.attributes,
        symbol = _ref.symbol;
    var id = symbol === true ? "".concat(prefix, "-").concat(config.familyPrefix, "-").concat(iconName) : symbol;
    return [{
      tag: 'svg',
      attributes: {
        style: 'display: none;'
      },
      children: [{
        tag: 'symbol',
        attributes: _objectSpread({}, attributes, {
          id: id
        }),
        children: children
      }]
    }];
  }

  function makeInlineSvgAbstract(params) {
    var _params$icons = params.icons,
        main = _params$icons.main,
        mask = _params$icons.mask,
        prefix = params.prefix,
        iconName = params.iconName,
        transform = params.transform,
        symbol = params.symbol,
        title = params.title,
        maskId = params.maskId,
        titleId = params.titleId,
        extra = params.extra,
        _params$watchable = params.watchable,
        watchable = _params$watchable === void 0 ? false : _params$watchable;

    var _ref = mask.found ? mask : main,
        width = _ref.width,
        height = _ref.height;

    var widthClass = "fa-w-".concat(Math.ceil(width / height * 16));
    var attrClass = [config.replacementClass, iconName ? "".concat(config.familyPrefix, "-").concat(iconName) : '', widthClass].filter(function (c) {
      return extra.classes.indexOf(c) === -1;
    }).concat(extra.classes).join(' ');
    var content = {
      children: [],
      attributes: _objectSpread({}, extra.attributes, {
        'data-prefix': prefix,
        'data-icon': iconName,
        'class': attrClass,
        'role': extra.attributes.role || 'img',
        'xmlns': 'http://www.w3.org/2000/svg',
        'viewBox': "0 0 ".concat(width, " ").concat(height)
      })
    };

    if (watchable) {
      content.attributes[DATA_FA_I2SVG] = '';
    }

    if (title) content.children.push({
      tag: 'title',
      attributes: {
        id: content.attributes['aria-labelledby'] || "title-".concat(titleId || nextUniqueId())
      },
      children: [title]
    });

    var args = _objectSpread({}, content, {
      prefix: prefix,
      iconName: iconName,
      main: main,
      mask: mask,
      maskId: maskId,
      transform: transform,
      symbol: symbol,
      styles: extra.styles
    });

    var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),
        children = _ref2.children,
        attributes = _ref2.attributes;

    args.children = children;
    args.attributes = attributes;

    if (symbol) {
      return asSymbol(args);
    } else {
      return asIcon(args);
    }
  }

  var noop$1 = function noop() {};

  var p$1 = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
    mark: noop$1,
    measure: noop$1
  };
  /**
   * Internal helper to bind a function known to have 4 arguments
   * to a given context.
   */

  var bindInternal4 = function bindInternal4(func, thisContext) {
    return function (a, b, c, d) {
      return func.call(thisContext, a, b, c, d);
    };
  };
  /**
   * # Reduce
   *
   * A fast object `.reduce()` implementation.
   *
   * @param  {Object}   subject      The object to reduce over.
   * @param  {Function} fn           The reducer function.
   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
   * @param  {Object}   thisContext  The context for the reducer.
   * @return {mixed}                 The final result.
   */


  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
    var keys = Object.keys(subject),
        length = keys.length,
        iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
        i,
        key,
        result;

    if (initialValue === undefined) {
      i = 1;
      result = subject[keys[0]];
    } else {
      i = 0;
      result = initialValue;
    }

    for (; i < length; i++) {
      key = keys[i];
      result = iterator(result, subject[key], key, subject);
    }

    return result;
  };

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var styles$1 = namespace.styles,
      shims = namespace.shims;
  var _byUnicode = {};
  var _byLigature = {};
  var _byOldName = {};

  var build = function build() {
    var lookup = function lookup(reducer) {
      return reduce(styles$1, function (o, style, prefix) {
        o[prefix] = reduce(style, reducer, {});
        return o;
      }, {});
    };

    _byUnicode = lookup(function (acc, icon, iconName) {
      if (icon[3]) {
        acc[icon[3]] = iconName;
      }

      return acc;
    });
    _byLigature = lookup(function (acc, icon, iconName) {
      var ligatures = icon[2];
      acc[iconName] = iconName;
      ligatures.forEach(function (ligature) {
        acc[ligature] = iconName;
      });
      return acc;
    });
    var hasRegular = ('far' in styles$1);
    _byOldName = reduce(shims, function (acc, shim) {
      var oldName = shim[0];
      var prefix = shim[1];
      var iconName = shim[2];

      if (prefix === 'far' && !hasRegular) {
        prefix = 'fas';
      }

      acc[oldName] = {
        prefix: prefix,
        iconName: iconName
      };
      return acc;
    }, {});
  };

  build();
  var styles$1$1 = namespace.styles;

  function iconFromMapping(mapping, prefix, iconName) {
    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
      return {
        prefix: prefix,
        iconName: iconName,
        icon: mapping[prefix][iconName]
      };
    }
  }

  function toHtml(abstractNodes) {
    var tag = abstractNodes.tag,
        _abstractNodes$attrib = abstractNodes.attributes,
        attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,
        _abstractNodes$childr = abstractNodes.children,
        children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;

    if (typeof abstractNodes === 'string') {
      return htmlEscape(abstractNodes);
    } else {
      return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
    }
  }

  var parseTransformString = function parseTransformString(transformString) {
    var transform = {
      size: 16,
      x: 0,
      y: 0,
      flipX: false,
      flipY: false,
      rotate: 0
    };

    if (!transformString) {
      return transform;
    } else {
      return transformString.toLowerCase().split(' ').reduce(function (acc, n) {
        var parts = n.toLowerCase().split('-');
        var first = parts[0];
        var rest = parts.slice(1).join('-');

        if (first && rest === 'h') {
          acc.flipX = true;
          return acc;
        }

        if (first && rest === 'v') {
          acc.flipY = true;
          return acc;
        }

        rest = parseFloat(rest);

        if (isNaN(rest)) {
          return acc;
        }

        switch (first) {
          case 'grow':
            acc.size = acc.size + rest;
            break;

          case 'shrink':
            acc.size = acc.size - rest;
            break;

          case 'left':
            acc.x = acc.x - rest;
            break;

          case 'right':
            acc.x = acc.x + rest;
            break;

          case 'up':
            acc.y = acc.y - rest;
            break;

          case 'down':
            acc.y = acc.y + rest;
            break;

          case 'rotate':
            acc.rotate = acc.rotate + rest;
            break;
        }

        return acc;
      }, transform);
    }
  };

  function MissingIcon(error) {
    this.name = 'MissingIcon';
    this.message = error || 'Icon unavailable';
    this.stack = new Error().stack;
  }

  MissingIcon.prototype = Object.create(Error.prototype);
  MissingIcon.prototype.constructor = MissingIcon;
  var FILL = {
    fill: 'currentColor'
  };
  var ANIMATION_BASE = {
    attributeType: 'XML',
    repeatCount: 'indefinite',
    dur: '2s'
  };
  var RING = {
    tag: 'path',
    attributes: _objectSpread({}, FILL, {
      d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
    })
  };

  var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {
    attributeName: 'opacity'
  });

  var DOT = {
    tag: 'circle',
    attributes: _objectSpread({}, FILL, {
      cx: '256',
      cy: '364',
      r: '28'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread({}, ANIMATION_BASE, {
        attributeName: 'r',
        values: '28;14;28;28;14;28;'
      })
    }, {
      tag: 'animate',
      attributes: _objectSpread({}, OPACITY_ANIMATE, {
        values: '1;0;1;1;0;1;'
      })
    }]
  };
  var QUESTION = {
    tag: 'path',
    attributes: _objectSpread({}, FILL, {
      opacity: '1',
      d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread({}, OPACITY_ANIMATE, {
        values: '1;0;0;0;0;1;'
      })
    }]
  };
  var EXCLAMATION = {
    tag: 'path',
    attributes: _objectSpread({}, FILL, {
      opacity: '0',
      d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread({}, OPACITY_ANIMATE, {
        values: '0;0;1;1;0;0;'
      })
    }]
  };
  var styles$2 = namespace.styles;

  function asFoundIcon(icon) {
    var width = icon[0];
    var height = icon[1];

    var _icon$slice = icon.slice(4),
        _icon$slice2 = _slicedToArray(_icon$slice, 1),
        vectorData = _icon$slice2[0];

    var element = null;

    if (Array.isArray(vectorData)) {
      element = {
        tag: 'g',
        attributes: {
          "class": "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
        },
        children: [{
          tag: 'path',
          attributes: {
            "class": "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
            fill: 'currentColor',
            d: vectorData[0]
          }
        }, {
          tag: 'path',
          attributes: {
            "class": "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
            fill: 'currentColor',
            d: vectorData[1]
          }
        }]
      };
    } else {
      element = {
        tag: 'path',
        attributes: {
          fill: 'currentColor',
          d: vectorData
        }
      };
    }

    return {
      found: true,
      width: width,
      height: height,
      icon: element
    };
  }

  var styles$3 = namespace.styles;
  var baseStyles$3 = "svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}";

  function css() {
    var dfp = DEFAULT_FAMILY_PREFIX;
    var drc = DEFAULT_REPLACEMENT_CLASS;
    var fp = config.familyPrefix;
    var rc = config.replacementClass;
    var s = baseStyles$3;

    if (fp !== dfp || rc !== drc) {
      var dPatt = new RegExp("\\.".concat(dfp, "\\-"), 'g');
      var customPropPatt = new RegExp("\\--".concat(dfp, "\\-"), 'g');
      var rPatt = new RegExp("\\.".concat(drc), 'g');
      s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
    }

    return s;
  }

  var Library = /*#__PURE__*/function () {
    function Library() {
      _classCallCheck$1(this, Library);

      this.definitions = {};
    }

    _createClass(Library, [{
      key: "add",
      value: function add() {
        var _this = this;

        for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
          definitions[_key] = arguments[_key];
        }

        var additions = definitions.reduce(this._pullDefinitions, {});
        Object.keys(additions).forEach(function (key) {
          _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);
          defineIcons(key, additions[key]);
          build();
        });
      }
    }, {
      key: "reset",
      value: function reset() {
        this.definitions = {};
      }
    }, {
      key: "_pullDefinitions",
      value: function _pullDefinitions(additions, definition) {
        var normalized = definition.prefix && definition.iconName && definition.icon ? {
          0: definition
        } : definition;
        Object.keys(normalized).map(function (key) {
          var _normalized$key = normalized[key],
              prefix = _normalized$key.prefix,
              iconName = _normalized$key.iconName,
              icon = _normalized$key.icon;
          if (!additions[prefix]) additions[prefix] = {};
          additions[prefix][iconName] = icon;
        });
        return additions;
      }
    }]);

    return Library;
  }();

  function ensureCss() {
    if (config.autoAddCss && !_cssInserted) {
      insertCss(css());
      _cssInserted = true;
    }
  }

  function apiObject(val, abstractCreator) {
    Object.defineProperty(val, 'abstract', {
      get: abstractCreator
    });
    Object.defineProperty(val, 'html', {
      get: function get() {
        return val["abstract"].map(function (a) {
          return toHtml(a);
        });
      }
    });
    Object.defineProperty(val, 'node', {
      get: function get() {
        if (!IS_DOM) return;
        var container = DOCUMENT.createElement('div');
        container.innerHTML = val.html;
        return container.children;
      }
    });
    return val;
  }

  function findIconDefinition(iconLookup) {
    var _iconLookup$prefix = iconLookup.prefix,
        prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,
        iconName = iconLookup.iconName;
    if (!iconName) return;
    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
  }

  function resolveIcons(next) {
    return function (maybeIconDefinition) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
      var mask = params.mask;

      if (mask) {
        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
      }

      return next(iconDefinition, _objectSpread({}, params, {
        mask: mask
      }));
    };
  }

  var library = new Library();
  var _cssInserted = false;
  var parse = {
    transform: function transform(transformString) {
      return parseTransformString(transformString);
    }
  };
  var icon$2 = resolveIcons(function (iconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _params$transform = params.transform,
        transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
        _params$symbol = params.symbol,
        symbol = _params$symbol === void 0 ? false : _params$symbol,
        _params$mask = params.mask,
        mask = _params$mask === void 0 ? null : _params$mask,
        _params$maskId = params.maskId,
        maskId = _params$maskId === void 0 ? null : _params$maskId,
        _params$title = params.title,
        title = _params$title === void 0 ? null : _params$title,
        _params$titleId = params.titleId,
        titleId = _params$titleId === void 0 ? null : _params$titleId,
        _params$classes = params.classes,
        classes = _params$classes === void 0 ? [] : _params$classes,
        _params$attributes = params.attributes,
        attributes = _params$attributes === void 0 ? {} : _params$attributes,
        _params$styles = params.styles,
        styles = _params$styles === void 0 ? {} : _params$styles;
    if (!iconDefinition) return;
    var prefix = iconDefinition.prefix,
        iconName = iconDefinition.iconName,
        icon = iconDefinition.icon;
    return apiObject(_objectSpread({
      type: 'icon'
    }, iconDefinition), function () {
      ensureCss();

      if (config.autoA11y) {
        if (title) {
          attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
        } else {
          attributes['aria-hidden'] = 'true';
          attributes['focusable'] = 'false';
        }
      }

      return makeInlineSvgAbstract({
        icons: {
          main: asFoundIcon(icon),
          mask: mask ? asFoundIcon(mask.icon) : {
            found: false,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix: prefix,
        iconName: iconName,
        transform: _objectSpread({}, meaninglessTransform, transform),
        symbol: symbol,
        title: title,
        maskId: maskId,
        titleId: titleId,
        extra: {
          attributes: attributes,
          styles: styles,
          classes: classes
        }
      });
    });
  });

  function _typeof(obj) {
    if (typeof Symbol === "function" && (0, _typeof3["default"])(Symbol.iterator) === "symbol") {
      _typeof = function _typeof(obj) {
        return (0, _typeof3["default"])(obj);
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : (0, _typeof3["default"])(obj);
      };
    }

    return _typeof(obj);
  }

  function _defineProperty$1(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty$1(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties$1(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  } // Get CSS class list from a props object


  function classList(props) {
    var _classes;

    var spin = props.spin,
        pulse = props.pulse,
        fixedWidth = props.fixedWidth,
        inverse = props.inverse,
        border = props.border,
        listItem = props.listItem,
        flip = props.flip,
        size = props.size,
        rotation = props.rotation,
        pull = props.pull; // map of CSS class names to properties

    var classes = (_classes = {
      'fa-spin': spin,
      'fa-pulse': pulse,
      'fa-fw': fixedWidth,
      'fa-inverse': inverse,
      'fa-border': border,
      'fa-li': listItem,
      'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',
      'fa-flip-vertical': flip === 'vertical' || flip === 'both'
    }, _defineProperty$1(_classes, "fa-".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty$1(_classes, "fa-rotate-".concat(rotation), typeof rotation !== 'undefined' && rotation !== null), _defineProperty$1(_classes, "fa-pull-".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty$1(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object
    // return an array of the keys where the value for the key is not null

    return Object.keys(classes).map(function (key) {
      return classes[key] ? key : null;
    }).filter(function (key) {
      return key;
    });
  } // Camelize taken from humps
  // humps is copyright © 2012+ Dom Christie
  // Released under the MIT license.
  // Performant way to determine if object coerces to a number


  function _isNumerical(obj) {
    obj = obj - 0; // eslint-disable-next-line no-self-compare

    return obj === obj;
  }

  function camelize(string) {
    if (_isNumerical(string)) {
      return string;
    } // eslint-disable-next-line no-useless-escape


    string = string.replace(/[\-_\s]+(.)?/g, function (match, chr) {
      return chr ? chr.toUpperCase() : '';
    }); // Ensure 1st char is always lowercase

    return string.substr(0, 1).toLowerCase() + string.substr(1);
  }

  function capitalize(val) {
    return val.charAt(0).toUpperCase() + val.slice(1);
  }

  function styleToObject(style) {
    return style.split(';').map(function (s) {
      return s.trim();
    }).filter(function (s) {
      return s;
    }).reduce(function (acc, pair) {
      var i = pair.indexOf(':');
      var prop = camelize(pair.slice(0, i));
      var value = pair.slice(i + 1).trim();
      prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;
      return acc;
    }, {});
  }

  function convert(createElement, element) {
    var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (typeof element === 'string') {
      return element;
    }

    var children = (element.children || []).map(function (child) {
      return convert(createElement, child);
    });
    /* eslint-disable dot-notation */

    var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {
      var val = element.attributes[key];

      switch (key) {
        case 'class':
          acc.attrs['className'] = val;
          delete element.attributes['class'];
          break;

        case 'style':
          acc.attrs['style'] = styleToObject(val);
          break;

        default:
          if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {
            acc.attrs[key.toLowerCase()] = val;
          } else {
            acc.attrs[camelize(key)] = val;
          }

      }

      return acc;
    }, {
      attrs: {}
    });

    var _extraProps$style = extraProps.style,
        existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,
        remaining = _objectWithoutProperties$1(extraProps, ["style"]);

    mixins.attrs['style'] = _objectSpread2({}, mixins.attrs['style'], {}, existingStyle);
    /* eslint-enable */

    return createElement.apply(void 0, [element.tag, _objectSpread2({}, mixins.attrs, {}, remaining)].concat(_toConsumableArray(children)));
  }

  var PRODUCTION$1 = false;

  try {
    PRODUCTION$1 = "development" === 'production';
  } catch (e) {}

  function log$1() {
    if (!PRODUCTION$1 && console && typeof console.error === 'function') {
      var _console;

      (_console = console).error.apply(_console, arguments);
    }
  } // Normalize icon arguments


  function normalizeIconArgs(icon) {
    // if the icon is null, there's nothing to do
    if (icon === null) {
      return null;
    } // if the icon is an object and has a prefix and an icon name, return it


    if (_typeof(icon) === 'object' && icon.prefix && icon.iconName) {
      return icon;
    } // if it's an array with length of two


    if (Array.isArray(icon) && icon.length === 2) {
      // use the first item as prefix, second as icon name
      return {
        prefix: icon[0],
        iconName: icon[1]
      };
    } // if it's a string, use it as the icon name


    if (typeof icon === 'string') {
      return {
        prefix: 'fas',
        iconName: icon
      };
    }
  } // creates an object with a key of key
  // and a value of value
  // if certain conditions are met


  function objectWithKey(key, value) {
    // if the value is a non-empty array
    // or it's not an array but it is truthy
    // then create the object with the key and the value
    // if not, return an empty array
    return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty$1({}, key, value) : {};
  }

  function FontAwesomeIcon(_ref) {
    var forwardedRef = _ref.forwardedRef,
        props = _objectWithoutProperties$1(_ref, ["forwardedRef"]);

    var iconArgs = props.icon,
        maskArgs = props.mask,
        symbol = props.symbol,
        className = props.className,
        title = props.title;
    var iconLookup = normalizeIconArgs(iconArgs);
    var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(' '))));
    var transform = objectWithKey('transform', typeof props.transform === 'string' ? parse.transform(props.transform) : props.transform);
    var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));
    var renderedIcon = icon$2(iconLookup, _objectSpread2({}, classes, {}, transform, {}, mask, {
      symbol: symbol,
      title: title
    }));

    if (!renderedIcon) {
      log$1('Could not find icon', iconLookup);
      return null;
    }

    var _abstract3 = renderedIcon["abstract"];
    var extraProps = {
      ref: forwardedRef
    };
    Object.keys(props).forEach(function (key) {
      // eslint-disable-next-line no-prototype-builtins
      if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {
        extraProps[key] = props[key];
      }
    });
    return convertCurry(_abstract3[0], extraProps);
  }

  FontAwesomeIcon.displayName = 'FontAwesomeIcon';
  FontAwesomeIcon.propTypes = {
    border: propTypes.bool,
    className: propTypes.string,
    mask: propTypes.oneOfType([propTypes.object, propTypes.array, propTypes.string]),
    fixedWidth: propTypes.bool,
    inverse: propTypes.bool,
    flip: propTypes.oneOf(['horizontal', 'vertical', 'both']),
    icon: propTypes.oneOfType([propTypes.object, propTypes.array, propTypes.string]),
    listItem: propTypes.bool,
    pull: propTypes.oneOf(['right', 'left']),
    pulse: propTypes.bool,
    rotation: propTypes.oneOf([90, 180, 270]),
    size: propTypes.oneOf(['lg', 'xs', 'sm', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),
    spin: propTypes.bool,
    symbol: propTypes.oneOfType([propTypes.bool, propTypes.string]),
    title: propTypes.string,
    transform: propTypes.oneOfType([propTypes.string, propTypes.object]),
    swapOpacity: propTypes.bool
  };
  FontAwesomeIcon.defaultProps = {
    border: false,
    className: '',
    mask: null,
    fixedWidth: false,
    inverse: false,
    flip: null,
    icon: null,
    listItem: false,
    pull: null,
    pulse: false,
    rotation: null,
    size: null,
    spin: false,
    symbol: false,
    title: '',
    transform: null,
    swapOpacity: false
  };
  var convertCurry = convert.bind(null, React__default.createElement);

  function TextField(_a) {
    var label = _a.label,
        _b = _a.helper,
        helper = _b === void 0 ? "" : _b,
        _c = _a.value,
        value = _c === void 0 ? "" : _c,
        icon = _a.icon,
        _d = _a.disabled,
        disabled = _d === void 0 ? false : _d,
        onChange = _a.onChange,
        styleProps = __rest(_a, ["label", "helper", "value", "icon", "disabled", "onChange"]);

    var inputRef = React.useRef(null);

    var _e = React.useState(!!value),
        isActive = _e[0],
        setIsActive = _e[1];

    var _f = React.useState(value),
        inputTextValue = _f[0],
        setInputTextValue = _f[1];

    var styles = useCSS$b(_assign({
      isActive: isActive,
      disabled: disabled
    }, styleProps));
    React.useEffect(function () {
      if (inputRef.current != null) {
        if (isActive) {
          inputRef.current.focus();
        } else {
          inputRef.current.blur();
        }
      }
    }, [isActive, inputRef]);

    function onTextFieldClick() {
      if (!disabled) setIsActive(true);
    }

    function onInputTextBlur() {
      setIsActive(false);
    } // FIXME: add correct typing to event, see here: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12239


    function onInputTextChange(event) {
      if (!disabled) setInputTextValue(event.currentTarget.value);
    }

    return core.jsx("div", {
      css: styles.wrapper
    }, core.jsx("div", {
      css: styles.container,
      onClick: onTextFieldClick
    }, core.jsx("div", {
      css: styles.border
    }, core.jsx("div", {
      css: styles.label,
      style: !inputTextValue && !isActive ? {} : {
        position: "absolute",
        top: "-8px",
        left: "5px",
        fontSize: "0.7rem",
        padding: "0 " + spacing.xs
      }
    }, label), core.jsx("input", {
      css: styles.input,
      style: {
        display: !!inputTextValue || isActive ? "block" : "none"
      },
      ref: inputRef,
      type: "text",
      value: inputTextValue,
      onChange: onInputTextChange,
      onBlur: onInputTextBlur,
      disabled: disabled
    }), !!icon && core.jsx(FontAwesomeIcon, {
      icon: icon || "check",
      css: styles.icon
    }))), !!helper && core.jsx("p", {
      css: styles.helper
    }, helper));
  }

  var index$b = /*#__PURE__*/React.memo(TextField);

  var makeStyles$2 = function makeStyles(_a) {
    var _b = _a.variant,
        variant = _b === void 0 ? "body1" : _b;
    var base = {
      fontFamily: typography.fonts.base,
      color: colors.white
    };
    var specific = {};

    switch (variant) {
      case "hero":
        specific = {
          fontSize: typography.sizes.hero,
          fontWeight: typography.weights.medium,
          margin: spacing.xxxl + " 0"
        };
        break;

      case "h1":
        specific = {
          fontSize: typography.sizes.h1,
          fontWeight: typography.weights.medium,
          margin: spacing.xxl + " 0"
        };
        break;

      case "h2":
        specific = {
          fontSize: typography.sizes.h2,
          fontWeight: typography.weights.medium,
          margin: spacing.xl + " 0"
        };
        break;

      case "h3":
        specific = {
          fontSize: typography.sizes.h3,
          fontWeight: typography.weights.medium,
          margin: spacing.l + " 0"
        };
        break;

      case "h4":
        specific = {
          fontSize: typography.sizes.h4,
          fontWeight: typography.weights.medium,
          margin: spacing.l + " 0"
        };
        break;

      case "h5":
        specific = {
          fontSize: typography.sizes.h5,
          fontWeight: typography.weights.medium,
          margin: spacing.m + " 0"
        };
        break;

      case "h6":
        specific = {
          fontSize: typography.sizes.h6,
          fontWeight: typography.weights.medium,
          margin: spacing.m + " 0"
        };
        break;

      case "subtitle1":
        specific = {
          fontSize: typography.sizes.subtitle1,
          fontWeight: typography.weights.light,
          margin: spacing.l + " 0"
        };
        break;

      case "subtitle2":
        specific = {
          fontSize: typography.sizes.subtitle2,
          fontWeight: typography.weights.regular,
          margin: spacing.m + " 0"
        };
        break;

      case "body1":
        specific = {
          fontSize: typography.sizes.body1,
          fontWeight: typography.weights.light,
          margin: spacing.s + " 0"
        };
        break;

      case "body2":
        specific = {
          fontSize: typography.sizes.body2,
          fontWeight: typography.weights.light,
          margin: spacing.xs + " 0"
        };
        break;

      case "caption":
        specific = {
          fontSize: typography.sizes.caption,
          fontWeight: typography.weights.light,
          margin: spacing.xs + " 0"
        };
        break;

      case "overhead":
        specific = {
          fontSize: typography.sizes.overhead,
          fontWeight: typography.weights.regular,
          margin: spacing.xs + " 0"
        };
        break;
    }

    return _assign(_assign({}, base), specific);
  };

  function Typography(_a) {
    var children = _a.children,
        onClick = _a.onClick,
        styleProps = __rest(_a, ["children", "onClick"]);

    var styles = makeStyles$2(styleProps);
    return core.jsx("div", {
      css: styles,
      onClick: onClick
    }, children);
  }

  var index$c = /*#__PURE__*/React.memo(Typography);

  var _emotionSourceMap9 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNpQiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var _emotionSourceMap8 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWFlIiwiZmlsZSI6IlZpZGVvUHJldmlldy5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19tYWtlVGVtcGxhdGVPYmplY3QgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcclxuaW1wb3J0IHsgdHlwb2dyYXBoeSwgY29sb3JzIH0gZnJvbSBcIi4vLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5zaG93Q2hhbm5lbCwgc2hvd0NoYW5uZWwgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYjtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlwiXSwgW1wiXCJdKSkpLFxyXG4gICAgICAgIGxpbms6IGNzcyh0ZW1wbGF0ZU9iamVjdF8yIHx8ICh0ZW1wbGF0ZU9iamVjdF8yID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlckNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzMgfHwgKHRlbXBsYXRlT2JqZWN0XzMgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHdpZHRoOiAxMDAlO1xcblxcdFxcdFxcdGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlcjogY3NzKHRlbXBsYXRlT2JqZWN0XzQgfHwgKHRlbXBsYXRlT2JqZWN0XzQgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIGluZm9Db250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF81IHx8ICh0ZW1wbGF0ZU9iamVjdF81ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBncmlkO1xcblxcdFxcdFxcdGdyaWQtdGVtcGxhdGU6IGF1dG8gLyBcIiwgXCI7XFxuXFx0XFx0XFx0bWFyZ2luOiAxMHB4IDAgMDtcXG5cXHRcXHRcIl0pKSwgc2hvd0NoYW5uZWwgPyBcIjQ1cHggYXV0b1wiIDogXCJhdXRvXCIpLFxyXG4gICAgICAgIGF2YXRhcjogY3NzKHRlbXBsYXRlT2JqZWN0XzYgfHwgKHRlbXBsYXRlT2JqZWN0XzYgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIHRleHRDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF83IHx8ICh0ZW1wbGF0ZU9iamVjdF83ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCIyIC8gMlwiIDogXCIxIC8gMVwiKSxcclxuICAgICAgICB0aXRsZTogY3NzKHRlbXBsYXRlT2JqZWN0XzggfHwgKHRlbXBsYXRlT2JqZWN0XzggPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDA7XFxuXFx0XFx0XFx0Zm9udC13ZWlnaHQ6IFwiLCBcIjtcXG5cXHRcXHRcXHR0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS53ZWlnaHRzLmJvbGQsIGNvbG9ycy5ibGFjaywgdHlwb2dyYXBoeS5zaXplcy5oMyksXHJcbiAgICAgICAgY2hhbm5lbDogY3NzKHRlbXBsYXRlT2JqZWN0XzkgfHwgKHRlbXBsYXRlT2JqZWN0XzkgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogNXB4IDAgMDtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCB0eXBvZ3JhcGh5LnNpemVzLnN1YnRpdGxlMiwgY29sb3JzLmdyYXlbNzAwXSksXHJcbiAgICB9O1xyXG59O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMSwgdGVtcGxhdGVPYmplY3RfMiwgdGVtcGxhdGVPYmplY3RfMywgdGVtcGxhdGVPYmplY3RfNCwgdGVtcGxhdGVPYmplY3RfNSwgdGVtcGxhdGVPYmplY3RfNiwgdGVtcGxhdGVPYmplY3RfNywgdGVtcGxhdGVPYmplY3RfOCwgdGVtcGxhdGVPYmplY3RfOTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VmlkZW9QcmV2aWV3LnN0eWxlcy5qc3gubWFwIl19 */";

  var _emotionSourceMap7 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVl1QiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var _emotionSourceMap6 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdnQiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var _emotionSourceMap5 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVV1QiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var _emotionSourceMap4 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNlIiwiZmlsZSI6IlZpZGVvUHJldmlldy5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19tYWtlVGVtcGxhdGVPYmplY3QgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcclxuaW1wb3J0IHsgdHlwb2dyYXBoeSwgY29sb3JzIH0gZnJvbSBcIi4vLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5zaG93Q2hhbm5lbCwgc2hvd0NoYW5uZWwgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYjtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlwiXSwgW1wiXCJdKSkpLFxyXG4gICAgICAgIGxpbms6IGNzcyh0ZW1wbGF0ZU9iamVjdF8yIHx8ICh0ZW1wbGF0ZU9iamVjdF8yID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlckNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzMgfHwgKHRlbXBsYXRlT2JqZWN0XzMgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHdpZHRoOiAxMDAlO1xcblxcdFxcdFxcdGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlcjogY3NzKHRlbXBsYXRlT2JqZWN0XzQgfHwgKHRlbXBsYXRlT2JqZWN0XzQgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIGluZm9Db250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF81IHx8ICh0ZW1wbGF0ZU9iamVjdF81ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBncmlkO1xcblxcdFxcdFxcdGdyaWQtdGVtcGxhdGU6IGF1dG8gLyBcIiwgXCI7XFxuXFx0XFx0XFx0bWFyZ2luOiAxMHB4IDAgMDtcXG5cXHRcXHRcIl0pKSwgc2hvd0NoYW5uZWwgPyBcIjQ1cHggYXV0b1wiIDogXCJhdXRvXCIpLFxyXG4gICAgICAgIGF2YXRhcjogY3NzKHRlbXBsYXRlT2JqZWN0XzYgfHwgKHRlbXBsYXRlT2JqZWN0XzYgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIHRleHRDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF83IHx8ICh0ZW1wbGF0ZU9iamVjdF83ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCIyIC8gMlwiIDogXCIxIC8gMVwiKSxcclxuICAgICAgICB0aXRsZTogY3NzKHRlbXBsYXRlT2JqZWN0XzggfHwgKHRlbXBsYXRlT2JqZWN0XzggPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDA7XFxuXFx0XFx0XFx0Zm9udC13ZWlnaHQ6IFwiLCBcIjtcXG5cXHRcXHRcXHR0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS53ZWlnaHRzLmJvbGQsIGNvbG9ycy5ibGFjaywgdHlwb2dyYXBoeS5zaXplcy5oMyksXHJcbiAgICAgICAgY2hhbm5lbDogY3NzKHRlbXBsYXRlT2JqZWN0XzkgfHwgKHRlbXBsYXRlT2JqZWN0XzkgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogNXB4IDAgMDtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCB0eXBvZ3JhcGh5LnNpemVzLnN1YnRpdGxlMiwgY29sb3JzLmdyYXlbNzAwXSksXHJcbiAgICB9O1xyXG59O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMSwgdGVtcGxhdGVPYmplY3RfMiwgdGVtcGxhdGVPYmplY3RfMywgdGVtcGxhdGVPYmplY3RfNCwgdGVtcGxhdGVPYmplY3RfNSwgdGVtcGxhdGVPYmplY3RfNiwgdGVtcGxhdGVPYmplY3RfNywgdGVtcGxhdGVPYmplY3RfOCwgdGVtcGxhdGVPYmplY3RfOTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VmlkZW9QcmV2aWV3LnN0eWxlcy5qc3gubWFwIl19 */";

  var _emotionSourceMap3 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVF3QiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var _emotionSourceMap2 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9jIiwiZmlsZSI6IlZpZGVvUHJldmlldy5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19tYWtlVGVtcGxhdGVPYmplY3QgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcclxuaW1wb3J0IHsgdHlwb2dyYXBoeSwgY29sb3JzIH0gZnJvbSBcIi4vLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5zaG93Q2hhbm5lbCwgc2hvd0NoYW5uZWwgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYjtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlwiXSwgW1wiXCJdKSkpLFxyXG4gICAgICAgIGxpbms6IGNzcyh0ZW1wbGF0ZU9iamVjdF8yIHx8ICh0ZW1wbGF0ZU9iamVjdF8yID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlckNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzMgfHwgKHRlbXBsYXRlT2JqZWN0XzMgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHdpZHRoOiAxMDAlO1xcblxcdFxcdFxcdGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBjb3ZlcjogY3NzKHRlbXBsYXRlT2JqZWN0XzQgfHwgKHRlbXBsYXRlT2JqZWN0XzQgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBibG9jaztcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRoZWlnaHQ6IGF1dG87XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIGluZm9Db250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF81IHx8ICh0ZW1wbGF0ZU9iamVjdF81ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRkaXNwbGF5OiBncmlkO1xcblxcdFxcdFxcdGdyaWQtdGVtcGxhdGU6IGF1dG8gLyBcIiwgXCI7XFxuXFx0XFx0XFx0bWFyZ2luOiAxMHB4IDAgMDtcXG5cXHRcXHRcIl0pKSwgc2hvd0NoYW5uZWwgPyBcIjQ1cHggYXV0b1wiIDogXCJhdXRvXCIpLFxyXG4gICAgICAgIGF2YXRhcjogY3NzKHRlbXBsYXRlT2JqZWN0XzYgfHwgKHRlbXBsYXRlT2JqZWN0XzYgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogMSAvIDE7XFxuXFx0XFx0XCJdKSkpLFxyXG4gICAgICAgIHRleHRDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF83IHx8ICh0ZW1wbGF0ZU9iamVjdF83ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCIyIC8gMlwiIDogXCIxIC8gMVwiKSxcclxuICAgICAgICB0aXRsZTogY3NzKHRlbXBsYXRlT2JqZWN0XzggfHwgKHRlbXBsYXRlT2JqZWN0XzggPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDA7XFxuXFx0XFx0XFx0Zm9udC13ZWlnaHQ6IFwiLCBcIjtcXG5cXHRcXHRcXHR0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS53ZWlnaHRzLmJvbGQsIGNvbG9ycy5ibGFjaywgdHlwb2dyYXBoeS5zaXplcy5oMyksXHJcbiAgICAgICAgY2hhbm5lbDogY3NzKHRlbXBsYXRlT2JqZWN0XzkgfHwgKHRlbXBsYXRlT2JqZWN0XzkgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogNXB4IDAgMDtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcXHRjb2xvcjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCB0eXBvZ3JhcGh5LnNpemVzLnN1YnRpdGxlMiwgY29sb3JzLmdyYXlbNzAwXSksXHJcbiAgICB9O1xyXG59O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMSwgdGVtcGxhdGVPYmplY3RfMiwgdGVtcGxhdGVPYmplY3RfMywgdGVtcGxhdGVPYmplY3RfNCwgdGVtcGxhdGVPYmplY3RfNSwgdGVtcGxhdGVPYmplY3RfNiwgdGVtcGxhdGVPYmplY3RfNywgdGVtcGxhdGVPYmplY3RfOCwgdGVtcGxhdGVPYmplY3RfOTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VmlkZW9QcmV2aWV3LnN0eWxlcy5qc3gubWFwIl19 */";

  var _emotionSourceMap$1 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUHJldmlldy5zdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1tQiIsImZpbGUiOiJWaWRlb1ByZXZpZXcuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHR5cG9ncmFwaHksIGNvbG9ycyB9IGZyb20gXCIuLy4uLy4uL3RoZW1lXCI7XHJcbmV4cG9ydCB2YXIgbWFrZVN0eWxlcyA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIF9iID0gX2Euc2hvd0NoYW5uZWwsIHNob3dDaGFubmVsID0gX2IgPT09IHZvaWQgMCA/IGZhbHNlIDogX2I7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbnRhaW5lcjogY3NzKHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcIl0sIFtcIlwiXSkpKSxcclxuICAgICAgICBsaW5rOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXJDb250YWluZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF8zIHx8ICh0ZW1wbGF0ZU9iamVjdF8zID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogMTAwJTtcXG5cXHRcXHRcXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG5cXHRcXHRcIl0pKSksXHJcbiAgICAgICAgY292ZXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF80IHx8ICh0ZW1wbGF0ZU9iamVjdF80ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogYmxvY2s7XFxuXFx0XFx0XFx0d2lkdGg6IDEwMCU7XFxuXFx0XFx0XFx0aGVpZ2h0OiBhdXRvO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICBpbmZvQ29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNSB8fCAodGVtcGxhdGVPYmplY3RfNSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGRpc3BsYXk6IGdyaWQ7XFxuXFx0XFx0XFx0Z3JpZC10ZW1wbGF0ZTogYXV0byAvIFwiLCBcIjtcXG5cXHRcXHRcXHRtYXJnaW46IDEwcHggMCAwO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRcXHRcXHRncmlkLXRlbXBsYXRlOiBhdXRvIC8gXCIsIFwiO1xcblxcdFxcdFxcdG1hcmdpbjogMTBweCAwIDA7XFxuXFx0XFx0XCJdKSksIHNob3dDaGFubmVsID8gXCI0NXB4IGF1dG9cIiA6IFwiYXV0b1wiKSxcclxuICAgICAgICBhdmF0YXI6IGNzcyh0ZW1wbGF0ZU9iamVjdF82IHx8ICh0ZW1wbGF0ZU9iamVjdF82ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0Z3JpZC1jb2x1bW46IDEgLyAxO1xcblxcdFxcdFwiXSkpKSxcclxuICAgICAgICB0ZXh0Q29udGFpbmVyOiBjc3ModGVtcGxhdGVPYmplY3RfNyB8fCAodGVtcGxhdGVPYmplY3RfNyA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdGdyaWQtY29sdW1uOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRncmlkLWNvbHVtbjogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCBzaG93Q2hhbm5lbCA/IFwiMiAvIDJcIiA6IFwiMSAvIDFcIiksXHJcbiAgICAgICAgdGl0bGU6IGNzcyh0ZW1wbGF0ZU9iamVjdF84IHx8ICh0ZW1wbGF0ZU9iamVjdF84ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiAwO1xcblxcdFxcdFxcdGZvbnQtd2VpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XFx0dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcXHRmb250LXNpemU6IFwiLCBcIjtcXG5cXHRcXHRcIl0sIFtcIlxcblxcdFxcdFxcdG1hcmdpbjogMDtcXG5cXHRcXHRcXHRmb250LXdlaWdodDogXCIsIFwiO1xcblxcdFxcdFxcdHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XCJdKSksIHR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLCBjb2xvcnMuYmxhY2ssIHR5cG9ncmFwaHkuc2l6ZXMuaDMpLFxyXG4gICAgICAgIGNoYW5uZWw6IGNzcyh0ZW1wbGF0ZU9iamVjdF85IHx8ICh0ZW1wbGF0ZU9iamVjdF85ID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuXFx0XFx0XFx0bWFyZ2luOiA1cHggMCAwO1xcblxcdFxcdFxcdGZvbnQtc2l6ZTogXCIsIFwiO1xcblxcdFxcdFxcdGNvbG9yOiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHRtYXJnaW46IDVweCAwIDA7XFxuXFx0XFx0XFx0Zm9udC1zaXplOiBcIiwgXCI7XFxuXFx0XFx0XFx0Y29sb3I6IFwiLCBcIjtcXG5cXHRcXHRcIl0pKSwgdHlwb2dyYXBoeS5zaXplcy5zdWJ0aXRsZTIsIGNvbG9ycy5ncmF5WzcwMF0pLFxyXG4gICAgfTtcclxufTtcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzIsIHRlbXBsYXRlT2JqZWN0XzMsIHRlbXBsYXRlT2JqZWN0XzQsIHRlbXBsYXRlT2JqZWN0XzUsIHRlbXBsYXRlT2JqZWN0XzYsIHRlbXBsYXRlT2JqZWN0XzcsIHRlbXBsYXRlT2JqZWN0XzgsIHRlbXBsYXRlT2JqZWN0Xzk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZpZGVvUHJldmlldy5zdHlsZXMuanN4Lm1hcCJdfQ== */";

  var makeStyles$3 = function makeStyles(_a) {
    var _b = _a.showChannel,
        showChannel = _b === void 0 ? false : _b;
    return {
      container: /*#__PURE__*/core.css(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([";label:container;" + _emotionSourceMap$1], [";label:container;" + _emotionSourceMap$1]))),
      link: /*#__PURE__*/core.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n\t\t\ttext-decoration: none;\n\t\t;label:link;" + _emotionSourceMap2], ["\n\t\t\ttext-decoration: none;\n\t\t;label:link;" + _emotionSourceMap2]))),
      coverContainer: /*#__PURE__*/core.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n\t\t\twidth: 100%;\n\t\t\tbackground-color: black;\n\t\t;label:coverContainer;" + _emotionSourceMap3], ["\n\t\t\twidth: 100%;\n\t\t\tbackground-color: black;\n\t\t;label:coverContainer;" + _emotionSourceMap3]))),
      cover: /*#__PURE__*/core.css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\theight: auto;\n\t\t;label:cover;" + _emotionSourceMap4], ["\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\theight: auto;\n\t\t;label:cover;" + _emotionSourceMap4]))),
      infoContainer: /*#__PURE__*/core.css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n\t\t\tdisplay: grid;\n\t\t\tgrid-template: auto / ", ";\n\t\t\tmargin: 10px 0 0;\n\t\t;label:infoContainer;" + _emotionSourceMap5], ["\n\t\t\tdisplay: grid;\n\t\t\tgrid-template: auto / ", ";\n\t\t\tmargin: 10px 0 0;\n\t\t;label:infoContainer;" + _emotionSourceMap5])), showChannel ? "45px auto" : "auto"),
      avatar: /*#__PURE__*/core.css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n\t\t\tgrid-column: 1 / 1;\n\t\t;label:avatar;" + _emotionSourceMap6], ["\n\t\t\tgrid-column: 1 / 1;\n\t\t;label:avatar;" + _emotionSourceMap6]))),
      textContainer: /*#__PURE__*/core.css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n\t\t\tgrid-column: ", ";\n\t\t;label:textContainer;" + _emotionSourceMap7], ["\n\t\t\tgrid-column: ", ";\n\t\t;label:textContainer;" + _emotionSourceMap7])), showChannel ? "2 / 2" : "1 / 1"),
      title: /*#__PURE__*/core.css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n\t\t\tmargin: 0;\n\t\t\tfont-weight: ", ";\n\t\t\ttext-transform: capitalize;\n\t\t\tcolor: ", ";\n\t\t\tfont-size: ", ";\n\t\t;label:title;" + _emotionSourceMap8], ["\n\t\t\tmargin: 0;\n\t\t\tfont-weight: ", ";\n\t\t\ttext-transform: capitalize;\n\t\t\tcolor: ", ";\n\t\t\tfont-size: ", ";\n\t\t;label:title;" + _emotionSourceMap8])), typography.weights.bold, colors.black, typography.sizes.h3),
      channel: /*#__PURE__*/core.css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n\t\t\tmargin: 5px 0 0;\n\t\t\tfont-size: ", ";\n\t\t\tcolor: ", ";\n\t\t;label:channel;" + _emotionSourceMap9], ["\n\t\t\tmargin: 5px 0 0;\n\t\t\tfont-size: ", ";\n\t\t\tcolor: ", ";\n\t\t;label:channel;" + _emotionSourceMap9])), typography.sizes.subtitle2, colors.gray[700])
    };
  };

  var templateObject_1$1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;

  var _emotionSourceMap$2 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF2YXRhci5zdHlsZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTVciLCJmaWxlIjoiQXZhdGFyLnN0eWxlLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fbWFrZVRlbXBsYXRlT2JqZWN0IH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XHJcbmltcG9ydCB7IHNwYWNpbmcsIGNvbG9ycyB9IGZyb20gXCIuLi8uLi90aGVtZVwiO1xyXG5leHBvcnQgdmFyIG1ha2VTdHlsZXMgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBpbWcgPSBfYS5pbWcsIF9iID0gX2Euc2l6ZSwgc2l6ZSA9IF9iID09PSB2b2lkIDAgPyBcImRlZmF1bHRcIiA6IF9iO1xyXG4gICAgdmFyIHdpZHRoID0gc2l6ZSA9PT0gXCJzbWFsbFwiID8gc3BhY2luZy54cyA6IHNpemUgPT09IFwiZGVmYXVsdFwiID8gc3BhY2luZy5tIDogc3BhY2luZy54bDtcclxuICAgIHJldHVybiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdGJhY2tncm91bmQtaW1hZ2U6IFwiLCBcIjtcXG5cXHRcXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcdFxcdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG5cXHRcXHRib3JkZXItcmFkaXVzOiA1MCU7XFxuXFx0XFx0bWluLXdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0bWluLWhlaWdodDogXCIsIFwiO1xcblxcdFxcdG1heC13aWR0aDogXCIsIFwiO1xcblxcdFxcdG1heC1oZWlnaHQ6IFwiLCBcIjtcXG5cXHRcIl0sIFtcIlxcblxcdFxcdGJhY2tncm91bmQtaW1hZ2U6IFwiLCBcIjtcXG5cXHRcXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcdFxcdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG5cXHRcXHRib3JkZXItcmFkaXVzOiA1MCU7XFxuXFx0XFx0bWluLXdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0bWluLWhlaWdodDogXCIsIFwiO1xcblxcdFxcdG1heC13aWR0aDogXCIsIFwiO1xcblxcdFxcdG1heC1oZWlnaHQ6IFwiLCBcIjtcXG5cXHRcIl0pKSwgaW1nID8gXCJ1cmwoXCIgKyBpbWcgKyBcIilcIiA6IFwicmFkaWFsLWdyYWRpZW50KFwiICsgY29sb3JzLmJsdWVbNTAwXSArIFwiLCBcIiArIGNvbG9ycy5ibHVlWzUwMF0gKyBcIilcIiwgd2lkdGgsIHdpZHRoLCB3aWR0aCwgd2lkdGgpO1xyXG59O1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXZhdGFyLnN0eWxlLmpzeC5tYXAiXX0= */";

  var makeStyles$4 = function makeStyles(_a) {
    var img = _a.img,
        _b = _a.size,
        size = _b === void 0 ? "default" : _b;
    var width = size === "small" ? spacing.xs : size === "default" ? spacing.m : spacing.xl;
    return /*#__PURE__*/core.css(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n\t\tbackground-image: ", ";\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tborder-radius: 50%;\n\t\tmin-width: ", ";\n\t\tmin-height: ", ";\n\t\tmax-width: ", ";\n\t\tmax-height: ", ";\n\t" + _emotionSourceMap$2], ["\n\t\tbackground-image: ", ";\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tborder-radius: 50%;\n\t\tmin-width: ", ";\n\t\tmin-height: ", ";\n\t\tmax-width: ", ";\n\t\tmax-height: ", ";\n\t" + _emotionSourceMap$2])), img ? "url(" + img + ")" : "radial-gradient(" + colors.blue[500] + ", " + colors.blue[500] + ")", width, width, width, width);
  };

  var templateObject_1$2;

  function Avatar(_a) {
    var styleProps = __rest(_a, []);

    var styles = makeStyles$4(styleProps);
    return core.jsx("div", {
      css: styles
    });
  }

  var Avatar$1 = /*#__PURE__*/React.memo(Avatar);

  function VideoPreview(_a) {
    var title = _a.title,
        channel = _a.channel,
        channelImg = _a.channelImg,
        _b = _a.showChannel,
        showChannel = _b === void 0 ? false : _b,
        poster = _a.poster,
        _onClick = _a.onClick,
        onChannelClick = _a.onChannelClick,
        styleProps = __rest(_a, ["title", "channel", "channelImg", "showChannel", "poster", "onClick", "onChannelClick"]);

    var styles = makeStyles$3(_assign({
      showChannel: showChannel
    }, styleProps));
    return core.jsx("div", {
      css: styles.container,
      onClick: _onClick
    }, core.jsx("div", {
      css: styles.coverContainer
    }, core.jsx("img", {
      css: styles.cover,
      src: poster,
      onClick: function onClick(event) {
        event.stopPropagation();

        _onClick();
      }
    })), core.jsx("div", {
      css: styles.infoContainer
    }, showChannel && core.jsx("div", {
      css: styles.avatar,
      onClick: function onClick(event) {
        event.stopPropagation();
        onChannelClick();
      }
    }, core.jsx(Avatar$1, {
      size: "small",
      img: channelImg
    })), core.jsx("div", {
      css: styles.textContainer
    }, core.jsx("h3", {
      css: styles.title,
      onClick: function onClick(event) {
        event.stopPropagation();

        _onClick();
      }
    }, title), showChannel && core.jsx("h3", {
      css: styles.channel,
      onClick: function onClick(event) {
        event.stopPropagation();
        onChannelClick();
      }
    }, channel))));
  }

  var index$d = /*#__PURE__*/React.memo(VideoPreview);

  var loadScript = function load(src, opts, cb) {
    var head = document.head || document.getElementsByTagName('head')[0];
    var script = document.createElement('script');

    if (typeof opts === 'function') {
      cb = opts;
      opts = {};
    }

    opts = opts || {};

    cb = cb || function () {};

    script.type = opts.type || 'text/javascript';
    script.charset = opts.charset || 'utf8';
    script.async = 'async' in opts ? !!opts.async : true;
    script.src = src;

    if (opts.attrs) {
      setAttributes(script, opts.attrs);
    }

    if (opts.text) {
      script.text = '' + opts.text;
    }

    var onend = 'onload' in script ? stdOnEnd : ieOnEnd;
    onend(script, cb); // some good legacy browsers (firefox) fail the 'in' detection above
    // so as a fallback we always set onload
    // old IE will ignore this and new IE will set onload

    if (!script.onload) {
      stdOnEnd(script, cb);
    }

    head.appendChild(script);
  };

  function setAttributes(script, attrs) {
    for (var attr in attrs) {
      script.setAttribute(attr, attrs[attr]);
    }
  }

  function stdOnEnd(script, cb) {
    script.onload = function () {
      this.onerror = this.onload = null;
      cb(null, script);
    };

    script.onerror = function () {
      // this.onload = null here is necessary
      // because even IE9 works not like others
      this.onerror = this.onload = null;
      cb(new Error('Failed to load ' + this.src), script);
    };
  }

  function ieOnEnd(script, cb) {
    script.onreadystatechange = function () {
      if (this.readyState != 'complete' && this.readyState != 'loaded') return;
      this.onreadystatechange = null;
      cb(null, script); // there is no way to catch loading errors in IE8
    };
  }

  var isMergeableObject = function isMergeableObject(value) {
    return isNonNullObject(value) && !isSpecial(value);
  };

  function isNonNullObject(value) {
    return !!value && (0, _typeof3["default"])(value) === 'object';
  }

  function isSpecial(value) {
    var stringValue = Object.prototype.toString.call(value);
    return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
  } // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25


  var canUseSymbol = typeof Symbol === 'function' && Symbol["for"];
  var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol["for"]('react.element') : 0xeac7;

  function isReactElement(value) {
    return value.$$typeof === REACT_ELEMENT_TYPE;
  }

  function emptyTarget(val) {
    return Array.isArray(val) ? [] : {};
  }

  function cloneUnlessOtherwiseSpecified(value, options) {
    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
  }

  function defaultArrayMerge(target, source, options) {
    return target.concat(source).map(function (element) {
      return cloneUnlessOtherwiseSpecified(element, options);
    });
  }

  function getMergeFunction(key, options) {
    if (!options.customMerge) {
      return deepmerge;
    }

    var customMerge = options.customMerge(key);
    return typeof customMerge === 'function' ? customMerge : deepmerge;
  }

  function getEnumerableOwnPropertySymbols(target) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
      return target.propertyIsEnumerable(symbol);
    }) : [];
  }

  function getKeys(target) {
    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
  }

  function propertyIsOnObject(object, property) {
    try {
      return property in object;
    } catch (_) {
      return false;
    }
  } // Protects from prototype poisoning and unexpected merging up the prototype chain.


  function propertyIsUnsafe(target, key) {
    return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
    && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
    && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.
  }

  function mergeObject(target, source, options) {
    var destination = {};

    if (options.isMergeableObject(target)) {
      getKeys(target).forEach(function (key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
      });
    }

    getKeys(source).forEach(function (key) {
      if (propertyIsUnsafe(target, key)) {
        return;
      }

      if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
        destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
      } else {
        destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
      }
    });
    return destination;
  }

  function deepmerge(target, source, options) {
    options = options || {};
    options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
    // implementations can use it. The caller may not replace it.

    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    if (!sourceAndTargetTypesMatch) {
      return cloneUnlessOtherwiseSpecified(source, options);
    } else if (sourceIsArray) {
      return options.arrayMerge(target, source, options);
    } else {
      return mergeObject(target, source, options);
    }
  }

  deepmerge.all = function deepmergeAll(array, options) {
    if (!Array.isArray(array)) {
      throw new Error('first argument should be an array');
    }

    return array.reduce(function (prev, next) {
      return deepmerge(prev, next, options);
    }, {});
  };

  var deepmerge_1 = deepmerge;
  var cjs = deepmerge_1;
  var utils = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseStartTime = parseStartTime;
    exports.parseEndTime = parseEndTime;
    exports.randomString = randomString;
    exports.queryString = queryString;
    exports.getSDK = getSDK;
    exports.getConfig = getConfig;
    exports.omit = omit;
    exports.callPlayer = callPlayer;
    exports.isMediaStream = isMediaStream;
    exports.supportsWebKitPresentationMode = supportsWebKitPresentationMode;

    var _loadScript = _interopRequireDefault(loadScript);

    var _deepmerge = _interopRequireDefault(cjs);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    var MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;
    var MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;
    var MATCH_START_STAMP = /(\d+)(h|m|s)/g;
    var MATCH_NUMERIC = /^\d+$/; // Parse YouTube URL for a start time param, ie ?t=1h14m30s
    // and return the start time in seconds

    function parseTimeParam(url, pattern) {
      if (url instanceof Array) {
        return undefined;
      }

      var match = url.match(pattern);

      if (match) {
        var stamp = match[1];

        if (stamp.match(MATCH_START_STAMP)) {
          return parseTimeString(stamp);
        }

        if (MATCH_NUMERIC.test(stamp)) {
          return parseInt(stamp);
        }
      }

      return undefined;
    }

    function parseTimeString(stamp) {
      var seconds = 0;
      var array = MATCH_START_STAMP.exec(stamp);

      while (array !== null) {
        var _array = array,
            _array2 = _slicedToArray(_array, 3),
            count = _array2[1],
            period = _array2[2];

        if (period === 'h') seconds += parseInt(count, 10) * 60 * 60;
        if (period === 'm') seconds += parseInt(count, 10) * 60;
        if (period === 's') seconds += parseInt(count, 10);
        array = MATCH_START_STAMP.exec(stamp);
      }

      return seconds;
    }

    function parseStartTime(url) {
      return parseTimeParam(url, MATCH_START_QUERY);
    }

    function parseEndTime(url) {
      return parseTimeParam(url, MATCH_END_QUERY);
    } // http://stackoverflow.com/a/38622545


    function randomString() {
      return Math.random().toString(36).substr(2, 5);
    }

    function queryString(object) {
      return Object.keys(object).map(function (key) {
        return "".concat(key, "=").concat(object[key]);
      }).join('&');
    } // Util function to load an external SDK
    // or return the SDK if it is already loaded


    var requests = {};

    function getSDK(url, sdkGlobal) {
      var sdkReady = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      var isLoaded = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {
        return true;
      };
      var fetchScript = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _loadScript["default"];

      if (window[sdkGlobal] && isLoaded(window[sdkGlobal])) {
        return Promise.resolve(window[sdkGlobal]);
      }

      return new Promise(function (resolve, reject) {
        // If we are already loading the SDK, add the resolve and reject
        // functions to the existing array of requests
        if (requests[url]) {
          requests[url].push({
            resolve: resolve,
            reject: reject
          });
          return;
        }

        requests[url] = [{
          resolve: resolve,
          reject: reject
        }];

        var onLoaded = function onLoaded(sdk) {
          // When loaded, resolve all pending request promises
          requests[url].forEach(function (request) {
            return request.resolve(sdk);
          });
        };

        if (sdkReady) {
          var previousOnReady = window[sdkReady];

          window[sdkReady] = function () {
            if (previousOnReady) previousOnReady();
            onLoaded(window[sdkGlobal]);
          };
        }

        fetchScript(url, function (err) {
          if (err) {
            // Loading the SDK failed – reject all requests and
            // reset the array of requests for this SDK
            requests[url].forEach(function (request) {
              return request.reject(err);
            });
            requests[url] = null;
          } else if (!sdkReady) {
            onLoaded(window[sdkGlobal]);
          }
        });
      });
    }

    function getConfig(props, defaultProps) {
      return (0, _deepmerge["default"])(defaultProps.config, props.config);
    }

    function omit(object) {
      var _ref;

      for (var _len = arguments.length, arrays = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        arrays[_key - 1] = arguments[_key];
      }

      var omitKeys = (_ref = []).concat.apply(_ref, arrays);

      var output = {};
      var keys = Object.keys(object);

      for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {
        var key = _keys[_i2];

        if (omitKeys.indexOf(key) === -1) {
          output[key] = object[key];
        }
      }

      return output;
    }

    function callPlayer(method) {
      var _this$player; // Util method for calling a method on this.player
      // but guard against errors and console.warn instead


      if (!this.player || !this.player[method]) {
        var message = "ReactPlayer: ".concat(this.constructor.displayName, " player could not call %c").concat(method, "%c \u2013 ");

        if (!this.player) {
          message += 'The player was not available';
        } else if (!this.player[method]) {
          message += 'The method was not available';
        }

        console.warn(message, 'font-weight: bold', '');
        return null;
      }

      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      return (_this$player = this.player)[method].apply(_this$player, args);
    }

    function isMediaStream(url) {
      return typeof window !== 'undefined' && typeof window.MediaStream !== 'undefined' && url instanceof window.MediaStream;
    }

    function supportsWebKitPresentationMode() {
      var video = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('video'); // Check if Safari supports PiP, and is not on mobile (other than iPad)
      // iPhone safari appears to "support" PiP through the check, however PiP does not function

      var notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;
      return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function' && notMobile;
    }
  });
  unwrapExports(utils);
  var utils_1 = utils.parseStartTime;
  var utils_2 = utils.parseEndTime;
  var utils_3 = utils.randomString;
  var utils_4 = utils.queryString;
  var utils_5 = utils.getSDK;
  var utils_6 = utils.getConfig;
  var utils_7 = utils.omit;
  var utils_8 = utils.callPlayer;
  var utils_9 = utils.isMediaStream;
  var utils_10 = utils.supportsWebKitPresentationMode;
  var patterns = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.canPlay = exports.DASH_EXTENSIONS = exports.HLS_EXTENSIONS = exports.VIDEO_EXTENSIONS = exports.AUDIO_EXTENSIONS = exports.MATCH_URL_VIDYARD = exports.MATCH_URL_MIXCLOUD = exports.MATCH_URL_DAILYMOTION = exports.MATCH_URL_TWITCH_CHANNEL = exports.MATCH_URL_TWITCH_VIDEO = exports.MATCH_URL_WISTIA = exports.MATCH_URL_STREAMABLE = exports.MATCH_URL_FACEBOOK = exports.MATCH_URL_VIMEO = exports.MATCH_URL_SOUNDCLOUD = exports.MATCH_URL_YOUTUBE = void 0;

    function _createForOfIteratorHelper(o) {
      if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {
          var i = 0;

          var F = function F() {};

          return {
            s: F,
            n: function n() {
              if (i >= o.length) return {
                done: true
              };
              return {
                done: false,
                value: o[i++]
              };
            },
            e: function e(_e) {
              throw _e;
            },
            f: F
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var it,
          normalCompletion = true,
          didErr = false,
          err;
      return {
        s: function s() {
          it = o[Symbol.iterator]();
        },
        n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        },
        e: function e(_e2) {
          didErr = true;
          err = _e2;
        },
        f: function f() {
          try {
            if (!normalCompletion && it["return"] != null) it["return"]();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    var MATCH_URL_YOUTUBE = /(?:youtu\.be\/|youtube(?:-nocookie)?\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//;
    exports.MATCH_URL_YOUTUBE = MATCH_URL_YOUTUBE;
    var MATCH_URL_SOUNDCLOUD = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/;
    exports.MATCH_URL_SOUNDCLOUD = MATCH_URL_SOUNDCLOUD;
    var MATCH_URL_VIMEO = /vimeo\.com\/.+/;
    exports.MATCH_URL_VIMEO = MATCH_URL_VIMEO;
    var MATCH_URL_FACEBOOK = /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/;
    exports.MATCH_URL_FACEBOOK = MATCH_URL_FACEBOOK;
    var MATCH_URL_STREAMABLE = /streamable\.com\/([a-z0-9]+)$/;
    exports.MATCH_URL_STREAMABLE = MATCH_URL_STREAMABLE;
    var MATCH_URL_WISTIA = /(?:wistia\.com|wi\.st)\/(?:medias|embed)\/(.*)$/;
    exports.MATCH_URL_WISTIA = MATCH_URL_WISTIA;
    var MATCH_URL_TWITCH_VIDEO = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/;
    exports.MATCH_URL_TWITCH_VIDEO = MATCH_URL_TWITCH_VIDEO;
    var MATCH_URL_TWITCH_CHANNEL = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/;
    exports.MATCH_URL_TWITCH_CHANNEL = MATCH_URL_TWITCH_CHANNEL;
    var MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?$/;
    exports.MATCH_URL_DAILYMOTION = MATCH_URL_DAILYMOTION;
    var MATCH_URL_MIXCLOUD = /mixcloud\.com\/([^/]+\/[^/]+)/;
    exports.MATCH_URL_MIXCLOUD = MATCH_URL_MIXCLOUD;
    var MATCH_URL_VIDYARD = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-]+)/;
    exports.MATCH_URL_VIDYARD = MATCH_URL_VIDYARD;
    var AUDIO_EXTENSIONS = /\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
    exports.AUDIO_EXTENSIONS = AUDIO_EXTENSIONS;
    var VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)($|\?)/i;
    exports.VIDEO_EXTENSIONS = VIDEO_EXTENSIONS;
    var HLS_EXTENSIONS = /\.(m3u8)($|\?)/i;
    exports.HLS_EXTENSIONS = HLS_EXTENSIONS;
    var DASH_EXTENSIONS = /\.(mpd)($|\?)/i;
    exports.DASH_EXTENSIONS = DASH_EXTENSIONS;

    var canPlayFile = function canPlayFile(url) {
      if (url instanceof Array) {
        var _iterator = _createForOfIteratorHelper(url),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;

            if (typeof item === 'string' && canPlayFile(item)) {
              return true;
            }

            if (canPlayFile(item.src)) {
              return true;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        return false;
      }

      if ((0, utils.isMediaStream)(url)) {
        return true;
      }

      return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url);
    };

    var canPlay = {
      youtube: function youtube(url) {
        if (url instanceof Array) {
          return url.every(function (item) {
            return MATCH_URL_YOUTUBE.test(item);
          });
        }

        return MATCH_URL_YOUTUBE.test(url);
      },
      soundcloud: function soundcloud(url) {
        return MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url);
      },
      vimeo: function vimeo(url) {
        return MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url);
      },
      facebook: function facebook(url) {
        return MATCH_URL_FACEBOOK.test(url);
      },
      streamable: function streamable(url) {
        return MATCH_URL_STREAMABLE.test(url);
      },
      wistia: function wistia(url) {
        return MATCH_URL_WISTIA.test(url);
      },
      twitch: function twitch(url) {
        return MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url);
      },
      dailymotion: function dailymotion(url) {
        return MATCH_URL_DAILYMOTION.test(url);
      },
      mixcloud: function mixcloud(url) {
        return MATCH_URL_MIXCLOUD.test(url);
      },
      vidyard: function vidyard(url) {
        return MATCH_URL_VIDYARD.test(url);
      },
      file: canPlayFile
    };
    exports.canPlay = canPlay;
  });
  unwrapExports(patterns);
  var patterns_1 = patterns.canPlay;
  var patterns_2 = patterns.DASH_EXTENSIONS;
  var patterns_3 = patterns.HLS_EXTENSIONS;
  var patterns_4 = patterns.VIDEO_EXTENSIONS;
  var patterns_5 = patterns.AUDIO_EXTENSIONS;
  var patterns_6 = patterns.MATCH_URL_VIDYARD;
  var patterns_7 = patterns.MATCH_URL_MIXCLOUD;
  var patterns_8 = patterns.MATCH_URL_DAILYMOTION;
  var patterns_9 = patterns.MATCH_URL_TWITCH_CHANNEL;
  var patterns_10 = patterns.MATCH_URL_TWITCH_VIDEO;
  var patterns_11 = patterns.MATCH_URL_WISTIA;
  var patterns_12 = patterns.MATCH_URL_STREAMABLE;
  var patterns_13 = patterns.MATCH_URL_FACEBOOK;
  var patterns_14 = patterns.MATCH_URL_VIMEO;
  var patterns_15 = patterns.MATCH_URL_SOUNDCLOUD;
  var patterns_16 = patterns.MATCH_URL_YOUTUBE;
  var YouTube_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://www.youtube.com/iframe_api';
    var SDK_GLOBAL = 'YT';
    var SDK_GLOBAL_READY = 'onYouTubeIframeAPIReady';
    var MATCH_PLAYLIST = /list=([a-zA-Z0-9_-]+)/;
    var MATCH_USER_UPLOADS = /user\/([a-zA-Z0-9_-]+)\/?/;
    var MATCH_NOCOOKIE = /youtube-nocookie\.com/;
    var NOCOOKIE_HOST = 'https://www.youtube-nocookie.com';

    var YouTube = /*#__PURE__*/function (_Component) {
      _inherits(YouTube, _Component);

      var _super = _createSuper(YouTube);

      function YouTube() {
        var _this;

        _classCallCheck(this, YouTube);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "parsePlaylist", function (url) {
          if (url instanceof Array) {
            return {
              listType: 'playlist',
              playlist: url.map(_this.getID).join(',')
            };
          }

          if (MATCH_PLAYLIST.test(url)) {
            var _url$match = url.match(MATCH_PLAYLIST),
                _url$match2 = _slicedToArray(_url$match, 2),
                playlistId = _url$match2[1];

            return {
              listType: 'playlist',
              list: playlistId
            };
          } else if (MATCH_USER_UPLOADS.test(url)) {
            var _url$match3 = url.match(MATCH_USER_UPLOADS),
                _url$match4 = _slicedToArray(_url$match3, 2),
                username = _url$match4[1];

            return {
              listType: 'user_uploads',
              list: username
            };
          }

          return {};
        });

        _defineProperty(_assertThisInitialized(_this), "onStateChange", function (event) {
          var data = event.data;
          var _this$props = _this.props,
              onPlay = _this$props.onPlay,
              onPause = _this$props.onPause,
              onBuffer = _this$props.onBuffer,
              onBufferEnd = _this$props.onBufferEnd,
              onEnded = _this$props.onEnded,
              onReady = _this$props.onReady,
              loop = _this$props.loop,
              _this$props$config = _this$props.config,
              playerVars = _this$props$config.playerVars,
              onUnstarted = _this$props$config.onUnstarted;
          var _window$SDK_GLOBAL$Pl = window[SDK_GLOBAL].PlayerState,
              UNSTARTED = _window$SDK_GLOBAL$Pl.UNSTARTED,
              PLAYING = _window$SDK_GLOBAL$Pl.PLAYING,
              PAUSED = _window$SDK_GLOBAL$Pl.PAUSED,
              BUFFERING = _window$SDK_GLOBAL$Pl.BUFFERING,
              ENDED = _window$SDK_GLOBAL$Pl.ENDED,
              CUED = _window$SDK_GLOBAL$Pl.CUED;
          if (data === UNSTARTED) onUnstarted();

          if (data === PLAYING) {
            onPlay();
            onBufferEnd();
          }

          if (data === PAUSED) onPause();
          if (data === BUFFERING) onBuffer();

          if (data === ENDED) {
            var isPlaylist = !!_this.callPlayer('getPlaylist'); // Only loop manually if not playing a playlist

            if (loop && !isPlaylist) {
              if (playerVars.start) {
                _this.seekTo(playerVars.start);
              } else {
                _this.play();
              }
            }

            onEnded();
          }

          if (data === CUED) onReady();
        });

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('mute');
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('unMute');
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (container) {
          _this.container = container;
        });

        return _this;
      }

      _createClass(YouTube, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "getID",
        value: function getID(url) {
          if (!url || url instanceof Array) {
            return null;
          }

          return url.match(patterns.MATCH_URL_YOUTUBE)[1];
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;

          var _this$props2 = this.props,
              playing = _this$props2.playing,
              muted = _this$props2.muted,
              playsinline = _this$props2.playsinline,
              controls = _this$props2.controls,
              loop = _this$props2.loop,
              config = _this$props2.config,
              _onError = _this$props2.onError;
          var playerVars = config.playerVars,
              embedOptions = config.embedOptions;
          var id = this.getID(url);

          if (isReady) {
            if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {
              this.player.loadPlaylist(this.parsePlaylist(url));
              return;
            }

            this.player.cueVideoById({
              videoId: id,
              startSeconds: (0, utils.parseStartTime)(url) || playerVars.start,
              endSeconds: (0, utils.parseEndTime)(url) || playerVars.end
            });
            return;
          }

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function (YT) {
            return YT.loaded;
          }).then(function (YT) {
            if (!_this2.container) return;
            _this2.player = new YT.Player(_this2.container, _objectSpread({
              width: '100%',
              height: '100%',
              videoId: id,
              playerVars: _objectSpread({
                autoplay: playing ? 1 : 0,
                mute: muted ? 1 : 0,
                controls: controls ? 1 : 0,
                start: (0, utils.parseStartTime)(url),
                end: (0, utils.parseEndTime)(url),
                origin: window.location.origin,
                playsinline: playsinline
              }, _this2.parsePlaylist(url), {}, playerVars),
              events: {
                onReady: function onReady() {
                  if (loop) {
                    _this2.player.setLoop(true); // Enable playlist looping

                  }

                  _this2.props.onReady();
                },
                onStateChange: _this2.onStateChange,
                onError: function onError(event) {
                  return _onError(event.data);
                }
              },
              host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : undefined
            }, embedOptions));
          }, _onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('playVideo');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pauseVideo');
        }
      }, {
        key: "stop",
        value: function stop() {
          if (!document.body.contains(this.callPlayer('getIframe'))) return;
          this.callPlayer('stopVideo');
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount) {
          this.callPlayer('seekTo', amount);

          if (!this.props.playing) {
            this.pause();
          }
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction * 100);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer('setPlaybackRate', rate);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer('setLoop', loop);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer('getDuration');
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer('getCurrentTime');
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.callPlayer('getVideoLoadedFraction') * this.getDuration();
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: '100%',
            height: '100%',
            display: display
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            style: style
          }, /*#__PURE__*/_react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);

      return YouTube;
    }(_react.Component);

    exports["default"] = YouTube;

    _defineProperty(YouTube, "displayName", 'YouTube');

    _defineProperty(YouTube, "canPlay", patterns.canPlay.youtube);
  });
  unwrapExports(YouTube_1);
  var SoundCloud_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://w.soundcloud.com/player/api.js';
    var SDK_GLOBAL = 'SC';

    var SoundCloud = /*#__PURE__*/function (_Component) {
      _inherits(SoundCloud, _Component);

      var _super = _createSuper(SoundCloud);

      function SoundCloud() {
        var _this;

        _classCallCheck(this, SoundCloud);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "duration", null);

        _defineProperty(_assertThisInitialized(_this), "currentTime", null);

        _defineProperty(_assertThisInitialized(_this), "fractionLoaded", null);

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.setVolume(0);
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (iframe) {
          _this.iframe = iframe;
        });

        return _this;
      }

      _createClass(SoundCloud, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function (SC) {
            if (!_this2.iframe) return;
            var _SC$Widget$Events = SC.Widget.Events,
                PLAY = _SC$Widget$Events.PLAY,
                PLAY_PROGRESS = _SC$Widget$Events.PLAY_PROGRESS,
                PAUSE = _SC$Widget$Events.PAUSE,
                FINISH = _SC$Widget$Events.FINISH,
                ERROR = _SC$Widget$Events.ERROR;

            if (!isReady) {
              _this2.player = SC.Widget(_this2.iframe);

              _this2.player.bind(PLAY, _this2.props.onPlay);

              _this2.player.bind(PAUSE, function () {
                var remaining = _this2.duration - _this2.currentTime;

                if (remaining < 0.05) {
                  // Prevent onPause firing right before onEnded
                  return;
                }

                _this2.props.onPause();
              });

              _this2.player.bind(PLAY_PROGRESS, function (e) {
                _this2.currentTime = e.currentPosition / 1000;
                _this2.fractionLoaded = e.loadedProgress;
              });

              _this2.player.bind(FINISH, function () {
                return _this2.props.onEnded();
              });

              _this2.player.bind(ERROR, function (e) {
                return _this2.props.onError(e);
              });
            }

            _this2.player.load(url, _objectSpread({}, _this2.props.config.options, {
              callback: function callback() {
                _this2.player.getDuration(function (duration) {
                  _this2.duration = duration / 1000;

                  _this2.props.onReady();
                });
              }
            }));
          });
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {// Nothing to do
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('seekTo', seconds * 1000);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction * 100);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.fractionLoaded * this.duration;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: '100%',
            height: '100%',
            display: display
          };
          return /*#__PURE__*/_react["default"].createElement("iframe", {
            ref: this.ref,
            src: "https://w.soundcloud.com/player/?url=".concat(encodeURIComponent(this.props.url)),
            style: style,
            frameBorder: 0,
            allow: "autoplay"
          });
        }
      }]);

      return SoundCloud;
    }(_react.Component);

    exports["default"] = SoundCloud;

    _defineProperty(SoundCloud, "displayName", 'SoundCloud');

    _defineProperty(SoundCloud, "canPlay", patterns.canPlay.soundcloud);

    _defineProperty(SoundCloud, "loopOnEnded", true);
  });
  unwrapExports(SoundCloud_1);
  var Vimeo_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://player.vimeo.com/api/player.js';
    var SDK_GLOBAL = 'Vimeo';

    var Vimeo = /*#__PURE__*/function (_Component) {
      _inherits(Vimeo, _Component);

      var _super = _createSuper(Vimeo);

      function Vimeo() {
        var _this;

        _classCallCheck(this, Vimeo);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "duration", null);

        _defineProperty(_assertThisInitialized(_this), "currentTime", null);

        _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.setVolume(0);
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (container) {
          _this.container = container;
        });

        return _this;
      }

      _createClass(Vimeo, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          this.duration = null;
          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function (Vimeo) {
            if (!_this2.container) return;
            _this2.player = new Vimeo.Player(_this2.container, _objectSpread({
              url: url,
              autoplay: _this2.props.playing,
              muted: _this2.props.muted,
              loop: _this2.props.loop,
              playsinline: _this2.props.playsinline,
              controls: _this2.props.controls
            }, _this2.props.config.playerOptions));

            _this2.player.ready().then(function () {
              var iframe = _this2.container.querySelector('iframe');

              iframe.style.width = '100%';
              iframe.style.height = '100%';
            })["catch"](_this2.props.onError);

            _this2.player.on('loaded', function () {
              _this2.props.onReady();

              _this2.refreshDuration();
            });

            _this2.player.on('play', function () {
              _this2.props.onPlay();

              _this2.refreshDuration();
            });

            _this2.player.on('pause', _this2.props.onPause);

            _this2.player.on('seeked', function (e) {
              return _this2.props.onSeek(e.seconds);
            });

            _this2.player.on('ended', _this2.props.onEnded);

            _this2.player.on('error', _this2.props.onError);

            _this2.player.on('timeupdate', function (_ref) {
              var seconds = _ref.seconds;
              _this2.currentTime = seconds;
            });

            _this2.player.on('progress', function (_ref2) {
              var seconds = _ref2.seconds;
              _this2.secondsLoaded = seconds;
            });
          }, this.props.onError);
        }
      }, {
        key: "refreshDuration",
        value: function refreshDuration() {
          var _this3 = this;

          this.player.getDuration().then(function (duration) {
            _this3.duration = duration;
          });
        }
      }, {
        key: "play",
        value: function play() {
          var promise = this.callPlayer('play');

          if (promise) {
            promise["catch"](this.props.onError);
          }
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {
          this.callPlayer('unload');
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('setCurrentTime', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer('setLoop', loop);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer('setPlaybackRate', rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.secondsLoaded;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: '100%',
            height: '100%',
            overflow: 'hidden',
            display: display
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            key: this.props.url,
            ref: this.ref,
            style: style
          });
        }
      }]);

      return Vimeo;
    }(_react.Component);

    exports["default"] = Vimeo;

    _defineProperty(Vimeo, "displayName", 'Vimeo');

    _defineProperty(Vimeo, "canPlay", patterns.canPlay.vimeo);

    _defineProperty(Vimeo, "forceLoad", true);
  });
  unwrapExports(Vimeo_1);
  var Facebook_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://connect.facebook.net/en_US/sdk.js';
    var SDK_GLOBAL = 'FB';
    var SDK_GLOBAL_READY = 'fbAsyncInit';
    var PLAYER_ID_PREFIX = 'facebook-player-';

    var Facebook = /*#__PURE__*/function (_Component) {
      _inherits(Facebook, _Component);

      var _super = _createSuper(Facebook);

      function Facebook() {
        var _this;

        _classCallCheck(this, Facebook);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, utils.randomString)()));

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('mute');
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('unmute');
        });

        return _this;
      }

      _createClass(Facebook, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;

          if (isReady) {
            (0, utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function (FB) {
              return FB.XFBML.parse();
            });
            return;
          }

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function (FB) {
            FB.init({
              appId: _this2.props.config.appId,
              xfbml: true,
              version: _this2.props.config.version
            });
            FB.Event.subscribe('xfbml.render', function (msg) {
              // Here we know the SDK has loaded, even if onReady/onPlay
              // is not called due to a video that cannot be embedded
              _this2.props.onLoaded();
            });
            FB.Event.subscribe('xfbml.ready', function (msg) {
              if (msg.type === 'video' && msg.id === _this2.playerID) {
                _this2.player = msg.instance;

                _this2.player.subscribe('startedPlaying', _this2.props.onPlay);

                _this2.player.subscribe('paused', _this2.props.onPause);

                _this2.player.subscribe('finishedPlaying', _this2.props.onEnded);

                _this2.player.subscribe('startedBuffering', _this2.props.onBuffer);

                _this2.player.subscribe('finishedBuffering', _this2.props.onBufferEnd);

                _this2.player.subscribe('error', _this2.props.onError);

                if (!_this2.props.muted) {
                  // Player is muted by default
                  _this2.callPlayer('unmute');
                }

                _this2.props.onReady(); // For some reason Facebook have added `visibility: hidden`
                // to the iframe when autoplay fails, so here we set it back


                document.getElementById(_this2.playerID).querySelector('iframe').style.visibility = 'visible';
              }
            });
          });
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {// Nothing to do
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('seek', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer('getDuration');
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer('getCurrentPosition');
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var style = {
            width: '100%',
            height: '100%'
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            style: style,
            id: this.playerID,
            className: "fb-video",
            "data-href": this.props.url,
            "data-autoplay": this.props.playing ? 'true' : 'false',
            "data-allowfullscreen": "true",
            "data-controls": this.props.controls ? 'true' : 'false'
          });
        }
      }]);

      return Facebook;
    }(_react.Component);

    exports["default"] = Facebook;

    _defineProperty(Facebook, "displayName", 'Facebook');

    _defineProperty(Facebook, "canPlay", patterns.canPlay.facebook);

    _defineProperty(Facebook, "loopOnEnded", true);
  });
  unwrapExports(Facebook_1);
  var Streamable_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://cdn.embed.ly/player-0.1.0.min.js';
    var SDK_GLOBAL = 'playerjs';

    var Streamable = /*#__PURE__*/function (_Component) {
      _inherits(Streamable, _Component);

      var _super = _createSuper(Streamable);

      function Streamable() {
        var _this;

        _classCallCheck(this, Streamable);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "duration", null);

        _defineProperty(_assertThisInitialized(_this), "currentTime", null);

        _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('mute');
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('unmute');
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (iframe) {
          _this.iframe = iframe;
        });

        return _this;
      }

      _createClass(Streamable, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function (playerjs) {
            if (!_this2.iframe) return;
            _this2.player = new playerjs.Player(_this2.iframe);

            _this2.player.setLoop(_this2.props.loop);

            _this2.player.on('ready', _this2.props.onReady);

            _this2.player.on('play', _this2.props.onPlay);

            _this2.player.on('pause', _this2.props.onPause);

            _this2.player.on('seeked', _this2.props.onSeek);

            _this2.player.on('ended', _this2.props.onEnded);

            _this2.player.on('error', _this2.props.onError);

            _this2.player.on('timeupdate', function (_ref) {
              var duration = _ref.duration,
                  seconds = _ref.seconds;
              _this2.duration = duration;
              _this2.currentTime = seconds;
            });

            _this2.player.on('buffered', function (_ref2) {
              var percent = _ref2.percent;

              if (_this2.duration) {
                _this2.secondsLoaded = _this2.duration * percent;
              }
            });

            if (_this2.props.muted) {
              _this2.player.mute();
            }
          }, this.props.onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {// Nothing to do
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('setCurrentTime', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction * 100);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer('setLoop', loop);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.secondsLoaded;
        }
      }, {
        key: "render",
        value: function render() {
          var id = this.props.url.match(patterns.MATCH_URL_STREAMABLE)[1];
          var style = {
            width: '100%',
            height: '100%'
          };
          return /*#__PURE__*/_react["default"].createElement("iframe", {
            ref: this.ref,
            src: "https://streamable.com/o/".concat(id),
            frameBorder: "0",
            scrolling: "no",
            style: style,
            allowFullScreen: true
          });
        }
      }]);

      return Streamable;
    }(_react.Component);

    exports["default"] = Streamable;

    _defineProperty(Streamable, "displayName", 'Streamable');

    _defineProperty(Streamable, "canPlay", patterns.canPlay.streamable);
  });
  unwrapExports(Streamable_1);
  var Wistia_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://fast.wistia.com/assets/external/E-v1.js';
    var SDK_GLOBAL = 'Wistia';

    var Wistia = /*#__PURE__*/function (_Component) {
      _inherits(Wistia, _Component);

      var _super = _createSuper(Wistia);

      function Wistia() {
        var _this;

        _classCallCheck(this, Wistia);

        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(_args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "onPlay", function () {
          var _this$props;

          return (_this$props = _this.props).onPlay.apply(_this$props, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onPause", function () {
          var _this$props2;

          return (_this$props2 = _this.props).onPause.apply(_this$props2, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onSeek", function () {
          var _this$props3;

          return (_this$props3 = _this.props).onSeek.apply(_this$props3, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onEnded", function () {
          var _this$props4;

          return (_this$props4 = _this.props).onEnded.apply(_this$props4, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('mute');
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('unmute');
        });

        return _this;
      }

      _createClass(Wistia, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "getID",
        value: function getID(url) {
          return url && url.match(patterns.MATCH_URL_WISTIA)[1];
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          var _this$props5 = this.props,
              playing = _this$props5.playing,
              muted = _this$props5.muted,
              controls = _this$props5.controls,
              _onReady = _this$props5.onReady,
              config = _this$props5.config,
              onError = _this$props5.onError;
          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function () {
            window._wq = window._wq || [];

            window._wq.push({
              id: _this2.getID(url),
              options: _objectSpread({
                autoPlay: playing,
                silentAutoPlay: 'allow',
                muted: muted,
                controlsVisibleOnLoad: controls
              }, config.options),
              onReady: function onReady(player) {
                _this2.player = player;

                _this2.unbind();

                _this2.player.bind('play', _this2.onPlay);

                _this2.player.bind('pause', _this2.onPause);

                _this2.player.bind('seek', _this2.onSeek);

                _this2.player.bind('end', _this2.onEnded);

                _onReady();
              }
            });
          }, onError);
        }
      }, {
        key: "unbind",
        value: function unbind() {
          this.player.unbind('play', this.onPlay);
          this.player.unbind('pause', this.onPause);
          this.player.unbind('seek', this.onSeek);
          this.player.unbind('end', this.onEnded);
        } // Proxy methods to prevent listener leaks

      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {
          this.unbind();
          this.callPlayer('remove');
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('time', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('volume', fraction);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer('playbackRate', rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer('duration');
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer('time');
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var id = this.getID(this.props.url);
          var className = "wistia_embed wistia_async_".concat(id);
          var style = {
            width: '100%',
            height: '100%'
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            key: id,
            className: className,
            style: style
          });
        }
      }]);

      return Wistia;
    }(_react.Component);

    exports["default"] = Wistia;

    _defineProperty(Wistia, "displayName", 'Wistia');

    _defineProperty(Wistia, "canPlay", patterns.canPlay.wistia);

    _defineProperty(Wistia, "loopOnEnded", true);
  });
  unwrapExports(Wistia_1);
  var Twitch_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://player.twitch.tv/js/embed/v1.js';
    var SDK_GLOBAL = 'Twitch';
    var PLAYER_ID_PREFIX = 'twitch-player-';

    var Twitch = /*#__PURE__*/function (_Component) {
      _inherits(Twitch, _Component);

      var _super = _createSuper(Twitch);

      function Twitch() {
        var _this;

        _classCallCheck(this, Twitch);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, utils.randomString)()));

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('setMuted', true);
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('setMuted', false);
        });

        return _this;
      }

      _createClass(Twitch, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;

          var _this$props = this.props,
              playsinline = _this$props.playsinline,
              onError = _this$props.onError,
              config = _this$props.config,
              controls = _this$props.controls;
          var isChannel = patterns.MATCH_URL_TWITCH_CHANNEL.test(url);
          var id = isChannel ? url.match(patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(patterns.MATCH_URL_TWITCH_VIDEO)[1];

          if (isReady) {
            if (isChannel) {
              this.player.setChannel(id);
            } else {
              this.player.setVideo('v' + id);
            }

            return;
          }

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function (Twitch) {
            _this2.player = new Twitch.Player(_this2.playerID, _objectSpread({
              video: isChannel ? '' : id,
              channel: isChannel ? id : '',
              height: '100%',
              width: '100%',
              playsinline: playsinline,
              autoplay: _this2.props.playing,
              muted: _this2.props.muted,
              // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859
              controls: isChannel ? true : controls
            }, config.options));
            var _Twitch$Player = Twitch.Player,
                READY = _Twitch$Player.READY,
                PLAYING = _Twitch$Player.PLAYING,
                PAUSE = _Twitch$Player.PAUSE,
                ENDED = _Twitch$Player.ENDED,
                ONLINE = _Twitch$Player.ONLINE,
                OFFLINE = _Twitch$Player.OFFLINE;

            _this2.player.addEventListener(READY, _this2.props.onReady);

            _this2.player.addEventListener(PLAYING, _this2.props.onPlay);

            _this2.player.addEventListener(PAUSE, _this2.props.onPause);

            _this2.player.addEventListener(ENDED, _this2.props.onEnded); // Prevent weird isLoading behaviour when streams are offline


            _this2.player.addEventListener(ONLINE, _this2.props.onLoaded);

            _this2.player.addEventListener(OFFLINE, _this2.props.onLoaded);
          }, onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {
          this.callPlayer('pause');
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('seek', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer('getDuration');
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer('getCurrentTime');
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var style = {
            width: '100%',
            height: '100%'
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            style: style,
            id: this.playerID
          });
        }
      }]);

      return Twitch;
    }(_react.Component);

    exports["default"] = Twitch;

    _defineProperty(Twitch, "displayName", 'Twitch');

    _defineProperty(Twitch, "canPlay", patterns.canPlay.twitch);

    _defineProperty(Twitch, "loopOnEnded", true);
  });
  unwrapExports(Twitch_1);
  var DailyMotion_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://api.dmcdn.net/all.js';
    var SDK_GLOBAL = 'DM';
    var SDK_GLOBAL_READY = 'dmAsyncInit';

    var DailyMotion = /*#__PURE__*/function (_Component) {
      _inherits(DailyMotion, _Component);

      var _super = _createSuper(DailyMotion);

      function DailyMotion() {
        var _this;

        _classCallCheck(this, DailyMotion);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "onDurationChange", function () {
          var duration = _this.getDuration();

          _this.props.onDuration(duration);
        });

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.callPlayer('setMuted', true);
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.callPlayer('setMuted', false);
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (container) {
          _this.container = container;
        });

        return _this;
      }

      _createClass(DailyMotion, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          var _this$props = this.props,
              controls = _this$props.controls,
              config = _this$props.config,
              onError = _this$props.onError,
              playing = _this$props.playing;

          var _url$match = url.match(patterns.MATCH_URL_DAILYMOTION),
              _url$match2 = _slicedToArray(_url$match, 2),
              id = _url$match2[1];

          if (this.player) {
            this.player.load(id, {
              start: (0, utils.parseStartTime)(url),
              autoplay: playing
            });
            return;
          }

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function (DM) {
            return DM.player;
          }).then(function (DM) {
            if (!_this2.container) return;
            var Player = DM.player;
            _this2.player = new Player(_this2.container, {
              width: '100%',
              height: '100%',
              video: id,
              params: _objectSpread({
                controls: controls,
                autoplay: _this2.props.playing,
                mute: _this2.props.muted,
                start: (0, utils.parseStartTime)(url),
                origin: window.location.origin
              }, config.params),
              events: {
                apiready: _this2.props.onReady,
                seeked: function seeked() {
                  return _this2.props.onSeek(_this2.player.currentTime);
                },
                video_end: _this2.props.onEnded,
                durationchange: _this2.onDurationChange,
                pause: _this2.props.onPause,
                playing: _this2.props.onPlay,
                waiting: _this2.props.onBuffer,
                error: function error(event) {
                  return onError(event);
                }
              }
            });
          }, onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {// Nothing to do
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('seek', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.player.duration || null;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.player.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.player.bufferedTime;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: '100%',
            height: '100%',
            display: display
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            style: style
          }, /*#__PURE__*/_react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);

      return DailyMotion;
    }(_react.Component);

    exports["default"] = DailyMotion;

    _defineProperty(DailyMotion, "displayName", 'DailyMotion');

    _defineProperty(DailyMotion, "canPlay", patterns.canPlay.dailymotion);

    _defineProperty(DailyMotion, "loopOnEnded", true);
  });
  unwrapExports(DailyMotion_1);
  var Mixcloud_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://widget.mixcloud.com/media/js/widgetApi.js';
    var SDK_GLOBAL = 'Mixcloud';

    var Mixcloud = /*#__PURE__*/function (_Component) {
      _inherits(Mixcloud, _Component);

      var _super = _createSuper(Mixcloud);

      function Mixcloud() {
        var _this;

        _classCallCheck(this, Mixcloud);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "duration", null);

        _defineProperty(_assertThisInitialized(_this), "currentTime", null);

        _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);

        _defineProperty(_assertThisInitialized(_this), "mute", function () {// No volume support
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {// No volume support
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (iframe) {
          _this.iframe = iframe;
        });

        return _this;
      }

      _createClass(Mixcloud, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function (Mixcloud) {
            _this2.player = Mixcloud.PlayerWidget(_this2.iframe);

            _this2.player.ready.then(function () {
              _this2.player.events.play.on(_this2.props.onPlay);

              _this2.player.events.pause.on(_this2.props.onPause);

              _this2.player.events.ended.on(_this2.props.onEnded);

              _this2.player.events.error.on(_this2.props.error);

              _this2.player.events.progress.on(function (seconds, duration) {
                _this2.currentTime = seconds;
                _this2.duration = duration;
              });

              _this2.props.onReady();
            });
          }, this.props.onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {// Nothing to do
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer('seek', seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {// No volume support
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props,
              url = _this$props.url,
              config = _this$props.config;
          var id = url.match(patterns.MATCH_URL_MIXCLOUD)[1];
          var style = {
            width: '100%',
            height: '100%'
          };
          var query = (0, utils.queryString)(_objectSpread({}, config.options, {
            feed: "/".concat(id, "/")
          })); // We have to give the iframe a key here to prevent a
          // weird dialog appearing when loading a new track

          return /*#__PURE__*/_react["default"].createElement("iframe", {
            key: id,
            ref: this.ref,
            style: style,
            src: "https://www.mixcloud.com/widget/iframe/?".concat(query),
            frameBorder: "0"
          });
        }
      }]);

      return Mixcloud;
    }(_react.Component);

    exports["default"] = Mixcloud;

    _defineProperty(Mixcloud, "displayName", 'Mixcloud');

    _defineProperty(Mixcloud, "canPlay", patterns.canPlay.mixcloud);

    _defineProperty(Mixcloud, "loopOnEnded", true);
  });
  unwrapExports(Mixcloud_1);
  var Vidyard_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SDK_URL = 'https://play.vidyard.com/embed/v4.js';
    var SDK_GLOBAL = 'VidyardV4';
    var SDK_GLOBAL_READY = 'onVidyardAPI';

    var Vidyard = /*#__PURE__*/function (_Component) {
      _inherits(Vidyard, _Component);

      var _super = _createSuper(Vidyard);

      function Vidyard() {
        var _this;

        _classCallCheck(this, Vidyard);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "callPlayer", utils.callPlayer);

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.setVolume(0);
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (container) {
          _this.container = container;
        });

        return _this;
      }

      _createClass(Vidyard, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          var _this$props = this.props,
              playing = _this$props.playing,
              config = _this$props.config,
              onError = _this$props.onError,
              onDuration = _this$props.onDuration;
          var id = url && url.match(patterns.MATCH_URL_VIDYARD)[1];

          if (this.player) {
            this.stop();
          }

          (0, utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function (Vidyard) {
            if (!_this2.container) return;
            Vidyard.api.addReadyListener(function (data, player) {
              _this2.player = player;

              _this2.player.on('ready', _this2.props.onReady);

              _this2.player.on('play', _this2.props.onPlay);

              _this2.player.on('pause', _this2.props.onPause);

              _this2.player.on('seek', _this2.props.onSeek);

              _this2.player.on('playerComplete', _this2.props.onEnded);
            }, id);
            Vidyard.api.renderPlayer(_objectSpread({
              uuid: id,
              container: _this2.container,
              autoplay: playing ? 1 : 0
            }, config.options));
            Vidyard.api.getPlayerMetadata(id).then(function (meta) {
              _this2.duration = meta.length_in_seconds;
              onDuration(meta.length_in_seconds);
            });
          }, onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer('play');
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer('pause');
        }
      }, {
        key: "stop",
        value: function stop() {
          window.VidyardV4.api.destroyPlayer(this.player);
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount) {
          this.callPlayer('seek', amount);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer('setVolume', fraction);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer('setPlaybackSpeed', rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer('currentTime');
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: '100%',
            height: '100%',
            display: display
          };
          return /*#__PURE__*/_react["default"].createElement("div", {
            style: style
          }, /*#__PURE__*/_react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);

      return Vidyard;
    }(_react.Component);

    exports["default"] = Vidyard;

    _defineProperty(Vidyard, "displayName", 'Vidyard');

    _defineProperty(Vidyard, "canPlay", patterns.canPlay.vidyard);
  });
  unwrapExports(Vidyard_1);
  var FilePlayer_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      return _extends.apply(this, arguments);
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var IOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
    var HLS_SDK_URL = 'https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js';
    var HLS_GLOBAL = 'Hls';
    var DASH_SDK_URL = 'https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js';
    var DASH_GLOBAL = 'dashjs';
    var MATCH_DROPBOX_URL = /www\.dropbox\.com\/.+/;

    var FilePlayer = /*#__PURE__*/function (_Component) {
      _inherits(FilePlayer, _Component);

      var _super = _createSuper(FilePlayer);

      function FilePlayer() {
        var _this;

        _classCallCheck(this, FilePlayer);

        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(_args));

        _defineProperty(_assertThisInitialized(_this), "onReady", function () {
          var _this$props;

          return (_this$props = _this.props).onReady.apply(_this$props, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onPlay", function () {
          var _this$props2;

          return (_this$props2 = _this.props).onPlay.apply(_this$props2, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onBuffer", function () {
          var _this$props3;

          return (_this$props3 = _this.props).onBuffer.apply(_this$props3, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onBufferEnd", function () {
          var _this$props4;

          return (_this$props4 = _this.props).onBufferEnd.apply(_this$props4, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onPause", function () {
          var _this$props5;

          return (_this$props5 = _this.props).onPause.apply(_this$props5, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onEnded", function () {
          var _this$props6;

          return (_this$props6 = _this.props).onEnded.apply(_this$props6, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onError", function () {
          var _this$props7;

          return (_this$props7 = _this.props).onError.apply(_this$props7, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onEnablePIP", function () {
          var _this$props8;

          return (_this$props8 = _this.props).onEnablePIP.apply(_this$props8, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "onDisablePIP", function (e) {
          var _this$props9 = _this.props,
              onDisablePIP = _this$props9.onDisablePIP,
              playing = _this$props9.playing;
          onDisablePIP(e);

          if (playing) {
            _this.play();
          }
        });

        _defineProperty(_assertThisInitialized(_this), "onPresentationModeChange", function (e) {
          if (_this.player && (0, utils.supportsWebKitPresentationMode)(_this.player)) {
            var webkitPresentationMode = _this.player.webkitPresentationMode;

            if (webkitPresentationMode === 'picture-in-picture') {
              _this.onEnablePIP(e);
            } else if (webkitPresentationMode === 'inline') {
              _this.onDisablePIP(e);
            }
          }
        });

        _defineProperty(_assertThisInitialized(_this), "onSeek", function (e) {
          _this.props.onSeek(e.target.currentTime);
        });

        _defineProperty(_assertThisInitialized(_this), "mute", function () {
          _this.player.muted = true;
        });

        _defineProperty(_assertThisInitialized(_this), "unmute", function () {
          _this.player.muted = false;
        });

        _defineProperty(_assertThisInitialized(_this), "renderSourceElement", function (source, index) {
          if (typeof source === 'string') {
            return /*#__PURE__*/_react["default"].createElement("source", {
              key: index,
              src: source
            });
          }

          return /*#__PURE__*/_react["default"].createElement("source", _extends({
            key: index
          }, source));
        });

        _defineProperty(_assertThisInitialized(_this), "renderTrack", function (track, index) {
          return /*#__PURE__*/_react["default"].createElement("track", _extends({
            key: index
          }, track));
        });

        _defineProperty(_assertThisInitialized(_this), "ref", function (player) {
          if (_this.player) {
            // Store previous player to be used by removeListeners()
            _this.prevPlayer = _this.player;
          }

          _this.player = player;
        });

        return _this;
      }

      _createClass(FilePlayer, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
          this.addListeners(this.player);

          if (IOS) {
            this.player.load();
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {
            this.removeListeners(this.prevPlayer);
            this.addListeners(this.player);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.removeListeners(this.player);

          if (this.hls) {
            this.hls.destroy();
          }
        }
      }, {
        key: "addListeners",
        value: function addListeners(player) {
          var playsinline = this.props.playsinline;
          player.addEventListener('canplay', this.onReady);
          player.addEventListener('play', this.onPlay);
          player.addEventListener('waiting', this.onBuffer);
          player.addEventListener('playing', this.onBufferEnd);
          player.addEventListener('pause', this.onPause);
          player.addEventListener('seeked', this.onSeek);
          player.addEventListener('ended', this.onEnded);
          player.addEventListener('error', this.onError);
          player.addEventListener('enterpictureinpicture', this.onEnablePIP);
          player.addEventListener('leavepictureinpicture', this.onDisablePIP);
          player.addEventListener('webkitpresentationmodechanged', this.onPresentationModeChange);

          if (playsinline) {
            player.setAttribute('playsinline', '');
            player.setAttribute('webkit-playsinline', '');
            player.setAttribute('x5-playsinline', '');
          }
        }
      }, {
        key: "removeListeners",
        value: function removeListeners(player) {
          player.removeEventListener('canplay', this.onReady);
          player.removeEventListener('play', this.onPlay);
          player.removeEventListener('waiting', this.onBuffer);
          player.removeEventListener('playing', this.onBufferEnd);
          player.removeEventListener('pause', this.onPause);
          player.removeEventListener('seeked', this.onSeek);
          player.removeEventListener('ended', this.onEnded);
          player.removeEventListener('error', this.onError);
          player.removeEventListener('enterpictureinpicture', this.onEnablePIP);
          player.removeEventListener('leavepictureinpicture', this.onDisablePIP);
          player.removeEventListener('webkitpresentationmodechanged', this.onPresentationModeChange);
        } // Proxy methods to prevent listener leaks

      }, {
        key: "shouldUseAudio",
        value: function shouldUseAudio(props) {
          if (props.config.forceVideo) {
            return false;
          }

          if (props.config.attributes.poster) {
            return false; // Use <video> so that poster is shown
          }

          return patterns.AUDIO_EXTENSIONS.test(props.url) || props.config.forceAudio;
        }
      }, {
        key: "shouldUseHLS",
        value: function shouldUseHLS(url) {
          return patterns.HLS_EXTENSIONS.test(url) && !IOS || this.props.config.forceHLS;
        }
      }, {
        key: "shouldUseDASH",
        value: function shouldUseDASH(url) {
          return patterns.DASH_EXTENSIONS.test(url) || this.props.config.forceDASH;
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;

          var _this$props$config = this.props.config,
              hlsVersion = _this$props$config.hlsVersion,
              hlsOptions = _this$props$config.hlsOptions,
              dashVersion = _this$props$config.dashVersion;

          if (this.hls) {
            this.hls.destroy();
          }

          if (this.dash) {
            this.dash.reset();
          }

          if (this.shouldUseHLS(url)) {
            (0, utils.getSDK)(HLS_SDK_URL.replace('VERSION', hlsVersion), HLS_GLOBAL).then(function (Hls) {
              _this2.hls = new Hls(hlsOptions);

              _this2.hls.on(Hls.Events.ERROR, function (e, data) {
                _this2.props.onError(e, data, _this2.hls, Hls);
              });

              _this2.hls.loadSource(url);

              _this2.hls.attachMedia(_this2.player);
            });
          }

          if (this.shouldUseDASH(url)) {
            (0, utils.getSDK)(DASH_SDK_URL.replace('VERSION', dashVersion), DASH_GLOBAL).then(function (dashjs) {
              _this2.dash = dashjs.MediaPlayer().create();

              _this2.dash.initialize(_this2.player, url, _this2.props.playing);

              _this2.dash.on('error', _this2.props.onError);

              _this2.dash.getDebug().setLogToBrowserConsole(false);
            });
          }

          if (url instanceof Array) {
            // When setting new urls (<source>) on an already loaded video,
            // HTMLMediaElement.load() is needed to reset the media element
            // and restart the media resource. Just replacing children source
            // dom nodes is not enough
            this.player.load();
          } else if ((0, utils.isMediaStream)(url)) {
            try {
              this.player.srcObject = url;
            } catch (e) {
              this.player.src = window.URL.createObjectURL(url);
            }
          }
        }
      }, {
        key: "play",
        value: function play() {
          var promise = this.player.play();

          if (promise) {
            promise["catch"](this.props.onError);
          }
        }
      }, {
        key: "pause",
        value: function pause() {
          this.player.pause();
        }
      }, {
        key: "stop",
        value: function stop() {
          this.player.removeAttribute('src');

          if (this.dash) {
            this.dash.reset();
          }
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.player.currentTime = seconds;
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.player.volume = fraction;
        }
      }, {
        key: "enablePIP",
        value: function enablePIP() {
          if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {
            this.player.requestPictureInPicture();
          } else if ((0, utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== 'picture-in-picture') {
            this.player.webkitSetPresentationMode('picture-in-picture');
          }
        }
      }, {
        key: "disablePIP",
        value: function disablePIP() {
          if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {
            document.exitPictureInPicture();
          } else if ((0, utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== 'inline') {
            this.player.webkitSetPresentationMode('inline');
          }
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.player.playbackRate = rate;
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          if (!this.player) return null;
          var _this$player = this.player,
              duration = _this$player.duration,
              seekable = _this$player.seekable; // on iOS, live streams return Infinity for the duration
          // so instead we use the end of the seekable timerange

          if (duration === Infinity && seekable.length > 0) {
            return seekable.end(seekable.length - 1);
          }

          return duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          if (!this.player) return null;
          return this.player.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          if (!this.player) return null;
          var buffered = this.player.buffered;

          if (buffered.length === 0) {
            return 0;
          }

          var end = buffered.end(buffered.length - 1);
          var duration = this.getDuration();

          if (end > duration) {
            return duration;
          }

          return end;
        }
      }, {
        key: "getSource",
        value: function getSource(url) {
          var useHLS = this.shouldUseHLS(url);
          var useDASH = this.shouldUseDASH(url);

          if (url instanceof Array || (0, utils.isMediaStream)(url) || useHLS || useDASH) {
            return undefined;
          }

          if (MATCH_DROPBOX_URL.test(url)) {
            return url.replace('www.dropbox.com', 'dl.dropboxusercontent.com');
          }

          return url;
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props10 = this.props,
              url = _this$props10.url,
              playing = _this$props10.playing,
              loop = _this$props10.loop,
              controls = _this$props10.controls,
              muted = _this$props10.muted,
              config = _this$props10.config,
              width = _this$props10.width,
              height = _this$props10.height;
          var useAudio = this.shouldUseAudio(this.props);
          var Element = useAudio ? 'audio' : 'video';
          var style = {
            width: width === 'auto' ? width : '100%',
            height: height === 'auto' ? height : '100%'
          };
          return /*#__PURE__*/_react["default"].createElement(Element, _extends({
            ref: this.ref,
            src: this.getSource(url),
            style: style,
            preload: "auto",
            autoPlay: playing || undefined,
            controls: controls,
            muted: muted,
            loop: loop
          }, config.attributes), url instanceof Array && url.map(this.renderSourceElement), config.tracks.map(this.renderTrack));
        }
      }]);

      return FilePlayer;
    }(_react.Component);

    exports["default"] = FilePlayer;

    _defineProperty(FilePlayer, "displayName", 'FilePlayer');

    _defineProperty(FilePlayer, "canPlay", patterns.canPlay.file);
  });
  unwrapExports(FilePlayer_1);
  var players = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    var _default = [{
      key: 'youtube',
      name: 'YouTube',
      canPlay: patterns.canPlay.youtube,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(YouTube_1);
        });
      })
    }, {
      key: 'soundcloud',
      name: 'SoundCloud',
      canPlay: patterns.canPlay.soundcloud,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(SoundCloud_1);
        });
      })
    }, {
      key: 'vimeo',
      name: 'Vimeo',
      canPlay: patterns.canPlay.vimeo,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Vimeo_1);
        });
      })
    }, {
      key: 'facebook',
      name: 'Facebook',
      canPlay: patterns.canPlay.facebook,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Facebook_1);
        });
      })
    }, {
      key: 'streamable',
      name: 'Streamable',
      canPlay: patterns.canPlay.streamable,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Streamable_1);
        });
      })
    }, {
      key: 'wistia',
      name: 'Wistia',
      canPlay: patterns.canPlay.wistia,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Wistia_1);
        });
      })
    }, {
      key: 'twitch',
      name: 'Twitch',
      canPlay: patterns.canPlay.twitch,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Twitch_1);
        });
      })
    }, {
      key: 'dailymotion',
      name: 'DailyMotion',
      canPlay: patterns.canPlay.dailymotion,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(DailyMotion_1);
        });
      })
    }, {
      key: 'mixcloud',
      name: 'Mixcloud',
      canPlay: patterns.canPlay.mixcloud,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Mixcloud_1);
        });
      })
    }, {
      key: 'vidyard',
      name: 'Vidyard',
      canPlay: patterns.canPlay.vidyard,
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(Vidyard_1);
        });
      })
    }, {
      key: 'file',
      name: 'FilePlayer',
      canPlay: patterns.canPlay.file,
      canEnablePIP: function canEnablePIP(url) {
        return patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, utils.supportsWebKitPresentationMode)()) && !patterns.AUDIO_EXTENSIONS.test(url);
      },
      lazyPlayer: (0, React__default.lazy)(function () {
        return Promise.resolve().then(function () {
          return _interopRequireWildcard(FilePlayer_1);
        });
      })
    }];
    exports["default"] = _default;
  });
  unwrapExports(players);

  function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
      return false;
    }

    for (var i = 0; i < newInputs.length; i++) {
      if (newInputs[i] !== lastInputs[i]) {
        return false;
      }
    }

    return true;
  }

  function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) {
      isEqual = areInputsEqual;
    }

    var lastThis;
    var lastArgs = [];
    var lastResult;
    var calledOnce = false;

    function memoized() {
      var newArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        newArgs[_i] = arguments[_i];
      }

      if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
        return lastResult;
      }

      lastResult = resultFn.apply(this, newArgs);
      calledOnce = true;
      lastThis = this;
      lastArgs = newArgs;
      return lastResult;
    }

    return memoized;
  }
  /* global Map:readonly, Set:readonly, ArrayBuffer:readonly */


  var hasElementType = typeof Element !== 'undefined';
  var hasMap = typeof Map === 'function';
  var hasSet = typeof Set === 'function';
  var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView; // Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

  function equal(a, b) {
    // START: fast-deep-equal es6/index.js 3.1.1
    if (a === b) return true;

    if (a && b && (0, _typeof3["default"])(a) == 'object' && (0, _typeof3["default"])(b) == 'object') {
      if (a.constructor !== b.constructor) return false;
      var length, i, keys;

      if (Array.isArray(a)) {
        length = a.length;
        if (length != b.length) return false;

        for (i = length; i-- !== 0;) {
          if (!equal(a[i], b[i])) return false;
        }

        return true;
      } // START: Modifications:
      // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
      //    to co-exist with es5.
      // 2. Replace `for of` with es5 compliant iteration using `for`.
      //    Basically, take:
      //
      //    ```js
      //    for (i of a.entries())
      //      if (!b.has(i[0])) return false;
      //    ```
      //
      //    ... and convert to:
      //
      //    ```js
      //    it = a.entries();
      //    while (!(i = it.next()).done)
      //      if (!b.has(i.value[0])) return false;
      //    ```
      //
      //    **Note**: `i` access switches to `i.value`.


      var it;

      if (hasMap && a instanceof Map && b instanceof Map) {
        if (a.size !== b.size) return false;
        it = a.entries();

        while (!(i = it.next()).done) {
          if (!b.has(i.value[0])) return false;
        }

        it = a.entries();

        while (!(i = it.next()).done) {
          if (!equal(i.value[1], b.get(i.value[0]))) return false;
        }

        return true;
      }

      if (hasSet && a instanceof Set && b instanceof Set) {
        if (a.size !== b.size) return false;
        it = a.entries();

        while (!(i = it.next()).done) {
          if (!b.has(i.value[0])) return false;
        }

        return true;
      } // END: Modifications


      if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
        length = a.length;
        if (length != b.length) return false;

        for (i = length; i-- !== 0;) {
          if (a[i] !== b[i]) return false;
        }

        return true;
      }

      if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
      if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
      if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
      keys = Object.keys(a);
      length = keys.length;
      if (length !== Object.keys(b).length) return false;

      for (i = length; i-- !== 0;) {
        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
      } // END: fast-deep-equal
      // START: react-fast-compare
      // custom handling for DOM elements


      if (hasElementType && a instanceof Element) return false; // custom handling for React/Preact

      for (i = length; i-- !== 0;) {
        if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
          // React-specific: avoid traversing React elements' _owner
          // Preact-specific: avoid traversing Preact elements' __v and __o
          //    __v = $_original / $_vnode
          //    __o = $_owner
          // These properties contain circular references and are not needed when
          // comparing the actual elements (and not their owners)
          // .$$typeof and ._store on just reasonable markers of elements
          continue;
        } // all other properties should be traversed as usual


        if (!equal(a[keys[i]], b[keys[i]])) return false;
      } // END: react-fast-compare
      // START: fast-deep-equal


      return true;
    }

    return a !== a && b !== b;
  } // end fast-deep-equal


  var reactFastCompare = function isEqual(a, b) {
    try {
      return equal(a, b);
    } catch (error) {
      if ((error.message || '').match(/stack|recursion/i)) {
        // warn on circular references, don't crash
        // browsers give this different errors name and messages:
        // chrome/safari: "RangeError", "Maximum call stack size exceeded"
        // firefox: "InternalError", too much recursion"
        // edge: "Error", "Out of stack space"
        console.warn('react-fast-compare cannot handle circular refs');
        return false;
      } // some other error. we should definitely know about these


      throw error;
    }
  };

  var props = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultProps = exports.propTypes = void 0;

    var _propTypes = _interopRequireDefault(propTypes);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    var string = _propTypes["default"].string,
        bool = _propTypes["default"].bool,
        number = _propTypes["default"].number,
        array = _propTypes["default"].array,
        oneOfType = _propTypes["default"].oneOfType,
        shape = _propTypes["default"].shape,
        object = _propTypes["default"].object,
        func = _propTypes["default"].func,
        node = _propTypes["default"].node;
    var propTypes$1 = {
      url: oneOfType([string, array, object]),
      playing: bool,
      loop: bool,
      controls: bool,
      volume: number,
      muted: bool,
      playbackRate: number,
      width: oneOfType([string, number]),
      height: oneOfType([string, number]),
      style: object,
      progressInterval: number,
      playsinline: bool,
      pip: bool,
      light: oneOfType([bool, string]),
      playIcon: node,
      wrapper: oneOfType([string, func, shape({
        render: func.isRequired
      })]),
      config: shape({
        soundcloud: shape({
          options: object
        }),
        youtube: shape({
          playerVars: object,
          embedOptions: object,
          onUnstarted: func
        }),
        facebook: shape({
          appId: string,
          version: string,
          playerId: string
        }),
        dailymotion: shape({
          params: object
        }),
        vimeo: shape({
          playerOptions: object
        }),
        file: shape({
          attributes: object,
          tracks: array,
          forceVideo: bool,
          forceAudio: bool,
          forceHLS: bool,
          forceDASH: bool,
          hlsOptions: object,
          hlsVersion: string,
          dashVersion: string
        }),
        wistia: shape({
          options: object
        }),
        mixcloud: shape({
          options: object
        }),
        twitch: shape({
          options: object,
          playerId: string
        }),
        vidyard: shape({
          options: object
        })
      }),
      onReady: func,
      onStart: func,
      onPlay: func,
      onPause: func,
      onBuffer: func,
      onBufferEnd: func,
      onEnded: func,
      onError: func,
      onDuration: func,
      onSeek: func,
      onProgress: func,
      onEnablePIP: func,
      onDisablePIP: func
    };
    exports.propTypes = propTypes$1;

    var noop = function noop() {};

    var defaultProps = {
      playing: false,
      loop: false,
      controls: false,
      volume: null,
      muted: false,
      playbackRate: 1,
      width: '640px',
      height: '360px',
      style: {},
      progressInterval: 1000,
      playsinline: false,
      pip: false,
      light: false,
      wrapper: 'div',
      config: {
        soundcloud: {
          options: {
            visual: true,
            // Undocumented, but makes player fill container and look better
            buying: false,
            liking: false,
            download: false,
            sharing: false,
            show_comments: false,
            show_playcount: false
          }
        },
        youtube: {
          playerVars: {
            playsinline: 1,
            showinfo: 0,
            rel: 0,
            iv_load_policy: 3,
            modestbranding: 1
          },
          embedOptions: {},
          onUnstarted: noop
        },
        facebook: {
          appId: '1309697205772819',
          version: 'v3.3',
          playerId: null
        },
        dailymotion: {
          params: {
            api: 1,
            'endscreen-enable': false
          }
        },
        vimeo: {
          playerOptions: {
            autopause: false,
            byline: false,
            portrait: false,
            title: false
          }
        },
        file: {
          attributes: {},
          tracks: [],
          forceVideo: false,
          forceAudio: false,
          forceHLS: false,
          forceDASH: false,
          hlsOptions: {},
          hlsVersion: '0.13.1',
          dashVersion: '2.9.2'
        },
        wistia: {
          options: {}
        },
        mixcloud: {
          options: {
            hide_cover: 1
          }
        },
        twitch: {
          options: {},
          playerId: null
        },
        vidyard: {
          options: {}
        }
      },
      onReady: noop,
      onStart: noop,
      onPlay: noop,
      onPause: noop,
      onBuffer: noop,
      onBufferEnd: noop,
      onEnded: noop,
      onError: noop,
      onDuration: noop,
      onSeek: noop,
      onProgress: noop,
      onEnablePIP: noop,
      onDisablePIP: noop
    };
    exports.defaultProps = defaultProps;
  });
  unwrapExports(props);
  var props_1 = props.defaultProps;
  var props_2 = props.propTypes;
  var Player_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    var _reactFastCompare = _interopRequireDefault(reactFastCompare);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      return _extends.apply(this, arguments);
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var SEEK_ON_PLAY_EXPIRY = 5000;

    var Player = /*#__PURE__*/function (_Component) {
      _inherits(Player, _Component);

      var _super = _createSuper(Player);

      function Player() {
        var _this;

        _classCallCheck(this, Player);

        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(_args));

        _defineProperty(_assertThisInitialized(_this), "mounted", false);

        _defineProperty(_assertThisInitialized(_this), "isReady", false);

        _defineProperty(_assertThisInitialized(_this), "isPlaying", false);

        _defineProperty(_assertThisInitialized(_this), "isLoading", true);

        _defineProperty(_assertThisInitialized(_this), "loadOnReady", null);

        _defineProperty(_assertThisInitialized(_this), "startOnPlay", true);

        _defineProperty(_assertThisInitialized(_this), "seekOnPlay", null);

        _defineProperty(_assertThisInitialized(_this), "onDurationCalled", false);

        _defineProperty(_assertThisInitialized(_this), "handlePlayerMount", function (player) {
          _this.player = player;

          _this.player.load(_this.props.url);

          _this.progress();
        });

        _defineProperty(_assertThisInitialized(_this), "getInternalPlayer", function (key) {
          if (!_this.player) return null;
          return _this.player[key];
        });

        _defineProperty(_assertThisInitialized(_this), "progress", function () {
          if (_this.props.url && _this.player && _this.isReady) {
            var playedSeconds = _this.getCurrentTime() || 0;

            var loadedSeconds = _this.getSecondsLoaded();

            var duration = _this.getDuration();

            if (duration) {
              var progress = {
                playedSeconds: playedSeconds,
                played: playedSeconds / duration
              };

              if (loadedSeconds !== null) {
                progress.loadedSeconds = loadedSeconds;
                progress.loaded = loadedSeconds / duration;
              } // Only call onProgress if values have changed


              if (progress.playedSeconds !== _this.prevPlayed || progress.loadedSeconds !== _this.prevLoaded) {
                _this.props.onProgress(progress);
              }

              _this.prevPlayed = progress.playedSeconds;
              _this.prevLoaded = progress.loadedSeconds;
            }
          }

          _this.progressTimeout = setTimeout(_this.progress, _this.props.progressFrequency || _this.props.progressInterval);
        });

        _defineProperty(_assertThisInitialized(_this), "handleReady", function () {
          if (!_this.mounted) return;
          _this.isReady = true;
          _this.isLoading = false;
          var _this$props = _this.props,
              onReady = _this$props.onReady,
              playing = _this$props.playing,
              volume = _this$props.volume,
              muted = _this$props.muted;
          onReady();

          if (!muted && volume !== null) {
            _this.player.setVolume(volume);
          }

          if (_this.loadOnReady) {
            _this.player.load(_this.loadOnReady, true);

            _this.loadOnReady = null;
          } else if (playing) {
            _this.player.play();
          }

          _this.handleDurationCheck();
        });

        _defineProperty(_assertThisInitialized(_this), "handlePlay", function () {
          _this.isPlaying = true;
          _this.isLoading = false;
          var _this$props2 = _this.props,
              onStart = _this$props2.onStart,
              onPlay = _this$props2.onPlay,
              playbackRate = _this$props2.playbackRate;

          if (_this.startOnPlay) {
            if (_this.player.setPlaybackRate && playbackRate !== 1) {
              _this.player.setPlaybackRate(playbackRate);
            }

            onStart();
            _this.startOnPlay = false;
          }

          onPlay();

          if (_this.seekOnPlay) {
            _this.seekTo(_this.seekOnPlay);

            _this.seekOnPlay = null;
          }

          _this.handleDurationCheck();
        });

        _defineProperty(_assertThisInitialized(_this), "handlePause", function (e) {
          _this.isPlaying = false;

          if (!_this.isLoading) {
            _this.props.onPause(e);
          }
        });

        _defineProperty(_assertThisInitialized(_this), "handleEnded", function () {
          var _this$props3 = _this.props,
              activePlayer = _this$props3.activePlayer,
              loop = _this$props3.loop,
              onEnded = _this$props3.onEnded;

          if (activePlayer.loopOnEnded && loop) {
            _this.seekTo(0);
          }

          if (!loop) {
            _this.isPlaying = false;
            onEnded();
          }
        });

        _defineProperty(_assertThisInitialized(_this), "handleError", function () {
          var _this$props4;

          _this.isLoading = false;

          (_this$props4 = _this.props).onError.apply(_this$props4, arguments);
        });

        _defineProperty(_assertThisInitialized(_this), "handleDurationCheck", function () {
          clearTimeout(_this.durationCheckTimeout);

          var duration = _this.getDuration();

          if (duration) {
            if (!_this.onDurationCalled) {
              _this.props.onDuration(duration);

              _this.onDurationCalled = true;
            }
          } else {
            _this.durationCheckTimeout = setTimeout(_this.handleDurationCheck, 100);
          }
        });

        _defineProperty(_assertThisInitialized(_this), "handleLoaded", function () {
          // Sometimes we know loading has stopped but onReady/onPlay are never called
          // so this provides a way for players to avoid getting stuck
          _this.isLoading = false;
        });

        return _this;
      }

      _createClass(Player, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.mounted = true;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          clearTimeout(this.progressTimeout);
          clearTimeout(this.durationCheckTimeout);

          if (this.isReady) {
            this.player.stop();

            if (this.player.disablePIP) {
              this.player.disablePIP();
            }
          }

          this.mounted = false;
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var _this2 = this; // Invoke player methods based on changed props


          var _this$props5 = this.props,
              url = _this$props5.url,
              playing = _this$props5.playing,
              volume = _this$props5.volume,
              muted = _this$props5.muted,
              playbackRate = _this$props5.playbackRate,
              pip = _this$props5.pip,
              loop = _this$props5.loop,
              activePlayer = _this$props5.activePlayer;

          if (!(0, _reactFastCompare["default"])(prevProps.url, url)) {
            if (this.isLoading && !activePlayer.forceLoad) {
              console.warn("ReactPlayer: the attempt to load ".concat(url, " is being deferred until the player has loaded"));
              this.loadOnReady = url;
              return;
            }

            this.isLoading = true;
            this.startOnPlay = true;
            this.onDurationCalled = false;
            this.player.load(url, this.isReady);
          }

          if (!prevProps.playing && playing && !this.isPlaying) {
            this.player.play();
          }

          if (prevProps.playing && !playing && this.isPlaying) {
            this.player.pause();
          }

          if (!prevProps.pip && pip && this.player.enablePIP) {
            this.player.enablePIP();
          }

          if (prevProps.pip && !pip && this.player.disablePIP) {
            this.player.disablePIP();
          }

          if (prevProps.volume !== volume && volume !== null) {
            this.player.setVolume(volume);
          }

          if (prevProps.muted !== muted) {
            if (muted) {
              this.player.mute();
            } else {
              this.player.unmute();

              if (volume !== null) {
                // Set volume next tick to fix a bug with DailyMotion
                setTimeout(function () {
                  return _this2.player.setVolume(volume);
                });
              }
            }
          }

          if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {
            this.player.setPlaybackRate(playbackRate);
          }

          if (prevProps.loop !== loop && this.player.setLoop) {
            this.player.setLoop(loop);
          }
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          if (!this.isReady) return null;
          return this.player.getDuration();
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          if (!this.isReady) return null;
          return this.player.getCurrentTime();
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          if (!this.isReady) return null;
          return this.player.getSecondsLoaded();
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount, type) {
          var _this3 = this; // When seeking before player is ready, store value and seek later


          if (!this.isReady && amount !== 0) {
            this.seekOnPlay = amount;
            setTimeout(function () {
              _this3.seekOnPlay = null;
            }, SEEK_ON_PLAY_EXPIRY);
            return;
          }

          var isFraction = !type ? amount > 0 && amount < 1 : type === 'fraction';

          if (isFraction) {
            // Convert fraction to seconds based on duration
            var duration = this.player.getDuration();

            if (!duration) {
              console.warn('ReactPlayer: could not seek using fraction – duration not yet available');
              return;
            }

            this.player.seekTo(duration * amount);
            return;
          }

          this.player.seekTo(amount);
        }
      }, {
        key: "render",
        value: function render() {
          var Player = this.props.activePlayer;

          if (!Player) {
            return null;
          }

          return /*#__PURE__*/_react["default"].createElement(Player, _extends({}, this.props, {
            onMount: this.handlePlayerMount,
            onReady: this.handleReady,
            onPlay: this.handlePlay,
            onPause: this.handlePause,
            onEnded: this.handleEnded,
            onLoaded: this.handleLoaded,
            onError: this.handleError
          }));
        }
      }]);

      return Player;
    }(_react.Component);

    exports["default"] = Player;

    _defineProperty(Player, "displayName", 'Player');

    _defineProperty(Player, "propTypes", props.propTypes);

    _defineProperty(Player, "defaultProps", props.defaultProps);
  });
  unwrapExports(Player_1);
  var Preview_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _react = _interopRequireWildcard(React__default);

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var ICON_SIZE = '64px';

    var Preview = /*#__PURE__*/function (_Component) {
      _inherits(Preview, _Component);

      var _super = _createSuper(Preview);

      function Preview() {
        var _this;

        _classCallCheck(this, Preview);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "mounted", false);

        _defineProperty(_assertThisInitialized(_this), "state", {
          image: null
        });

        _defineProperty(_assertThisInitialized(_this), "handleKeyPress", function (e) {
          if (e.key === 'Enter' || e.key === ' ') {
            _this.props.onClick();
          }
        });

        return _this;
      }

      _createClass(Preview, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.mounted = true;
          this.fetchImage(this.props);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var _this$props = this.props,
              url = _this$props.url,
              light = _this$props.light;

          if (prevProps.url !== url || prevProps.light !== light) {
            this.fetchImage(this.props);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.mounted = false;
        }
      }, {
        key: "fetchImage",
        value: function fetchImage(_ref) {
          var _this2 = this;

          var url = _ref.url,
              light = _ref.light;

          if (typeof light === 'string') {
            this.setState({
              image: light
            });
            return;
          }

          this.setState({
            image: null
          });
          return window.fetch("https://noembed.com/embed?url=".concat(url)).then(function (response) {
            return response.json();
          }).then(function (data) {
            if (data.thumbnail_url && _this2.mounted) {
              var image = data.thumbnail_url.replace('height=100', 'height=480');

              _this2.setState({
                image: image
              });
            }
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props,
              onClick = _this$props2.onClick,
              playIcon = _this$props2.playIcon;
          var image = this.state.image;
          var flexCenter = {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
          };
          var styles = {
            preview: _objectSpread({
              width: '100%',
              height: '100%',
              backgroundImage: image ? "url(".concat(image, ")") : undefined,
              backgroundSize: 'cover',
              backgroundPosition: 'center',
              cursor: 'pointer'
            }, flexCenter),
            shadow: _objectSpread({
              background: 'radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)',
              borderRadius: ICON_SIZE,
              width: ICON_SIZE,
              height: ICON_SIZE
            }, flexCenter),
            playIcon: {
              borderStyle: 'solid',
              borderWidth: '16px 0 16px 26px',
              borderColor: 'transparent transparent transparent white',
              marginLeft: '7px'
            }
          };

          var defaultPlayIcon = /*#__PURE__*/_react["default"].createElement("div", {
            style: styles.shadow,
            className: "react-player__shadow"
          }, /*#__PURE__*/_react["default"].createElement("div", {
            style: styles.playIcon,
            className: "react-player__play-icon"
          }));

          return /*#__PURE__*/_react["default"].createElement("div", {
            style: styles.preview,
            className: "react-player__preview",
            onClick: onClick,
            tabIndex: 0,
            onKeyPress: this.handleKeyPress
          }, playIcon || defaultPlayIcon);
        }
      }]);

      return Preview;
    }(_react.Component);

    exports["default"] = Preview;
  });
  unwrapExports(Preview_1);
  var ReactPlayer = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createReactPlayer = void 0;

    var _react = _interopRequireWildcard(React__default);

    var _deepmerge = _interopRequireDefault(cjs);

    var _memoizeOne = _interopRequireDefault(memoizeOne);

    var _reactFastCompare = _interopRequireDefault(reactFastCompare);

    var _Player3 = _interopRequireDefault(Player_1);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
          return typeof obj;
        };
      } else {
        _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);

      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }

      return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};

        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }

      return target;
    }

    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      return _extends.apply(this, arguments);
    }

    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }

    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
    }

    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    function _createSuper(Derived) {
      return function () {
        var Super = _getPrototypeOf(Derived),
            result;

        if (_isNativeReflectConstruct()) {
          var NewTarget = _getPrototypeOf(this).constructor;

          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }

        return _possibleConstructorReturn(this, result);
      };
    }

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }

      return _assertThisInitialized(self);
    }

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;

      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function") return null;
      var cache = new WeakMap();

      _getRequireWildcardCache = function _getRequireWildcardCache() {
        return cache;
      };

      return cache;
    }

    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }

      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }

      var cache = _getRequireWildcardCache();

      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }

      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }

      newObj["default"] = obj;

      if (cache) {
        cache.set(obj, newObj);
      }

      return newObj;
    }

    var Preview = (0, _react.lazy)(function () {
      return Promise.resolve().then(function () {
        return _interopRequireWildcard(Preview_1);
      });
    });
    var IS_BROWSER = typeof window !== 'undefined' && window.document;
    var SUPPORTED_PROPS = Object.keys(props.propTypes); // Return null when rendering on the server
    // as Suspense is not supported yet

    var UniversalSuspense = IS_BROWSER ? _react.Suspense : function () {
      return null;
    };
    var customPlayers = [];

    var createReactPlayer = function createReactPlayer(players, fallback) {
      var _class, _temp;

      return _temp = _class = /*#__PURE__*/function (_Component) {
        _inherits(ReactPlayer, _Component);

        var _super = _createSuper(ReactPlayer);

        function ReactPlayer() {
          var _this;

          _classCallCheck(this, ReactPlayer);

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _super.call.apply(_super, [this].concat(args));

          _defineProperty(_assertThisInitialized(_this), "state", {
            showPreview: !!_this.props.light
          });

          _defineProperty(_assertThisInitialized(_this), "references", {
            wrapper: function wrapper(_wrapper) {
              _this.wrapper = _wrapper;
            },
            player: function player(_player) {
              _this.player = _player;
            }
          });

          _defineProperty(_assertThisInitialized(_this), "handleClickPreview", function () {
            _this.setState({
              showPreview: false
            });
          });

          _defineProperty(_assertThisInitialized(_this), "showPreview", function () {
            _this.setState({
              showPreview: true
            });
          });

          _defineProperty(_assertThisInitialized(_this), "getDuration", function () {
            if (!_this.player) return null;
            return _this.player.getDuration();
          });

          _defineProperty(_assertThisInitialized(_this), "getCurrentTime", function () {
            if (!_this.player) return null;
            return _this.player.getCurrentTime();
          });

          _defineProperty(_assertThisInitialized(_this), "getSecondsLoaded", function () {
            if (!_this.player) return null;
            return _this.player.getSecondsLoaded();
          });

          _defineProperty(_assertThisInitialized(_this), "getInternalPlayer", function () {
            var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'player';
            if (!_this.player) return null;
            return _this.player.getInternalPlayer(key);
          });

          _defineProperty(_assertThisInitialized(_this), "seekTo", function (fraction, type) {
            if (!_this.player) return null;

            _this.player.seekTo(fraction, type);
          });

          _defineProperty(_assertThisInitialized(_this), "handleReady", function () {
            _this.props.onReady(_assertThisInitialized(_this));
          });

          _defineProperty(_assertThisInitialized(_this), "getActivePlayer", (0, _memoizeOne["default"])(function (url) {
            for (var _i = 0, _arr = [].concat(customPlayers, _toConsumableArray(players)); _i < _arr.length; _i++) {
              var player = _arr[_i];

              if (player.canPlay(url)) {
                return player;
              }
            }

            if (fallback) {
              return fallback;
            }

            return null;
          }));

          _defineProperty(_assertThisInitialized(_this), "getConfig", (0, _memoizeOne["default"])(function (url, key) {
            var config = _this.props.config;
            return _deepmerge["default"].all([props.defaultProps.config, props.defaultProps.config[key] || {}, config, config[key] || {}]);
          }));

          _defineProperty(_assertThisInitialized(_this), "getAttributes", (0, _memoizeOne["default"])(function (url) {
            return (0, utils.omit)(_this.props, SUPPORTED_PROPS);
          }));

          _defineProperty(_assertThisInitialized(_this), "renderActivePlayer", function (url) {
            if (!url) return null;

            var player = _this.getActivePlayer(url);

            if (!player) return null;

            var config = _this.getConfig(url, player.key);

            return /*#__PURE__*/_react["default"].createElement(_Player3["default"], _extends({}, _this.props, {
              key: player.key,
              ref: _this.references.player,
              config: config,
              activePlayer: player.lazyPlayer || player,
              onReady: _this.handleReady
            }));
          });

          return _this;
        }

        _createClass(ReactPlayer, [{
          key: "shouldComponentUpdate",
          value: function shouldComponentUpdate(nextProps, nextState) {
            return !(0, _reactFastCompare["default"])(this.props, nextProps) || !(0, _reactFastCompare["default"])(this.state, nextState);
          }
        }, {
          key: "componentDidUpdate",
          value: function componentDidUpdate(prevProps) {
            var light = this.props.light;

            if (!prevProps.light && light) {
              this.setState({
                showPreview: true
              });
            }

            if (prevProps.light && !light) {
              this.setState({
                showPreview: false
              });
            }
          }
        }, {
          key: "renderPreview",
          value: function renderPreview(url) {
            if (!url) return null;
            var _this$props = this.props,
                light = _this$props.light,
                playIcon = _this$props.playIcon;
            return /*#__PURE__*/_react["default"].createElement(Preview, {
              url: url,
              light: light,
              playIcon: playIcon,
              onClick: this.handleClickPreview
            });
          }
        }, {
          key: "render",
          value: function render() {
            var _this$props2 = this.props,
                url = _this$props2.url,
                style = _this$props2.style,
                width = _this$props2.width,
                height = _this$props2.height,
                Wrapper = _this$props2.wrapper;
            var showPreview = this.state.showPreview;
            var attributes = this.getAttributes(url);
            return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
              ref: this.references.wrapper,
              style: _objectSpread({}, style, {
                width: width,
                height: height
              })
            }, attributes), /*#__PURE__*/_react["default"].createElement(UniversalSuspense, {
              fallback: null
            }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));
          }
        }]);

        return ReactPlayer;
      }(_react.Component), _defineProperty(_class, "displayName", 'ReactPlayer'), _defineProperty(_class, "propTypes", props.propTypes), _defineProperty(_class, "defaultProps", props.defaultProps), _defineProperty(_class, "addCustomPlayer", function (player) {
        customPlayers.push(player);
      }), _defineProperty(_class, "removeCustomPlayers", function () {
        customPlayers.length = 0;
      }), _defineProperty(_class, "canPlay", function (url) {
        for (var _i2 = 0, _arr2 = [].concat(customPlayers, _toConsumableArray(players)); _i2 < _arr2.length; _i2++) {
          var _Player = _arr2[_i2];

          if (_Player.canPlay(url)) {
            return true;
          }
        }

        return false;
      }), _defineProperty(_class, "canEnablePIP", function (url) {
        for (var _i3 = 0, _arr3 = [].concat(customPlayers, _toConsumableArray(players)); _i3 < _arr3.length; _i3++) {
          var _Player2 = _arr3[_i3];

          if (_Player2.canEnablePIP && _Player2.canEnablePIP(url)) {
            return true;
          }
        }

        return false;
      }), _temp;
    };

    exports.createReactPlayer = createReactPlayer;
  });
  unwrapExports(ReactPlayer);
  var ReactPlayer_1 = ReactPlayer.createReactPlayer;
  var lib$1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;

    var _players = _interopRequireDefault(players);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    } // Fall back to FilePlayer if nothing else can play the URL


    var fallback = _players["default"][_players["default"].length - 1];

    var _default = (0, ReactPlayer.createReactPlayer)(_players["default"], fallback);

    exports["default"] = _default;
  });
  var ReactPlayer$1 = unwrapExports(lib$1);

  var _emotionSourceMap2$1 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUGxheWVyLnN0eWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXc0IiLCJmaWxlIjoiVmlkZW9QbGF5ZXIuc3R5bGUudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19tYWtlVGVtcGxhdGVPYmplY3QgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcclxuaW1wb3J0IHsgYnJlYWtwb2ludHMgfSBmcm9tIFwiLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS53aWR0aCwgd2lkdGggPSBfYiA9PT0gdm9pZCAwID8gXCIxMDAlXCIgOiBfYiwgX2MgPSBfYS5oZWlnaHQsIGhlaWdodCA9IF9jID09PSB2b2lkIDAgPyBcIjEwMCVcIiA6IF9jLCBfZCA9IF9hLnJlc3BvbnNpdmUsIHJlc3BvbnNpdmUgPSBfZCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9kLCBfZSA9IF9hLnJhdGlvLCByYXRpbyA9IF9lID09PSB2b2lkIDAgPyBcIjE2OjlcIiA6IF9lO1xyXG4gICAgdmFyIHJhdGlvUGVyYyA9IHJhdGlvXHJcbiAgICAgICAgLnNwbGl0KFwiOlwiKVxyXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIE51bWJlcih4KTsgfSlcclxuICAgICAgICAucmVkdWNlKGZ1bmN0aW9uICh4LCB5KSB7IHJldHVybiAoeSAvIHgpICogMTAwOyB9KTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGFpbmVyU3R5bGVzOiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdG1heC13aWR0aDogXCIsIFwiO1xcblxcdFxcdFxcdCYgLnZpZGVvLXBsYXllciB7XFxuXFx0XFx0XFx0fVxcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0bWF4LXdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0XFx0JiAudmlkZW8tcGxheWVyIHtcXG5cXHRcXHRcXHR9XFxuXFx0XFx0XCJdKSksIGJyZWFrcG9pbnRzLm1lZGl1bSksXHJcbiAgICAgICAgcGxheWVyU3R5bGVzOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0XFx0aGVpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogXCIsIFwiO1xcblxcdFxcdFxcdGhlaWdodDogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCB3aWR0aCwgaGVpZ2h0KSxcclxuICAgIH07XHJcbn07XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xLCB0ZW1wbGF0ZU9iamVjdF8yO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1WaWRlb1BsYXllci5zdHlsZS5qc3gubWFwIl19 */";

  var _emotionSourceMap$3 = "development" === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvUGxheWVyLnN0eWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVeUIiLCJmaWxlIjoiVmlkZW9QbGF5ZXIuc3R5bGUudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19tYWtlVGVtcGxhdGVPYmplY3QgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcclxuaW1wb3J0IHsgYnJlYWtwb2ludHMgfSBmcm9tIFwiLi4vLi4vdGhlbWVcIjtcclxuZXhwb3J0IHZhciBtYWtlU3R5bGVzID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS53aWR0aCwgd2lkdGggPSBfYiA9PT0gdm9pZCAwID8gXCIxMDAlXCIgOiBfYiwgX2MgPSBfYS5oZWlnaHQsIGhlaWdodCA9IF9jID09PSB2b2lkIDAgPyBcIjEwMCVcIiA6IF9jLCBfZCA9IF9hLnJlc3BvbnNpdmUsIHJlc3BvbnNpdmUgPSBfZCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9kLCBfZSA9IF9hLnJhdGlvLCByYXRpbyA9IF9lID09PSB2b2lkIDAgPyBcIjE2OjlcIiA6IF9lO1xyXG4gICAgdmFyIHJhdGlvUGVyYyA9IHJhdGlvXHJcbiAgICAgICAgLnNwbGl0KFwiOlwiKVxyXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIE51bWJlcih4KTsgfSlcclxuICAgICAgICAucmVkdWNlKGZ1bmN0aW9uICh4LCB5KSB7IHJldHVybiAoeSAvIHgpICogMTAwOyB9KTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGFpbmVyU3R5bGVzOiBjc3ModGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdG1heC13aWR0aDogXCIsIFwiO1xcblxcdFxcdFxcdCYgLnZpZGVvLXBsYXllciB7XFxuXFx0XFx0XFx0fVxcblxcdFxcdFwiXSwgW1wiXFxuXFx0XFx0XFx0bWF4LXdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0XFx0JiAudmlkZW8tcGxheWVyIHtcXG5cXHRcXHRcXHR9XFxuXFx0XFx0XCJdKSksIGJyZWFrcG9pbnRzLm1lZGl1bSksXHJcbiAgICAgICAgcGxheWVyU3R5bGVzOiBjc3ModGVtcGxhdGVPYmplY3RfMiB8fCAodGVtcGxhdGVPYmplY3RfMiA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcblxcdFxcdFxcdHdpZHRoOiBcIiwgXCI7XFxuXFx0XFx0XFx0aGVpZ2h0OiBcIiwgXCI7XFxuXFx0XFx0XCJdLCBbXCJcXG5cXHRcXHRcXHR3aWR0aDogXCIsIFwiO1xcblxcdFxcdFxcdGhlaWdodDogXCIsIFwiO1xcblxcdFxcdFwiXSkpLCB3aWR0aCwgaGVpZ2h0KSxcclxuICAgIH07XHJcbn07XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xLCB0ZW1wbGF0ZU9iamVjdF8yO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1WaWRlb1BsYXllci5zdHlsZS5qc3gubWFwIl19 */";

  var makeStyles$5 = function makeStyles(_a) {
    var _b = _a.width,
        width = _b === void 0 ? "100%" : _b,
        _c = _a.height,
        height = _c === void 0 ? "100%" : _c,
        _d = _a.responsive,
        _e = _a.ratio,
        ratio = _e === void 0 ? "16:9" : _e;
    var ratioPerc = ratio.split(":").map(function (x) {
      return Number(x);
    }).reduce(function (x, y) {
      return y / x * 100;
    });
    return {
      containerStyles: /*#__PURE__*/core.css(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject(["\n\t\t\tmax-width: ", ";\n\t\t\t& .video-player {\n\t\t\t}\n\t\t;label:containerStyles;" + _emotionSourceMap$3], ["\n\t\t\tmax-width: ", ";\n\t\t\t& .video-player {\n\t\t\t}\n\t\t;label:containerStyles;" + _emotionSourceMap$3])), breakpoints.medium),
      playerStyles: /*#__PURE__*/core.css(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject(["\n\t\t\twidth: ", ";\n\t\t\theight: ", ";\n\t\t;label:playerStyles;" + _emotionSourceMap2$1], ["\n\t\t\twidth: ", ";\n\t\t\theight: ", ";\n\t\t;label:playerStyles;" + _emotionSourceMap2$1])), width, height)
    };
  };

  var templateObject_1$3, templateObject_2$1;

  function VideoPlayer(_a) {
    var src = _a.src,
        poster = _a.poster,
        playing = _a.playing,
        onPause = _a.onPause,
        autoPlay = _a.autoPlay,
        _b = _a.loop,
        loop = _b === void 0 ? false : _b,
        _c = _a.muted,
        onStart = _a.onStart,
        ratio = _a.ratio,
        onReady = _a.onReady,
        onPlay = _a.onPlay,
        onBuffer = _a.onBuffer,
        onError = _a.onError,
        onEnded = _a.onEnded,
        onDuration = _a.onDuration,
        onProgress = _a.onProgress,
        className = _a.className,
        _d = _a.volume,
        _e = _a.controls,
        controls = _e === void 0 ? true : _e,
        styleProps = __rest(_a, ["src", "poster", "playing", "onPause", "autoPlay", "loop", "muted", "onStart", "ratio", "onReady", "onPlay", "onBuffer", "onError", "onEnded", "onDuration", "onProgress", "className", "volume", "controls"]);

    var _f = makeStyles$5(styleProps),
        playerStyles = _f.playerStyles,
        containerStyles = _f.containerStyles;

    return core.jsx("div", {
      css: containerStyles
    }, core.jsx(ReactPlayer$1, {
      css: playerStyles,
      width: styleProps.responsive ? "100%" : styleProps.width,
      height: styleProps.responsive ? "100%" : styleProps.height,
      url: src,
      autoPlay: autoPlay,
      light: poster || true,
      className: className,
      playing: playing,
      loop: loop,
      controls: controls,
      onStart: onStart,
      onPlay: onPlay,
      onBuffer: onBuffer,
      onReady: onReady,
      onEnded: onEnded,
      onDuration: onDuration,
      onProgress: onProgress,
      config: {
        file: {
          attributes: {
            className: "video-player"
          }
        }
      }
    }));
  }

  var index$e = /*#__PURE__*/React.memo(VideoPlayer);
  exports.Button = index$1;
  exports.Carousel = index$2;
  exports.Checkbox = Checkbox;
  exports.Dropdown = index$3;
  exports.Grid = index$4;
  exports.Header = index$5;
  exports.Link = index$6;
  exports.NavButton = NavButton$1;
  exports.RadioButton = index$7;
  exports.Tab = Tab;
  exports.Tabs = index$9;
  exports.Tag = index$a;
  exports.TagButton = index$8;
  exports.TextField = index$b;
  exports.Typography = index$c;
  exports.VideoPlayer = index$e;
  exports.VideoPreview = index$d;
  exports.theme = index;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}